

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Aug 08 14:08:40 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32   000000                     
    33                           ; Generated 23/03/2023 GMT
    34                           ; 
    35                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4620 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67   000000                     
    68                           	psect	idataCOMRAM
    69   00ECFA                     __pidataCOMRAM:
    70                           	callstack 0
    71                           
    72                           ;initializer for _port_registers
    73   00ECFA  80                 	db	128
    74   00ECFB  0F                 	db	15
    75   00ECFC  81                 	db	129
    76   00ECFD  0F                 	db	15
    77   00ECFE  82                 	db	130
    78   00ECFF  0F                 	db	15
    79   00ED00  83                 	db	131
    80   00ED01  0F                 	db	15
    81   00ED02  84                 	db	132
    82   00ED03  0F                 	db	15
    83                           
    84                           ;initializer for _lat_registers
    85   00ED04  89                 	db	137
    86   00ED05  0F                 	db	15
    87   00ED06  8A                 	db	138
    88   00ED07  0F                 	db	15
    89   00ED08  8B                 	db	139
    90   00ED09  0F                 	db	15
    91   00ED0A  8C                 	db	140
    92   00ED0B  0F                 	db	15
    93   00ED0C  8D                 	db	141
    94   00ED0D  0F                 	db	15
    95                           
    96                           ;initializer for _tris_registers
    97   00ED0E  92                 	db	146
    98   00ED0F  0F                 	db	15
    99   00ED10  93                 	db	147
   100   00ED11  0F                 	db	15
   101   00ED12  94                 	db	148
   102   00ED13  0F                 	db	15
   103   00ED14  95                 	db	149
   104   00ED15  0F                 	db	15
   105   00ED16  96                 	db	150
   106   00ED17  0F                 	db	15
   107                           
   108                           ;initializer for _segment_1
   109   00ED18  02                 	db	2
   110   00ED19  0A                 	db	10
   111   00ED1A  12                 	db	18
   112   00ED1B  1A                 	db	26
   113   00ED1C  00                 	db	0
   114                           
   115                           ;initializer for _set_button
   116   00ED1D  51                 	db	81
   117   00ED1E  00                 	db	0
   118   00ED1F  01                 	db	1
   119                           
   120                           ;initializer for _down_button
   121   00ED20  49                 	db	73
   122   00ED21  00                 	db	0
   123   00ED22  01                 	db	1
   124                           
   125                           ;initializer for _up_button
   126   00ED23  41                 	db	65
   127   00ED24  00                 	db	0
   128   00ED25  01                 	db	1
   129                           
   130                           ;initializer for _segment_6_control
   131   00ED26  2B                 	db	43
   132                           
   133                           ;initializer for _segment_5_control
   134   00ED27  23                 	db	35
   135                           
   136                           ;initializer for _segment_4_control
   137   00ED28  1B                 	db	27
   138                           
   139                           ;initializer for _segment_3_control
   140   00ED29  13                 	db	19
   141                           
   142                           ;initializer for _segment_2_control
   143   00ED2A  0B                 	db	11
   144                           
   145                           ;initializer for _segment_1_control
   146   00ED2B  03                 	db	3
   147   000000                     _PORTE	set	3972
   148   000000                     _PORTD	set	3971
   149   000000                     _PORTC	set	3970
   150   000000                     _PORTB	set	3969
   151   000000                     _PORTA	set	3968
   152   000000                     _LATA	set	3977
   153   000000                     _TRISA	set	3986
   154   000000                     _TRISE	set	3990
   155   000000                     _TRISD	set	3989
   156   000000                     _TRISC	set	3988
   157   000000                     _TRISB	set	3987
   158   000000                     _LATE	set	3981
   159   000000                     _LATD	set	3980
   160   000000                     _LATC	set	3979
   161   000000                     _LATB	set	3978
   162                           
   163                           ; #config settings
   164                           
   165                           	psect	cinit
   166   00ED2C                     __pcinit:
   167                           	callstack 0
   168   00ED2C                     start_initialization:
   169                           	callstack 0
   170   00ED2C                     __initialization:
   171                           	callstack 0
   172                           
   173                           ; Initialize objects allocated to COMRAM (50 bytes)
   174                           ; load TBLPTR registers with __pidataCOMRAM
   175   00ED2C  0EFA               	movlw	low __pidataCOMRAM
   176   00ED2E  6EF6               	movwf	tblptrl,c
   177   00ED30  0EEC               	movlw	high __pidataCOMRAM
   178   00ED32  6EF7               	movwf	tblptrh,c
   179   00ED34  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   180   00ED36  6EF8               	movwf	tblptru,c
   181   00ED38  EE00  F001         	lfsr	0,__pdataCOMRAM
   182   00ED3C  EE10 F032          	lfsr	1,50
   183   00ED40                     copy_data0:
   184   00ED40  0009               	tblrd		*+
   185   00ED42  CFF5 FFEE          	movff	tablat,postinc0
   186   00ED46  50E5               	movf	postdec1,w,c
   187   00ED48  50E1               	movf	fsr1l,w,c
   188   00ED4A  E1FA               	bnz	copy_data0
   189                           
   190                           ; Clear objects allocated to COMRAM (22 bytes)
   191   00ED4C  EE00  F052         	lfsr	0,__pbssCOMRAM
   192   00ED50  0E16               	movlw	22
   193   00ED52                     clear_0:
   194   00ED52  6AEE               	clrf	postinc0,c
   195   00ED54  06E8               	decf	wreg,f,c
   196   00ED56  E1FD               	bnz	clear_0
   197   00ED58                     end_of_initialization:
   198                           	callstack 0
   199   00ED58                     __end_of__initialization:
   200                           	callstack 0
   201   00ED58  0E00               	movlw	low (__Lmediumconst shr (0+16))
   202   00ED5A  6EF8               	movwf	tblptru,c
   203   00ED5C  0100               	movlb	0
   204   00ED5E  EFB7  F07D         	goto	_main	;jump to C main() function
   205                           
   206                           	psect	bssCOMRAM
   207   000052                     __pbssCOMRAM:
   208                           	callstack 0
   209   000052                     _total_secondes:
   210                           	callstack 0
   211   000052                     	ds	4
   212   000056                     _var:
   213                           	callstack 0
   214   000056                     	ds	1
   215   000057                     _counter:
   216                           	callstack 0
   217   000057                     	ds	1
   218   000058                     _seconds:
   219                           	callstack 0
   220   000058                     	ds	1
   221   000059                     _minutes:
   222                           	callstack 0
   223   000059                     	ds	1
   224   00005A                     _hours:
   225                           	callstack 0
   226   00005A                     	ds	1
   227   00005B                     _ret:
   228                           	callstack 0
   229   00005B                     	ds	1
   230   00005C                     _loop_flag:
   231                           	callstack 0
   232   00005C                     	ds	1
   233   00005D                     relay_off@F2888:
   234                           	callstack 0
   235   00005D                     	ds	1
   236   00005E                     relay_on@F2883:
   237                           	callstack 0
   238   00005E                     	ds	1
   239   00005F                     relay_initialization@F2878:
   240                           	callstack 0
   241   00005F                     	ds	1
   242   000060                     led_toggle@F2894:
   243                           	callstack 0
   244   000060                     	ds	1
   245   000061                     led_off@F2889:
   246                           	callstack 0
   247   000061                     	ds	1
   248   000062                     led_on@F2884:
   249                           	callstack 0
   250   000062                     	ds	1
   251   000063                     led_initialization@F2879:
   252                           	callstack 0
   253   000063                     	ds	1
   254   000064                     _set_button_state:
   255                           	callstack 0
   256   000064                     	ds	1
   257   000065                     _down_button_state:
   258                           	callstack 0
   259   000065                     	ds	1
   260   000066                     _up_button_state:
   261                           	callstack 0
   262   000066                     	ds	1
   263   000067                     _buzzer:
   264                           	callstack 0
   265   000067                     	ds	1
   266                           
   267                           	psect	dataCOMRAM
   268   000001                     __pdataCOMRAM:
   269                           	callstack 0
   270   000001                     _port_registers:
   271                           	callstack 0
   272   000001                     	ds	10
   273   00000B                     _lat_registers:
   274                           	callstack 0
   275   00000B                     	ds	10
   276   000015                     _tris_registers:
   277                           	callstack 0
   278   000015                     	ds	10
   279   00001F                     _segment_1:
   280                           	callstack 0
   281   00001F                     	ds	5
   282   000024                     _set_button:
   283                           	callstack 0
   284   000024                     	ds	3
   285   000027                     _down_button:
   286                           	callstack 0
   287   000027                     	ds	3
   288   00002A                     _up_button:
   289                           	callstack 0
   290   00002A                     	ds	3
   291   00002D                     _segment_6_control:
   292                           	callstack 0
   293   00002D                     	ds	1
   294   00002E                     _segment_5_control:
   295                           	callstack 0
   296   00002E                     	ds	1
   297   00002F                     _segment_4_control:
   298                           	callstack 0
   299   00002F                     	ds	1
   300   000030                     _segment_3_control:
   301                           	callstack 0
   302   000030                     	ds	1
   303   000031                     _segment_2_control:
   304                           	callstack 0
   305   000031                     	ds	1
   306   000032                     _segment_1_control:
   307                           	callstack 0
   308   000032                     	ds	1
   309                           
   310                           	psect	cstackCOMRAM
   311   000033                     __pcstackCOMRAM:
   312                           	callstack 0
   313   000033                     ?___wmul:
   314                           	callstack 0
   315   000033                     ?___awdiv:
   316                           	callstack 0
   317   000033                     ?___awmod:
   318                           	callstack 0
   319   000033                     gpio_pin_write_logic@_pin_config:
   320                           	callstack 0
   321   000033                     gpio_pin_read_logic@_pin_config:
   322                           	callstack 0
   323   000033                     ___wmul@multiplier:
   324                           	callstack 0
   325   000033                     ___awdiv@dividend:
   326                           	callstack 0
   327   000033                     ___awmod@dividend:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x0
   331   000033                     	ds	2
   332   000035                     gpio_pin_write_logic@_logic:
   333                           	callstack 0
   334   000035                     gpio_pin_read_logic@_logic:
   335                           	callstack 0
   336   000035                     ___wmul@multiplicand:
   337                           	callstack 0
   338   000035                     ___awdiv@divisor:
   339                           	callstack 0
   340   000035                     ___awmod@divisor:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x2
   344   000035                     	ds	1
   345   000036                     ??_gpio_pin_write_logic:
   346                           
   347                           ; 1 bytes @ 0x3
   348   000036                     	ds	1
   349   000037                     ??_gpio_pin_read_logic:
   350   000037                     ___awdiv@counter:
   351                           	callstack 0
   352   000037                     ___awmod@counter:
   353                           	callstack 0
   354   000037                     ___wmul@product:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x4
   358   000037                     	ds	1
   359   000038                     ___awdiv@sign:
   360                           	callstack 0
   361   000038                     ___awmod@sign:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x5
   365   000038                     	ds	1
   366   000039                     ___awdiv@quotient:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x6
   370   000039                     	ds	3
   371   00003C                     gpio_pin_write_logic@ret:
   372                           	callstack 0
   373   00003C                     button_read_logic@btn:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x9
   377   00003C                     	ds	1
   378   00003D                     seven_segment_write_number@seg_config:
   379                           	callstack 0
   380   00003D                     seven_segment_control_turn_on@seg_config:
   381                           	callstack 0
   382   00003D                     seven_segment_control_turn_off@seg_config:
   383                           	callstack 0
   384   00003D                     gpio_pin_direction_init@_pin_config:
   385                           	callstack 0
   386   00003D                     buzzer_on@buzzer_config:
   387                           	callstack 0
   388   00003D                     buzzer_off@buzzer_config:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0xA
   392   00003D                     	ds	1
   393   00003E                     button_read_logic@state:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0xB
   397   00003E                     	ds	1
   398   00003F                     ??_gpio_pin_direction_init:
   399   00003F                     seven_segment_write_number@number:
   400                           	callstack 0
   401   00003F                     seven_segment_control_turn_on@pin_config:
   402                           	callstack 0
   403   00003F                     seven_segment_control_turn_off@pin_config:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0xC
   407   00003F                     	ds	1
   408   000040                     ??_button_read_logic:
   409                           
   410                           ; 1 bytes @ 0xD
   411   000040                     	ds	1
   412   000041                     button_read_logic@Pin_Logic_Status:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0xE
   416   000041                     	ds	1
   417   000042                     
   418                           ; 1 bytes @ 0xF
   419   000042                     	ds	3
   420   000045                     gpio_pin_direction_init@ret:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x12
   424   000045                     	ds	1
   425   000046                     seven_segment_initialize@seg_config:
   426                           	callstack 0
   427   000046                     seven_segment_control_initialize@pin_config:
   428                           	callstack 0
   429   000046                     button_initialization@btn:
   430                           	callstack 0
   431   000046                     buzzer_initialization@buzzer_config:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x13
   435   000046                     	ds	2
   436   000048                     ??_main:
   437                           
   438                           ; 1 bytes @ 0x15
   439   000048                     	ds	8
   440   000050                     _main$570:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x1D
   444   000050                     	ds	2
   445                           
   446 ;;
   447 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   448 ;;
   449 ;; *************** function _main *****************
   450 ;; Defined at:
   451 ;;		line 134 in file "application.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  2  358[None  ] int 
   458 ;; Registers used:
   459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   466 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   467 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   468 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   469 ;;Total ram usage:       10 bytes
   470 ;; Hardware stack levels required when called: 4
   471 ;; This function calls:
   472 ;;		___awdiv
   473 ;;		___awmod
   474 ;;		___wmul
   475 ;;		_application_init
   476 ;;		_button_read_logic
   477 ;;		_buzzer_off
   478 ;;		_buzzer_on
   479 ;;		_seven_segment_control_turn_off
   480 ;;		_seven_segment_control_turn_on
   481 ;;		_seven_segment_write_number
   482 ;;		_timer_init
   483 ;; This function is called by:
   484 ;;		Startup code after reset
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           	psect	text0
   489   00FB6E                     __ptext0:
   490                           	callstack 0
   491   00FB6E                     _main:
   492                           	callstack 27
   493   00FB6E                     
   494                           ;application.c: 135:     application_init();
   495   00FB6E  EC37  F077         	call	_application_init	;wreg free
   496   00FB72                     
   497                           ;application.c: 136:     total_secondes = ( (hours * 60 * 60) + (minutes * 60) + (second
      +                          s) );
   498   00FB72  C058  F048         	movff	_seconds,??_main
   499   00FB76  6A49               	clrf	(??_main+1)^0,c
   500   00FB78  BE48               	btfsc	??_main^0,7,c
   501   00FB7A  0649               	decf	(??_main+1)^0,f,c
   502   00FB7C  505A               	movf	_hours^0,w,c
   503   00FB7E  6E33               	movwf	___wmul@multiplier^0,c
   504   00FB80  6A34               	clrf	(___wmul@multiplier+1)^0,c
   505   00FB82  BE33               	btfsc	___wmul@multiplier^0,7,c
   506   00FB84  0634               	decf	(___wmul@multiplier+1)^0,f,c
   507   00FB86  0E0E               	movlw	14
   508   00FB88  6E36               	movwf	(___wmul@multiplicand+1)^0,c
   509   00FB8A  0E10               	movlw	16
   510   00FB8C  6E35               	movwf	___wmul@multiplicand^0,c
   511   00FB8E  EC42  F076         	call	___wmul	;wreg free
   512   00FB92  C033  F04A         	movff	?___wmul,??_main+2
   513   00FB96  C034  F04B         	movff	?___wmul+1,??_main+3
   514   00FB9A  5059               	movf	_minutes^0,w,c
   515   00FB9C  6E33               	movwf	___wmul@multiplier^0,c
   516   00FB9E  6A34               	clrf	(___wmul@multiplier+1)^0,c
   517   00FBA0  BE33               	btfsc	___wmul@multiplier^0,7,c
   518   00FBA2  0634               	decf	(___wmul@multiplier+1)^0,f,c
   519   00FBA4  0E00               	movlw	0
   520   00FBA6  6E36               	movwf	(___wmul@multiplicand+1)^0,c
   521   00FBA8  0E3C               	movlw	60
   522   00FBAA  6E35               	movwf	___wmul@multiplicand^0,c
   523   00FBAC  EC42  F076         	call	___wmul	;wreg free
   524   00FBB0  5033               	movf	?___wmul^0,w,c
   525   00FBB2  244A               	addwf	(??_main+2)^0,w,c
   526   00FBB4  6E4C               	movwf	(??_main+4)^0,c
   527   00FBB6  5034               	movf	(?___wmul+1)^0,w,c
   528   00FBB8  204B               	addwfc	(??_main+3)^0,w,c
   529   00FBBA  6E4D               	movwf	(??_main+5)^0,c
   530   00FBBC  5048               	movf	??_main^0,w,c
   531   00FBBE  244C               	addwf	(??_main+4)^0,w,c
   532   00FBC0  6E4E               	movwf	(??_main+6)^0,c
   533   00FBC2  5049               	movf	(??_main+1)^0,w,c
   534   00FBC4  204D               	addwfc	(??_main+5)^0,w,c
   535   00FBC6  6E4F               	movwf	(??_main+7)^0,c
   536   00FBC8  C04E  F052         	movff	??_main+6,_total_secondes
   537   00FBCC  C04F  F053         	movff	??_main+7,_total_secondes+1
   538   00FBD0  0E00               	movlw	0
   539   00FBD2  BE53               	btfsc	(_total_secondes+1)^0,7,c
   540   00FBD4  0EFF               	movlw	-1
   541   00FBD6  6E54               	movwf	(_total_secondes+2)^0,c
   542   00FBD8  6E55               	movwf	(_total_secondes+3)^0,c
   543   00FBDA                     l2574:
   544                           
   545                           ;application.c: 138:     {;application.c: 139:         if( (total_secondes == 0) && (loo
      +                          p_flag.flag == 1) )
   546   00FBDA  5052               	movf	_total_secondes^0,w,c
   547   00FBDC  1053               	iorwf	(_total_secondes+1)^0,w,c
   548   00FBDE  1054               	iorwf	(_total_secondes+2)^0,w,c
   549   00FBE0  1055               	iorwf	(_total_secondes+3)^0,w,c
   550   00FBE2  A4D8               	btfss	status,2,c
   551   00FBE4  EFF6  F07D         	goto	u2411
   552   00FBE8  EFF8  F07D         	goto	u2410
   553   00FBEC                     u2411:
   554   00FBEC  EF78  F07E         	goto	l2598
   555   00FBF0                     u2410:
   556   00FBF0  A05C               	btfss	_loop_flag^0,0,c
   557   00FBF2  EFFD  F07D         	goto	u2421
   558   00FBF6  EFFF  F07D         	goto	u2420
   559   00FBFA                     u2421:
   560   00FBFA  EF78  F07E         	goto	l2598
   561   00FBFE                     u2420:
   562   00FBFE                     
   563                           ;application.c: 140:         {;application.c: 141:             button_read_logic(&set_bu
      +                          tton, &set_button_state);
   564   00FBFE  0E24               	movlw	low _set_button
   565   00FC00  6E3C               	movwf	button_read_logic@btn^0,c
   566   00FC02  0E00               	movlw	high _set_button
   567   00FC04  6E3D               	movwf	(button_read_logic@btn+1)^0,c
   568   00FC06  0E64               	movlw	low _set_button_state
   569   00FC08  6E3E               	movwf	button_read_logic@state^0,c
   570   00FC0A  0E00               	movlw	high _set_button_state
   571   00FC0C  6E3F               	movwf	(button_read_logic@state+1)^0,c
   572   00FC0E  ECA5  F07A         	call	_button_read_logic	;wreg free
   573                           
   574                           ;application.c: 142:             button_read_logic(&up_button, &up_button_state);
   575   00FC12  0E2A               	movlw	low _up_button
   576   00FC14  6E3C               	movwf	button_read_logic@btn^0,c
   577   00FC16  0E00               	movlw	high _up_button
   578   00FC18  6E3D               	movwf	(button_read_logic@btn+1)^0,c
   579   00FC1A  0E66               	movlw	low _up_button_state
   580   00FC1C  6E3E               	movwf	button_read_logic@state^0,c
   581   00FC1E  0E00               	movlw	high _up_button_state
   582   00FC20  6E3F               	movwf	(button_read_logic@state+1)^0,c
   583   00FC22  ECA5  F07A         	call	_button_read_logic	;wreg free
   584                           
   585                           ;application.c: 144:             buzzer_on(&buzzer);
   586   00FC26  0E67               	movlw	low _buzzer
   587   00FC28  6E3D               	movwf	buzzer_on@buzzer_config^0,c
   588   00FC2A  0E00               	movlw	high _buzzer
   589   00FC2C  6E3E               	movwf	(buzzer_on@buzzer_config+1)^0,c
   590   00FC2E  EC69  F076         	call	_buzzer_on	;wreg free
   591   00FC32                     
   592                           ;application.c: 145:             if(up_button_state == BUTTON_PRESSED) {
   593   00FC32  0466               	decf	_up_button_state^0,w,c
   594   00FC34  A4D8               	btfss	status,2,c
   595   00FC36  EF1F  F07E         	goto	u2431
   596   00FC3A  EF21  F07E         	goto	u2430
   597   00FC3E                     u2431:
   598   00FC3E  EF28  F07E         	goto	l2586
   599   00FC42                     u2430:
   600   00FC42                     
   601                           ;application.c: 146:                 loop_flag.flag = 0;
   602   00FC42  905C               	bcf	_loop_flag^0,0,c
   603   00FC44                     
   604                           ;application.c: 147:                 buzzer_off(&buzzer);
   605   00FC44  0E67               	movlw	low _buzzer
   606   00FC46  6E3D               	movwf	buzzer_off@buzzer_config^0,c
   607   00FC48  0E00               	movlw	high _buzzer
   608   00FC4A  6E3E               	movwf	(buzzer_off@buzzer_config+1)^0,c
   609   00FC4C  EC55  F076         	call	_buzzer_off	;wreg free
   610   00FC50                     l2586:
   611                           
   612                           ;application.c: 149:             if(set_button_state == BUTTON_PRESSED)
   613   00FC50  0464               	decf	_set_button_state^0,w,c
   614   00FC52  A4D8               	btfss	status,2,c
   615   00FC54  EF2E  F07E         	goto	u2441
   616   00FC58  EF30  F07E         	goto	u2440
   617   00FC5C                     u2441:
   618   00FC5C  EFED  F07D         	goto	l2574
   619   00FC60                     u2440:
   620   00FC60                     
   621                           ;application.c: 150:             {;application.c: 151:                 buzzer_off(&buzze
      +                          r);
   622   00FC60  0E67               	movlw	low _buzzer
   623   00FC62  6E3D               	movwf	buzzer_off@buzzer_config^0,c
   624   00FC64  0E00               	movlw	high _buzzer
   625   00FC66  6E3E               	movwf	(buzzer_off@buzzer_config+1)^0,c
   626   00FC68  EC55  F076         	call	_buzzer_off	;wreg free
   627   00FC6C                     
   628                           ;application.c: 152:                 _delay((unsigned long)((5)*(4000000UL/4000.0)));
   629   00FC6C  0E07               	movlw	7
   630   00FC6E  6E48               	movwf	??_main^0,c
   631   00FC70  0E7D               	movlw	125
   632   00FC72                     u2537:
   633   00FC72  2EE8               	decfsz	wreg,f,c
   634   00FC74  D7FE               	bra	u2537
   635   00FC76  2E48               	decfsz	??_main^0,f,c
   636   00FC78  D7FC               	bra	u2537
   637   00FC7A  F000               	nop	
   638   00FC7C                     
   639                           ;application.c: 153:                 timer_init();
   640   00FC7C  EC6F  F07B         	call	_timer_init	;wreg free
   641   00FC80                     
   642                           ;application.c: 154:                 total_secondes = ( (hours * 60 * 60) + (minutes * 6
      +                          0) + (seconds) );
   643   00FC80  C058  F048         	movff	_seconds,??_main
   644   00FC84  6A49               	clrf	(??_main+1)^0,c
   645   00FC86  BE48               	btfsc	??_main^0,7,c
   646   00FC88  0649               	decf	(??_main+1)^0,f,c
   647   00FC8A  505A               	movf	_hours^0,w,c
   648   00FC8C  6E33               	movwf	___wmul@multiplier^0,c
   649   00FC8E  6A34               	clrf	(___wmul@multiplier+1)^0,c
   650   00FC90  BE33               	btfsc	___wmul@multiplier^0,7,c
   651   00FC92  0634               	decf	(___wmul@multiplier+1)^0,f,c
   652   00FC94  0E0E               	movlw	14
   653   00FC96  6E36               	movwf	(___wmul@multiplicand+1)^0,c
   654   00FC98  0E10               	movlw	16
   655   00FC9A  6E35               	movwf	___wmul@multiplicand^0,c
   656   00FC9C  EC42  F076         	call	___wmul	;wreg free
   657   00FCA0  C033  F04A         	movff	?___wmul,??_main+2
   658   00FCA4  C034  F04B         	movff	?___wmul+1,??_main+3
   659   00FCA8  5059               	movf	_minutes^0,w,c
   660   00FCAA  6E33               	movwf	___wmul@multiplier^0,c
   661   00FCAC  6A34               	clrf	(___wmul@multiplier+1)^0,c
   662   00FCAE  BE33               	btfsc	___wmul@multiplier^0,7,c
   663   00FCB0  0634               	decf	(___wmul@multiplier+1)^0,f,c
   664   00FCB2  0E00               	movlw	0
   665   00FCB4  6E36               	movwf	(___wmul@multiplicand+1)^0,c
   666   00FCB6  0E3C               	movlw	60
   667   00FCB8  6E35               	movwf	___wmul@multiplicand^0,c
   668   00FCBA  EC42  F076         	call	___wmul	;wreg free
   669   00FCBE  5033               	movf	?___wmul^0,w,c
   670   00FCC0  244A               	addwf	(??_main+2)^0,w,c
   671   00FCC2  6E4C               	movwf	(??_main+4)^0,c
   672   00FCC4  5034               	movf	(?___wmul+1)^0,w,c
   673   00FCC6  204B               	addwfc	(??_main+3)^0,w,c
   674   00FCC8  6E4D               	movwf	(??_main+5)^0,c
   675   00FCCA  5048               	movf	??_main^0,w,c
   676   00FCCC  244C               	addwf	(??_main+4)^0,w,c
   677   00FCCE  6E4E               	movwf	(??_main+6)^0,c
   678   00FCD0  5049               	movf	(??_main+1)^0,w,c
   679   00FCD2  204D               	addwfc	(??_main+5)^0,w,c
   680   00FCD4  6E4F               	movwf	(??_main+7)^0,c
   681   00FCD6  C04E  F052         	movff	??_main+6,_total_secondes
   682   00FCDA  C04F  F053         	movff	??_main+7,_total_secondes+1
   683   00FCDE  0E00               	movlw	0
   684   00FCE0  BE53               	btfsc	(_total_secondes+1)^0,7,c
   685   00FCE2  0EFF               	movlw	-1
   686   00FCE4  6E54               	movwf	(_total_secondes+2)^0,c
   687   00FCE6  6E55               	movwf	(_total_secondes+3)^0,c
   688   00FCE8                     
   689                           ;application.c: 155:                 set_button_state = BUTTON_RELEASED;
   690   00FCE8  0E00               	movlw	0
   691   00FCEA  6E64               	movwf	_set_button_state^0,c
   692   00FCEC  EFED  F07D         	goto	l2574
   693   00FCF0                     l2598:
   694   00FCF0  5052               	movf	_total_secondes^0,w,c
   695   00FCF2  1053               	iorwf	(_total_secondes+1)^0,w,c
   696   00FCF4  1054               	iorwf	(_total_secondes+2)^0,w,c
   697   00FCF6  1055               	iorwf	(_total_secondes+3)^0,w,c
   698   00FCF8  B4D8               	btfsc	status,2,c
   699   00FCFA  EF81  F07E         	goto	u2451
   700   00FCFE  EF83  F07E         	goto	u2450
   701   00FD02                     u2451:
   702   00FD02  EFFC  F07F         	goto	l363
   703   00FD06                     u2450:
   704   00FD06                     
   705                           ;application.c: 161:             total_secondes--;
   706   00FD06  0652               	decf	_total_secondes^0,f,c
   707   00FD08  0E00               	movlw	0
   708   00FD0A  5A53               	subwfb	(_total_secondes+1)^0,f,c
   709   00FD0C  5A54               	subwfb	(_total_secondes+2)^0,f,c
   710   00FD0E  5A55               	subwfb	(_total_secondes+3)^0,f,c
   711   00FD10                     
   712                           ;application.c: 162:             for(counter = 0; counter <= 50; counter++)
   713   00FD10  0E00               	movlw	0
   714   00FD12  6E57               	movwf	_counter^0,c
   715   00FD14                     l2608:
   716                           
   717                           ;application.c: 163:             {;application.c: 164:                 seven_segment_wri
      +                          te_number(&segment_1, (uint8)(seconds % 10));
   718   00FD14  0E1F               	movlw	low _segment_1
   719   00FD16  6E3D               	movwf	seven_segment_write_number@seg_config^0,c
   720   00FD18  0E00               	movlw	high _segment_1
   721   00FD1A  6E3E               	movwf	(seven_segment_write_number@seg_config+1)^0,c
   722   00FD1C  5058               	movf	_seconds^0,w,c
   723   00FD1E  6E33               	movwf	___awmod@dividend^0,c
   724   00FD20  6A34               	clrf	(___awmod@dividend+1)^0,c
   725   00FD22  BE33               	btfsc	___awmod@dividend^0,7,c
   726   00FD24  0634               	decf	(___awmod@dividend+1)^0,f,c
   727   00FD26  0E00               	movlw	0
   728   00FD28  6E36               	movwf	(___awmod@divisor+1)^0,c
   729   00FD2A  0E0A               	movlw	10
   730   00FD2C  6E35               	movwf	___awmod@divisor^0,c
   731   00FD2E  ECC6  F077         	call	___awmod	;wreg free
   732   00FD32  5033               	movf	?___awmod^0,w,c
   733   00FD34  6E3F               	movwf	seven_segment_write_number@number^0,c
   734   00FD36  ECDD  F078         	call	_seven_segment_write_number	;wreg free
   735                           
   736                           ;application.c: 165:                 seven_segment_control_turn_on(&segment_1, &segment_
      +                          6_control);
   737   00FD3A  0E1F               	movlw	low _segment_1
   738   00FD3C  6E3D               	movwf	seven_segment_control_turn_on@seg_config^0,c
   739   00FD3E  0E00               	movlw	high _segment_1
   740   00FD40  6E3E               	movwf	(seven_segment_control_turn_on@seg_config+1)^0,c
   741   00FD42  0E2D               	movlw	low _segment_6_control
   742   00FD44  6E3F               	movwf	seven_segment_control_turn_on@pin_config^0,c
   743   00FD46  0E00               	movlw	high _segment_6_control
   744   00FD48  6E40               	movwf	(seven_segment_control_turn_on@pin_config+1)^0,c
   745   00FD4A  ECF4  F076         	call	_seven_segment_control_turn_on	;wreg free
   746   00FD4E                     
   747                           ;application.c: 166:                 _delay((unsigned long)((100)*(4000000UL/4000000.0))
      +                          );
   748   00FD4E  0E21               	movlw	33
   749   00FD50                     u2547:
   750   00FD50  2EE8               	decfsz	wreg,f,c
   751   00FD52  D7FE               	bra	u2547
   752   00FD54  F000               	nop	
   753   00FD56                     
   754                           ;application.c: 167:                 seven_segment_control_turn_off(&segment_1, &segment
      +                          _6_control);
   755   00FD56  0E1F               	movlw	low _segment_1
   756   00FD58  6E3D               	movwf	seven_segment_control_turn_off@seg_config^0,c
   757   00FD5A  0E00               	movlw	high _segment_1
   758   00FD5C  6E3E               	movwf	(seven_segment_control_turn_off@seg_config+1)^0,c
   759   00FD5E  0E2D               	movlw	low _segment_6_control
   760   00FD60  6E3F               	movwf	seven_segment_control_turn_off@pin_config^0,c
   761   00FD62  0E00               	movlw	high _segment_6_control
   762   00FD64  6E40               	movwf	(seven_segment_control_turn_off@pin_config+1)^0,c
   763   00FD66  ECB1  F076         	call	_seven_segment_control_turn_off	;wreg free
   764                           
   765                           ;application.c: 168:                 _delay((unsigned long)((100)*(4000000UL/4000000.0))
      +                          );
   766   00FD6A  0E21               	movlw	33
   767   00FD6C                     u2557:
   768   00FD6C  2EE8               	decfsz	wreg,f,c
   769   00FD6E  D7FE               	bra	u2557
   770   00FD70  F000               	nop	
   771   00FD72                     
   772                           ;application.c: 170:                 seven_segment_write_number(&segment_1, (uint8)(seco
      +                          nds / 10));
   773   00FD72  0E1F               	movlw	low _segment_1
   774   00FD74  6E3D               	movwf	seven_segment_write_number@seg_config^0,c
   775   00FD76  0E00               	movlw	high _segment_1
   776   00FD78  6E3E               	movwf	(seven_segment_write_number@seg_config+1)^0,c
   777   00FD7A  5058               	movf	_seconds^0,w,c
   778   00FD7C  6E33               	movwf	___awdiv@dividend^0,c
   779   00FD7E  6A34               	clrf	(___awdiv@dividend+1)^0,c
   780   00FD80  BE33               	btfsc	___awdiv@dividend^0,7,c
   781   00FD82  0634               	decf	(___awdiv@dividend+1)^0,f,c
   782   00FD84  0E00               	movlw	0
   783   00FD86  6E36               	movwf	(___awdiv@divisor+1)^0,c
   784   00FD88  0E0A               	movlw	10
   785   00FD8A  6E35               	movwf	___awdiv@divisor^0,c
   786   00FD8C  EC7B  F078         	call	___awdiv	;wreg free
   787   00FD90  5033               	movf	?___awdiv^0,w,c
   788   00FD92  6E3F               	movwf	seven_segment_write_number@number^0,c
   789   00FD94  ECDD  F078         	call	_seven_segment_write_number	;wreg free
   790   00FD98                     
   791                           ;application.c: 171:                 seven_segment_control_turn_on(&segment_1, &segment_
      +                          5_control);
   792   00FD98  0E1F               	movlw	low _segment_1
   793   00FD9A  6E3D               	movwf	seven_segment_control_turn_on@seg_config^0,c
   794   00FD9C  0E00               	movlw	high _segment_1
   795   00FD9E  6E3E               	movwf	(seven_segment_control_turn_on@seg_config+1)^0,c
   796   00FDA0  0E2E               	movlw	low _segment_5_control
   797   00FDA2  6E3F               	movwf	seven_segment_control_turn_on@pin_config^0,c
   798   00FDA4  0E00               	movlw	high _segment_5_control
   799   00FDA6  6E40               	movwf	(seven_segment_control_turn_on@pin_config+1)^0,c
   800   00FDA8  ECF4  F076         	call	_seven_segment_control_turn_on	;wreg free
   801                           
   802                           ;application.c: 172:                 _delay((unsigned long)((100)*(4000000UL/4000000.0))
      +                          );
   803   00FDAC  0E21               	movlw	33
   804   00FDAE                     u2567:
   805   00FDAE  2EE8               	decfsz	wreg,f,c
   806   00FDB0  D7FE               	bra	u2567
   807   00FDB2  F000               	nop	
   808   00FDB4                     
   809                           ;application.c: 173:                 seven_segment_control_turn_off(&segment_1, &segment
      +                          _5_control);
   810   00FDB4  0E1F               	movlw	low _segment_1
   811   00FDB6  6E3D               	movwf	seven_segment_control_turn_off@seg_config^0,c
   812   00FDB8  0E00               	movlw	high _segment_1
   813   00FDBA  6E3E               	movwf	(seven_segment_control_turn_off@seg_config+1)^0,c
   814   00FDBC  0E2E               	movlw	low _segment_5_control
   815   00FDBE  6E3F               	movwf	seven_segment_control_turn_off@pin_config^0,c
   816   00FDC0  0E00               	movlw	high _segment_5_control
   817   00FDC2  6E40               	movwf	(seven_segment_control_turn_off@pin_config+1)^0,c
   818   00FDC4  ECB1  F076         	call	_seven_segment_control_turn_off	;wreg free
   819   00FDC8                     
   820                           ;application.c: 174:                 _delay((unsigned long)((100)*(4000000UL/4000000.0))
      +                          );
   821   00FDC8  0E21               	movlw	33
   822   00FDCA                     u2577:
   823   00FDCA  2EE8               	decfsz	wreg,f,c
   824   00FDCC  D7FE               	bra	u2577
   825   00FDCE  F000               	nop	
   826                           
   827                           ;application.c: 177:                 seven_segment_write_number(&segment_1, (uint8)(minu
      +                          tes % 10));
   828   00FDD0  0E1F               	movlw	low _segment_1
   829   00FDD2  6E3D               	movwf	seven_segment_write_number@seg_config^0,c
   830   00FDD4  0E00               	movlw	high _segment_1
   831   00FDD6  6E3E               	movwf	(seven_segment_write_number@seg_config+1)^0,c
   832   00FDD8  5059               	movf	_minutes^0,w,c
   833   00FDDA  6E33               	movwf	___awmod@dividend^0,c
   834   00FDDC  6A34               	clrf	(___awmod@dividend+1)^0,c
   835   00FDDE  BE33               	btfsc	___awmod@dividend^0,7,c
   836   00FDE0  0634               	decf	(___awmod@dividend+1)^0,f,c
   837   00FDE2  0E00               	movlw	0
   838   00FDE4  6E36               	movwf	(___awmod@divisor+1)^0,c
   839   00FDE6  0E0A               	movlw	10
   840   00FDE8  6E35               	movwf	___awmod@divisor^0,c
   841   00FDEA  ECC6  F077         	call	___awmod	;wreg free
   842   00FDEE  5033               	movf	?___awmod^0,w,c
   843   00FDF0  6E3F               	movwf	seven_segment_write_number@number^0,c
   844   00FDF2  ECDD  F078         	call	_seven_segment_write_number	;wreg free
   845                           
   846                           ;application.c: 178:                 seven_segment_control_turn_on(&segment_1, &segment_
      +                          4_control);
   847   00FDF6  0E1F               	movlw	low _segment_1
   848   00FDF8  6E3D               	movwf	seven_segment_control_turn_on@seg_config^0,c
   849   00FDFA  0E00               	movlw	high _segment_1
   850   00FDFC  6E3E               	movwf	(seven_segment_control_turn_on@seg_config+1)^0,c
   851   00FDFE  0E2F               	movlw	low _segment_4_control
   852   00FE00  6E3F               	movwf	seven_segment_control_turn_on@pin_config^0,c
   853   00FE02  0E00               	movlw	high _segment_4_control
   854   00FE04  6E40               	movwf	(seven_segment_control_turn_on@pin_config+1)^0,c
   855   00FE06  ECF4  F076         	call	_seven_segment_control_turn_on	;wreg free
   856   00FE0A                     
   857                           ;application.c: 179:                 _delay((unsigned long)((100)*(4000000UL/4000000.0))
      +                          );
   858   00FE0A  0E21               	movlw	33
   859   00FE0C                     u2587:
   860   00FE0C  2EE8               	decfsz	wreg,f,c
   861   00FE0E  D7FE               	bra	u2587
   862   00FE10  F000               	nop	
   863   00FE12                     
   864                           ;application.c: 180:                 seven_segment_control_turn_off(&segment_1, &segment
      +                          _4_control);
   865   00FE12  0E1F               	movlw	low _segment_1
   866   00FE14  6E3D               	movwf	seven_segment_control_turn_off@seg_config^0,c
   867   00FE16  0E00               	movlw	high _segment_1
   868   00FE18  6E3E               	movwf	(seven_segment_control_turn_off@seg_config+1)^0,c
   869   00FE1A  0E2F               	movlw	low _segment_4_control
   870   00FE1C  6E3F               	movwf	seven_segment_control_turn_off@pin_config^0,c
   871   00FE1E  0E00               	movlw	high _segment_4_control
   872   00FE20  6E40               	movwf	(seven_segment_control_turn_off@pin_config+1)^0,c
   873   00FE22  ECB1  F076         	call	_seven_segment_control_turn_off	;wreg free
   874                           
   875                           ;application.c: 181:                 _delay((unsigned long)((100)*(4000000UL/4000000.0))
      +                          );
   876   00FE26  0E21               	movlw	33
   877   00FE28                     u2597:
   878   00FE28  2EE8               	decfsz	wreg,f,c
   879   00FE2A  D7FE               	bra	u2597
   880   00FE2C  F000               	nop	
   881   00FE2E                     
   882                           ;application.c: 183:                 seven_segment_write_number(&segment_1, (uint8)(minu
      +                          tes / 10));
   883   00FE2E  0E1F               	movlw	low _segment_1
   884   00FE30  6E3D               	movwf	seven_segment_write_number@seg_config^0,c
   885   00FE32  0E00               	movlw	high _segment_1
   886   00FE34  6E3E               	movwf	(seven_segment_write_number@seg_config+1)^0,c
   887   00FE36  5059               	movf	_minutes^0,w,c
   888   00FE38  6E33               	movwf	___awdiv@dividend^0,c
   889   00FE3A  6A34               	clrf	(___awdiv@dividend+1)^0,c
   890   00FE3C  BE33               	btfsc	___awdiv@dividend^0,7,c
   891   00FE3E  0634               	decf	(___awdiv@dividend+1)^0,f,c
   892   00FE40  0E00               	movlw	0
   893   00FE42  6E36               	movwf	(___awdiv@divisor+1)^0,c
   894   00FE44  0E0A               	movlw	10
   895   00FE46  6E35               	movwf	___awdiv@divisor^0,c
   896   00FE48  EC7B  F078         	call	___awdiv	;wreg free
   897   00FE4C  5033               	movf	?___awdiv^0,w,c
   898   00FE4E  6E3F               	movwf	seven_segment_write_number@number^0,c
   899   00FE50  ECDD  F078         	call	_seven_segment_write_number	;wreg free
   900   00FE54                     
   901                           ;application.c: 184:                 seven_segment_control_turn_on(&segment_1, &segment_
      +                          3_control);
   902   00FE54  0E1F               	movlw	low _segment_1
   903   00FE56  6E3D               	movwf	seven_segment_control_turn_on@seg_config^0,c
   904   00FE58  0E00               	movlw	high _segment_1
   905   00FE5A  6E3E               	movwf	(seven_segment_control_turn_on@seg_config+1)^0,c
   906   00FE5C  0E30               	movlw	low _segment_3_control
   907   00FE5E  6E3F               	movwf	seven_segment_control_turn_on@pin_config^0,c
   908   00FE60  0E00               	movlw	high _segment_3_control
   909   00FE62  6E40               	movwf	(seven_segment_control_turn_on@pin_config+1)^0,c
   910   00FE64  ECF4  F076         	call	_seven_segment_control_turn_on	;wreg free
   911                           
   912                           ;application.c: 185:                 _delay((unsigned long)((100)*(4000000UL/4000000.0))
      +                          );
   913   00FE68  0E21               	movlw	33
   914   00FE6A                     u2607:
   915   00FE6A  2EE8               	decfsz	wreg,f,c
   916   00FE6C  D7FE               	bra	u2607
   917   00FE6E  F000               	nop	
   918   00FE70                     
   919                           ;application.c: 186:                 seven_segment_control_turn_off(&segment_1, &segment
      +                          _3_control);
   920   00FE70  0E1F               	movlw	low _segment_1
   921   00FE72  6E3D               	movwf	seven_segment_control_turn_off@seg_config^0,c
   922   00FE74  0E00               	movlw	high _segment_1
   923   00FE76  6E3E               	movwf	(seven_segment_control_turn_off@seg_config+1)^0,c
   924   00FE78  0E30               	movlw	low _segment_3_control
   925   00FE7A  6E3F               	movwf	seven_segment_control_turn_off@pin_config^0,c
   926   00FE7C  0E00               	movlw	high _segment_3_control
   927   00FE7E  6E40               	movwf	(seven_segment_control_turn_off@pin_config+1)^0,c
   928   00FE80  ECB1  F076         	call	_seven_segment_control_turn_off	;wreg free
   929   00FE84                     
   930                           ;application.c: 187:                 _delay((unsigned long)((100)*(4000000UL/4000000.0))
      +                          );
   931   00FE84  0E21               	movlw	33
   932   00FE86                     u2617:
   933   00FE86  2EE8               	decfsz	wreg,f,c
   934   00FE88  D7FE               	bra	u2617
   935   00FE8A  F000               	nop	
   936                           
   937                           ;application.c: 189:                 seven_segment_write_number(&segment_1, (uint8)(hour
      +                          s % 10));
   938   00FE8C  0E1F               	movlw	low _segment_1
   939   00FE8E  6E3D               	movwf	seven_segment_write_number@seg_config^0,c
   940   00FE90  0E00               	movlw	high _segment_1
   941   00FE92  6E3E               	movwf	(seven_segment_write_number@seg_config+1)^0,c
   942   00FE94  505A               	movf	_hours^0,w,c
   943   00FE96  6E33               	movwf	___awmod@dividend^0,c
   944   00FE98  6A34               	clrf	(___awmod@dividend+1)^0,c
   945   00FE9A  BE33               	btfsc	___awmod@dividend^0,7,c
   946   00FE9C  0634               	decf	(___awmod@dividend+1)^0,f,c
   947   00FE9E  0E00               	movlw	0
   948   00FEA0  6E36               	movwf	(___awmod@divisor+1)^0,c
   949   00FEA2  0E0A               	movlw	10
   950   00FEA4  6E35               	movwf	___awmod@divisor^0,c
   951   00FEA6  ECC6  F077         	call	___awmod	;wreg free
   952   00FEAA  5033               	movf	?___awmod^0,w,c
   953   00FEAC  6E3F               	movwf	seven_segment_write_number@number^0,c
   954   00FEAE  ECDD  F078         	call	_seven_segment_write_number	;wreg free
   955                           
   956                           ;application.c: 190:                 seven_segment_control_turn_on(&segment_1, &segment_
      +                          2_control);
   957   00FEB2  0E1F               	movlw	low _segment_1
   958   00FEB4  6E3D               	movwf	seven_segment_control_turn_on@seg_config^0,c
   959   00FEB6  0E00               	movlw	high _segment_1
   960   00FEB8  6E3E               	movwf	(seven_segment_control_turn_on@seg_config+1)^0,c
   961   00FEBA  0E31               	movlw	low _segment_2_control
   962   00FEBC  6E3F               	movwf	seven_segment_control_turn_on@pin_config^0,c
   963   00FEBE  0E00               	movlw	high _segment_2_control
   964   00FEC0  6E40               	movwf	(seven_segment_control_turn_on@pin_config+1)^0,c
   965   00FEC2  ECF4  F076         	call	_seven_segment_control_turn_on	;wreg free
   966   00FEC6                     
   967                           ;application.c: 191:                 _delay((unsigned long)((100)*(4000000UL/4000000.0))
      +                          );
   968   00FEC6  0E21               	movlw	33
   969   00FEC8                     u2627:
   970   00FEC8  2EE8               	decfsz	wreg,f,c
   971   00FECA  D7FE               	bra	u2627
   972   00FECC  F000               	nop	
   973   00FECE                     
   974                           ;application.c: 192:                 seven_segment_control_turn_off(&segment_1, &segment
      +                          _2_control);
   975   00FECE  0E1F               	movlw	low _segment_1
   976   00FED0  6E3D               	movwf	seven_segment_control_turn_off@seg_config^0,c
   977   00FED2  0E00               	movlw	high _segment_1
   978   00FED4  6E3E               	movwf	(seven_segment_control_turn_off@seg_config+1)^0,c
   979   00FED6  0E31               	movlw	low _segment_2_control
   980   00FED8  6E3F               	movwf	seven_segment_control_turn_off@pin_config^0,c
   981   00FEDA  0E00               	movlw	high _segment_2_control
   982   00FEDC  6E40               	movwf	(seven_segment_control_turn_off@pin_config+1)^0,c
   983   00FEDE  ECB1  F076         	call	_seven_segment_control_turn_off	;wreg free
   984                           
   985                           ;application.c: 193:                 _delay((unsigned long)((100)*(4000000UL/4000000.0))
      +                          );
   986   00FEE2  0E21               	movlw	33
   987   00FEE4                     u2637:
   988   00FEE4  2EE8               	decfsz	wreg,f,c
   989   00FEE6  D7FE               	bra	u2637
   990   00FEE8  F000               	nop	
   991   00FEEA                     
   992                           ;application.c: 195:                 seven_segment_write_number(&segment_1, (uint8)(hour
      +                          s / 10));
   993   00FEEA  0E1F               	movlw	low _segment_1
   994   00FEEC  6E3D               	movwf	seven_segment_write_number@seg_config^0,c
   995   00FEEE  0E00               	movlw	high _segment_1
   996   00FEF0  6E3E               	movwf	(seven_segment_write_number@seg_config+1)^0,c
   997   00FEF2  505A               	movf	_hours^0,w,c
   998   00FEF4  6E33               	movwf	___awdiv@dividend^0,c
   999   00FEF6  6A34               	clrf	(___awdiv@dividend+1)^0,c
  1000   00FEF8  BE33               	btfsc	___awdiv@dividend^0,7,c
  1001   00FEFA  0634               	decf	(___awdiv@dividend+1)^0,f,c
  1002   00FEFC  0E00               	movlw	0
  1003   00FEFE  6E36               	movwf	(___awdiv@divisor+1)^0,c
  1004   00FF00  0E0A               	movlw	10
  1005   00FF02  6E35               	movwf	___awdiv@divisor^0,c
  1006   00FF04  EC7B  F078         	call	___awdiv	;wreg free
  1007   00FF08  5033               	movf	?___awdiv^0,w,c
  1008   00FF0A  6E3F               	movwf	seven_segment_write_number@number^0,c
  1009   00FF0C  ECDD  F078         	call	_seven_segment_write_number	;wreg free
  1010   00FF10                     
  1011                           ;application.c: 196:                 seven_segment_control_turn_on(&segment_1, &segment_
      +                          1_control);
  1012   00FF10  0E1F               	movlw	low _segment_1
  1013   00FF12  6E3D               	movwf	seven_segment_control_turn_on@seg_config^0,c
  1014   00FF14  0E00               	movlw	high _segment_1
  1015   00FF16  6E3E               	movwf	(seven_segment_control_turn_on@seg_config+1)^0,c
  1016   00FF18  0E32               	movlw	low _segment_1_control
  1017   00FF1A  6E3F               	movwf	seven_segment_control_turn_on@pin_config^0,c
  1018   00FF1C  0E00               	movlw	high _segment_1_control
  1019   00FF1E  6E40               	movwf	(seven_segment_control_turn_on@pin_config+1)^0,c
  1020   00FF20  ECF4  F076         	call	_seven_segment_control_turn_on	;wreg free
  1021                           
  1022                           ;application.c: 197:                 _delay((unsigned long)((100)*(4000000UL/4000000.0))
      +                          );
  1023   00FF24  0E21               	movlw	33
  1024   00FF26                     u2647:
  1025   00FF26  2EE8               	decfsz	wreg,f,c
  1026   00FF28  D7FE               	bra	u2647
  1027   00FF2A  F000               	nop	
  1028   00FF2C                     
  1029                           ;application.c: 198:                 seven_segment_control_turn_off(&segment_1, &segment
      +                          _1_control);
  1030   00FF2C  0E1F               	movlw	low _segment_1
  1031   00FF2E  6E3D               	movwf	seven_segment_control_turn_off@seg_config^0,c
  1032   00FF30  0E00               	movlw	high _segment_1
  1033   00FF32  6E3E               	movwf	(seven_segment_control_turn_off@seg_config+1)^0,c
  1034   00FF34  0E32               	movlw	low _segment_1_control
  1035   00FF36  6E3F               	movwf	seven_segment_control_turn_off@pin_config^0,c
  1036   00FF38  0E00               	movlw	high _segment_1_control
  1037   00FF3A  6E40               	movwf	(seven_segment_control_turn_off@pin_config+1)^0,c
  1038   00FF3C  ECB1  F076         	call	_seven_segment_control_turn_off	;wreg free
  1039   00FF40                     
  1040                           ;application.c: 199:                 _delay((unsigned long)((100)*(4000000UL/4000000.0))
      +                          );
  1041   00FF40  0E21               	movlw	33
  1042   00FF42                     u2657:
  1043   00FF42  2EE8               	decfsz	wreg,f,c
  1044   00FF44  D7FE               	bra	u2657
  1045   00FF46  F000               	nop	
  1046   00FF48                     
  1047                           ;application.c: 200:             }
  1048   00FF48  2A57               	incf	_counter^0,f,c
  1049   00FF4A  5057               	movf	_counter^0,w,c
  1050   00FF4C  0A80               	xorlw	128
  1051   00FF4E  0F4D               	addlw	-179
  1052   00FF50  A0D8               	btfss	status,0,c
  1053   00FF52  EFAD  F07F         	goto	u2461
  1054   00FF56  EFAF  F07F         	goto	u2460
  1055   00FF5A                     u2461:
  1056   00FF5A  EF8A  F07E         	goto	l2608
  1057   00FF5E                     u2460:
  1058   00FF5E                     
  1059                           ;application.c: 203:             seconds--;
  1060   00FF5E  0658               	decf	_seconds^0,f,c
  1061   00FF60                     
  1062                           ;application.c: 204:             if(seconds <= 0)
  1063   00FF60  5058               	movf	_seconds^0,w,c
  1064   00FF62  0A80               	xorlw	128
  1065   00FF64  0F7F               	addlw	-129
  1066   00FF66  B0D8               	btfsc	status,0,c
  1067   00FF68  EFB8  F07F         	goto	u2471
  1068   00FF6C  EFBA  F07F         	goto	u2470
  1069   00FF70                     u2471:
  1070   00FF70  EFED  F07D         	goto	l2574
  1071   00FF74                     u2470:
  1072   00FF74                     
  1073                           ;application.c: 205:             {;application.c: 207:                 if((minutes == 0)
      +                           &&(hours == 0))
  1074   00FF74  5059               	movf	_minutes^0,w,c
  1075   00FF76  A4D8               	btfss	status,2,c
  1076   00FF78  EFC0  F07F         	goto	u2481
  1077   00FF7C  EFC2  F07F         	goto	u2480
  1078   00FF80                     u2481:
  1079   00FF80  EFD6  F07F         	goto	l2660
  1080   00FF84                     u2480:
  1081   00FF84  505A               	movf	_hours^0,w,c
  1082   00FF86  A4D8               	btfss	status,2,c
  1083   00FF88  EFC8  F07F         	goto	u2491
  1084   00FF8C  EFCA  F07F         	goto	u2490
  1085   00FF90                     u2491:
  1086   00FF90  EFD6  F07F         	goto	l2660
  1087   00FF94                     u2490:
  1088   00FF94                     
  1089                           ;application.c: 208:                 {;application.c: 209:                     seconds =
      +                           0;
  1090   00FF94  0E00               	movlw	0
  1091   00FF96  6E58               	movwf	_seconds^0,c
  1092                           
  1093                           ;application.c: 210:                     total_secondes = 0;
  1094   00FF98  0E00               	movlw	0
  1095   00FF9A  6E52               	movwf	_total_secondes^0,c
  1096   00FF9C  0E00               	movlw	0
  1097   00FF9E  6E53               	movwf	(_total_secondes+1)^0,c
  1098   00FFA0  0E00               	movlw	0
  1099   00FFA2  6E54               	movwf	(_total_secondes+2)^0,c
  1100   00FFA4  0E00               	movlw	0
  1101   00FFA6  6E55               	movwf	(_total_secondes+3)^0,c
  1102                           
  1103                           ;application.c: 211:                 }
  1104   00FFA8  EFD8  F07F         	goto	l2662
  1105   00FFAC                     l2660:
  1106                           
  1107                           ;application.c: 213:                 {;application.c: 214:                     seconds =
      +                           59;
  1108   00FFAC  0E3B               	movlw	59
  1109   00FFAE  6E58               	movwf	_seconds^0,c
  1110   00FFB0                     l2662:
  1111                           
  1112                           ;application.c: 217:                 minutes--;
  1113   00FFB0  0659               	decf	_minutes^0,f,c
  1114   00FFB2                     
  1115                           ;application.c: 218:                 if(minutes < 0){
  1116   00FFB2  BE59               	btfsc	_minutes^0,7,c
  1117   00FFB4  EFE0  F07F         	goto	u2500
  1118   00FFB8  EFDE  F07F         	goto	u2501
  1119   00FFBC                     u2501:
  1120   00FFBC  EFED  F07D         	goto	l2574
  1121   00FFC0                     u2500:
  1122   00FFC0                     
  1123                           ;application.c: 219:                     minutes = 0;
  1124   00FFC0  0E00               	movlw	0
  1125   00FFC2  6E59               	movwf	_minutes^0,c
  1126   00FFC4                     
  1127                           ;application.c: 220:                     hours = (hours <= 0)? 0 : hours--;
  1128   00FFC4  505A               	movf	_hours^0,w,c
  1129   00FFC6  0A80               	xorlw	128
  1130   00FFC8  0F7F               	addlw	-129
  1131   00FFCA  A0D8               	btfss	status,0,c
  1132   00FFCC  EFEA  F07F         	goto	u2511
  1133   00FFD0  EFEC  F07F         	goto	u2510
  1134   00FFD4                     u2511:
  1135   00FFD4  EFF4  F07F         	goto	l2674
  1136   00FFD8                     u2510:
  1137   00FFD8  505A               	movf	_hours^0,w,c
  1138   00FFDA  6E50               	movwf	_main$570^0,c
  1139   00FFDC  6A51               	clrf	(_main$570+1)^0,c
  1140   00FFDE  BE50               	btfsc	_main$570^0,7,c
  1141   00FFE0  0651               	decf	(_main$570+1)^0,f,c
  1142   00FFE2  065A               	decf	_hours^0,f,c
  1143   00FFE4  EFF8  F07F         	goto	l2676
  1144   00FFE8                     l2674:
  1145   00FFE8  0E00               	movlw	0
  1146   00FFEA  6E51               	movwf	(_main$570+1)^0,c
  1147   00FFEC  0E00               	movlw	0
  1148   00FFEE  6E50               	movwf	_main$570^0,c
  1149   00FFF0                     l2676:
  1150   00FFF0  C050  F05A         	movff	_main$570,_hours
  1151   00FFF4  EFED  F07D         	goto	l2574
  1152   00FFF8                     l363:
  1153   00FFF8  EFED  F07D         	goto	l2574
  1154   00FFFC  EF00  F000         	goto	start
  1155   010000                     __end_of_main:
  1156                           	callstack 0
  1157                           
  1158 ;; *************** function _buzzer_on *****************
  1159 ;; Defined at:
  1160 ;;		line 39 in file "ECU_Layer/Buzzer/ecu_buzzer.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;  buzzer_confi    2   10[COMRAM] PTR const struct .
  1163 ;;		 -> buzzer(1), 
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;  ret             1    0        unsigned char 
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  1    wreg      unsigned char 
  1168 ;; Registers used:
  1169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1175 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;Total ram usage:        2 bytes
  1180 ;; Hardware stack levels used: 1
  1181 ;; Hardware stack levels required when called: 1
  1182 ;; This function calls:
  1183 ;;		_gpio_pin_write_logic
  1184 ;; This function is called by:
  1185 ;;		_main
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           	psect	text1
  1190   00ECD2                     __ptext1:
  1191                           	callstack 0
  1192   00ECD2                     _buzzer_on:
  1193                           	callstack 29
  1194   00ECD2                     
  1195                           ;ECU_Layer/Buzzer/ecu_buzzer.c: 42:     if(((void*)0) == buzzer_config)
  1196   00ECD2  503D               	movf	buzzer_on@buzzer_config^0,w,c
  1197   00ECD4  103E               	iorwf	(buzzer_on@buzzer_config+1)^0,w,c
  1198   00ECD6  A4D8               	btfss	status,2,c
  1199   00ECD8  EF70  F076         	goto	u2151
  1200   00ECDC  EF72  F076         	goto	u2150
  1201   00ECE0                     u2151:
  1202   00ECE0  EF74  F076         	goto	l2390
  1203   00ECE4                     u2150:
  1204   00ECE4                     
  1205                           ;ECU_Layer/Buzzer/ecu_buzzer.c: 45:     }
  1206   00ECE4  EF7C  F076         	goto	l430
  1207   00ECE8                     l2390:
  1208   00ECE8  C03D  F033         	movff	buzzer_on@buzzer_config,gpio_pin_write_logic@_pin_config
  1209   00ECEC  C03E  F034         	movff	buzzer_on@buzzer_config+1,gpio_pin_write_logic@_pin_config+1
  1210   00ECF0  0E01               	movlw	1
  1211   00ECF2  6E35               	movwf	gpio_pin_write_logic@_logic^0,c
  1212   00ECF4  EC40  F079         	call	_gpio_pin_write_logic	;wreg free
  1213   00ECF8                     l430:
  1214   00ECF8  0012               	return		;funcret
  1215   00ECFA                     __end_of_buzzer_on:
  1216                           	callstack 0
  1217                           
  1218 ;; *************** function _buzzer_off *****************
  1219 ;; Defined at:
  1220 ;;		line 60 in file "ECU_Layer/Buzzer/ecu_buzzer.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;  buzzer_confi    2   10[COMRAM] PTR const struct .
  1223 ;;		 -> buzzer(1), 
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;  ret             1    0        unsigned char 
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  1    wreg      unsigned char 
  1228 ;; Registers used:
  1229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1235 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;Total ram usage:        2 bytes
  1240 ;; Hardware stack levels used: 1
  1241 ;; Hardware stack levels required when called: 1
  1242 ;; This function calls:
  1243 ;;		_gpio_pin_write_logic
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text2
  1250   00ECAA                     __ptext2:
  1251                           	callstack 0
  1252   00ECAA                     _buzzer_off:
  1253                           	callstack 29
  1254   00ECAA                     
  1255                           ;ECU_Layer/Buzzer/ecu_buzzer.c: 63:     if(((void*)0) == buzzer_config)
  1256   00ECAA  503D               	movf	buzzer_off@buzzer_config^0,w,c
  1257   00ECAC  103E               	iorwf	(buzzer_off@buzzer_config+1)^0,w,c
  1258   00ECAE  A4D8               	btfss	status,2,c
  1259   00ECB0  EF5C  F076         	goto	u2161
  1260   00ECB4  EF5E  F076         	goto	u2160
  1261   00ECB8                     u2161:
  1262   00ECB8  EF60  F076         	goto	l2400
  1263   00ECBC                     u2160:
  1264   00ECBC                     
  1265                           ;ECU_Layer/Buzzer/ecu_buzzer.c: 66:     }
  1266   00ECBC  EF68  F076         	goto	l435
  1267   00ECC0                     l2400:
  1268   00ECC0  C03D  F033         	movff	buzzer_off@buzzer_config,gpio_pin_write_logic@_pin_config
  1269   00ECC4  C03E  F034         	movff	buzzer_off@buzzer_config+1,gpio_pin_write_logic@_pin_config+1
  1270   00ECC8  0E00               	movlw	0
  1271   00ECCA  6E35               	movwf	gpio_pin_write_logic@_logic^0,c
  1272   00ECCC  EC40  F079         	call	_gpio_pin_write_logic	;wreg free
  1273   00ECD0                     l435:
  1274   00ECD0  0012               	return		;funcret
  1275   00ECD2                     __end_of_buzzer_off:
  1276                           	callstack 0
  1277                           
  1278 ;; *************** function _application_init *****************
  1279 ;; Defined at:
  1280 ;;		line 232 in file "application.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;		None
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;Total ram usage:        0 bytes
  1299 ;; Hardware stack levels used: 1
  1300 ;; Hardware stack levels required when called: 3
  1301 ;; This function calls:
  1302 ;;		_button_initialization
  1303 ;;		_buzzer_initialization
  1304 ;;		_seven_segment_control_initialize
  1305 ;;		_seven_segment_initialize
  1306 ;;		_timer_init
  1307 ;; This function is called by:
  1308 ;;		_main
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text3
  1313   00EE6E                     __ptext3:
  1314                           	callstack 0
  1315   00EE6E                     _application_init:
  1316                           	callstack 27
  1317   00EE6E                     
  1318                           ;application.c: 235:     seven_segment_initialize(&segment_1);
  1319   00EE6E  0E1F               	movlw	low _segment_1
  1320   00EE70  6E46               	movwf	seven_segment_initialize@seg_config^0,c
  1321   00EE72  0E00               	movlw	high _segment_1
  1322   00EE74  6E47               	movwf	(seven_segment_initialize@seg_config+1)^0,c
  1323   00EE76  EC7C  F077         	call	_seven_segment_initialize	;wreg free
  1324                           
  1325                           ;application.c: 236:     seven_segment_control_initialize(&segment_1_control);
  1326   00EE7A  0E32               	movlw	low _segment_1_control
  1327   00EE7C  6E46               	movwf	seven_segment_control_initialize@pin_config^0,c
  1328   00EE7E  0E00               	movlw	high _segment_1_control
  1329   00EE80  6E47               	movwf	(seven_segment_control_initialize@pin_config+1)^0,c
  1330   00EE82  EC30  F076         	call	_seven_segment_control_initialize	;wreg free
  1331                           
  1332                           ;application.c: 237:     seven_segment_control_initialize(&segment_2_control);
  1333   00EE86  0E31               	movlw	low _segment_2_control
  1334   00EE88  6E46               	movwf	seven_segment_control_initialize@pin_config^0,c
  1335   00EE8A  0E00               	movlw	high _segment_2_control
  1336   00EE8C  6E47               	movwf	(seven_segment_control_initialize@pin_config+1)^0,c
  1337   00EE8E  EC30  F076         	call	_seven_segment_control_initialize	;wreg free
  1338                           
  1339                           ;application.c: 238:     seven_segment_control_initialize(&segment_3_control);
  1340   00EE92  0E30               	movlw	low _segment_3_control
  1341   00EE94  6E46               	movwf	seven_segment_control_initialize@pin_config^0,c
  1342   00EE96  0E00               	movlw	high _segment_3_control
  1343   00EE98  6E47               	movwf	(seven_segment_control_initialize@pin_config+1)^0,c
  1344   00EE9A  EC30  F076         	call	_seven_segment_control_initialize	;wreg free
  1345                           
  1346                           ;application.c: 239:     seven_segment_control_initialize(&segment_4_control);
  1347   00EE9E  0E2F               	movlw	low _segment_4_control
  1348   00EEA0  6E46               	movwf	seven_segment_control_initialize@pin_config^0,c
  1349   00EEA2  0E00               	movlw	high _segment_4_control
  1350   00EEA4  6E47               	movwf	(seven_segment_control_initialize@pin_config+1)^0,c
  1351   00EEA6  EC30  F076         	call	_seven_segment_control_initialize	;wreg free
  1352                           
  1353                           ;application.c: 240:     seven_segment_control_initialize(&segment_5_control);
  1354   00EEAA  0E2E               	movlw	low _segment_5_control
  1355   00EEAC  6E46               	movwf	seven_segment_control_initialize@pin_config^0,c
  1356   00EEAE  0E00               	movlw	high _segment_5_control
  1357   00EEB0  6E47               	movwf	(seven_segment_control_initialize@pin_config+1)^0,c
  1358   00EEB2  EC30  F076         	call	_seven_segment_control_initialize	;wreg free
  1359                           
  1360                           ;application.c: 241:     seven_segment_control_initialize(&segment_6_control);
  1361   00EEB6  0E2D               	movlw	low _segment_6_control
  1362   00EEB8  6E46               	movwf	seven_segment_control_initialize@pin_config^0,c
  1363   00EEBA  0E00               	movlw	high _segment_6_control
  1364   00EEBC  6E47               	movwf	(seven_segment_control_initialize@pin_config+1)^0,c
  1365   00EEBE  EC30  F076         	call	_seven_segment_control_initialize	;wreg free
  1366                           
  1367                           ;application.c: 243:     button_initialization(&up_button);
  1368   00EEC2  0E2A               	movlw	low _up_button
  1369   00EEC4  6E46               	movwf	button_initialization@btn^0,c
  1370   00EEC6  0E00               	movlw	high _up_button
  1371   00EEC8  6E47               	movwf	(button_initialization@btn+1)^0,c
  1372   00EECA  EC0C  F076         	call	_button_initialization	;wreg free
  1373                           
  1374                           ;application.c: 244:     button_initialization(&down_button);
  1375   00EECE  0E27               	movlw	low _down_button
  1376   00EED0  6E46               	movwf	button_initialization@btn^0,c
  1377   00EED2  0E00               	movlw	high _down_button
  1378   00EED4  6E47               	movwf	(button_initialization@btn+1)^0,c
  1379   00EED6  EC0C  F076         	call	_button_initialization	;wreg free
  1380                           
  1381                           ;application.c: 245:     button_initialization(&set_button);
  1382   00EEDA  0E24               	movlw	low _set_button
  1383   00EEDC  6E46               	movwf	button_initialization@btn^0,c
  1384   00EEDE  0E00               	movlw	high _set_button
  1385   00EEE0  6E47               	movwf	(button_initialization@btn+1)^0,c
  1386   00EEE2  EC0C  F076         	call	_button_initialization	;wreg free
  1387                           
  1388                           ;application.c: 246:     buzzer_initialization(&buzzer);
  1389   00EEE6  0E67               	movlw	low _buzzer
  1390   00EEE8  6E46               	movwf	buzzer_initialization@buzzer_config^0,c
  1391   00EEEA  0E00               	movlw	high _buzzer
  1392   00EEEC  6E47               	movwf	(buzzer_initialization@buzzer_config+1)^0,c
  1393   00EEEE  EC1E  F076         	call	_buzzer_initialization	;wreg free
  1394                           
  1395                           ;application.c: 247:     timer_init();
  1396   00EEF2  EC6F  F07B         	call	_timer_init	;wreg free
  1397   00EEF6  0012               	return		;funcret
  1398   00EEF8                     __end_of_application_init:
  1399                           	callstack 0
  1400                           
  1401 ;; *************** function _timer_init *****************
  1402 ;; Defined at:
  1403 ;;		line 250 in file "application.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;		None
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;		None
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      void 
  1410 ;; Registers used:
  1411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;Total ram usage:        0 bytes
  1422 ;; Hardware stack levels used: 1
  1423 ;; Hardware stack levels required when called: 2
  1424 ;; This function calls:
  1425 ;;		___awdiv
  1426 ;;		___awmod
  1427 ;;		_button_read_logic
  1428 ;;		_seven_segment_control_turn_off
  1429 ;;		_seven_segment_control_turn_on
  1430 ;;		_seven_segment_write_number
  1431 ;; This function is called by:
  1432 ;;		_main
  1433 ;;		_application_init
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           	psect	text4
  1438   00F6DE                     __ptext4:
  1439                           	callstack 0
  1440   00F6DE                     _timer_init:
  1441                           	callstack 28
  1442   00F6DE                     
  1443                           ;application.c: 252:     loop_flag.flag = 0;
  1444   00F6DE  905C               	bcf	_loop_flag^0,0,c
  1445                           
  1446                           ;application.c: 253:     while(0 == loop_flag.flag)
  1447   00F6E0  EFAF  F07D         	goto	l2370
  1448   00F6E4                     l2262:
  1449                           
  1450                           ;application.c: 254:     {;application.c: 255:         seconds = 0;
  1451   00F6E4  0E00               	movlw	0
  1452   00F6E6  6E58               	movwf	_seconds^0,c
  1453                           
  1454                           ;application.c: 256:         set_button_state = BUTTON_RELEASED;
  1455   00F6E8  0E00               	movlw	0
  1456   00F6EA  6E64               	movwf	_set_button_state^0,c
  1457                           
  1458                           ;application.c: 257:         while( (0 == seconds) && (BUTTON_RELEASED == set_button_sta
      +                          te) )
  1459   00F6EC  EF16  F07C         	goto	l386
  1460   00F6F0                     l2264:
  1461                           
  1462                           ;application.c: 258:         {;application.c: 259:             seven_segment_write_numbe
      +                          r(&segment_1, (uint8)(var % 10));
  1463   00F6F0  0E1F               	movlw	low _segment_1
  1464   00F6F2  6E3D               	movwf	seven_segment_write_number@seg_config^0,c
  1465   00F6F4  0E00               	movlw	high _segment_1
  1466   00F6F6  6E3E               	movwf	(seven_segment_write_number@seg_config+1)^0,c
  1467   00F6F8  5056               	movf	_var^0,w,c
  1468   00F6FA  6E33               	movwf	___awmod@dividend^0,c
  1469   00F6FC  6A34               	clrf	(___awmod@dividend+1)^0,c
  1470   00F6FE  BE33               	btfsc	___awmod@dividend^0,7,c
  1471   00F700  0634               	decf	(___awmod@dividend+1)^0,f,c
  1472   00F702  0E00               	movlw	0
  1473   00F704  6E36               	movwf	(___awmod@divisor+1)^0,c
  1474   00F706  0E0A               	movlw	10
  1475   00F708  6E35               	movwf	___awmod@divisor^0,c
  1476   00F70A  ECC6  F077         	call	___awmod	;wreg free
  1477   00F70E  5033               	movf	?___awmod^0,w,c
  1478   00F710  6E3F               	movwf	seven_segment_write_number@number^0,c
  1479   00F712  ECDD  F078         	call	_seven_segment_write_number	;wreg free
  1480                           
  1481                           ;application.c: 260:             seven_segment_control_turn_on(&segment_1, &segment_6_co
      +                          ntrol);
  1482   00F716  0E1F               	movlw	low _segment_1
  1483   00F718  6E3D               	movwf	seven_segment_control_turn_on@seg_config^0,c
  1484   00F71A  0E00               	movlw	high _segment_1
  1485   00F71C  6E3E               	movwf	(seven_segment_control_turn_on@seg_config+1)^0,c
  1486   00F71E  0E2D               	movlw	low _segment_6_control
  1487   00F720  6E3F               	movwf	seven_segment_control_turn_on@pin_config^0,c
  1488   00F722  0E00               	movlw	high _segment_6_control
  1489   00F724  6E40               	movwf	(seven_segment_control_turn_on@pin_config+1)^0,c
  1490   00F726  ECF4  F076         	call	_seven_segment_control_turn_on	;wreg free
  1491   00F72A                     
  1492                           ;application.c: 261:             _delay((unsigned long)((1)*(4000000UL/4000000.0)));
  1493   00F72A  F000               	nop	
  1494                           
  1495                           ;application.c: 262:             seven_segment_control_turn_off(&segment_1, &segment_6_c
      +                          ontrol);
  1496   00F72C  0E1F               	movlw	low _segment_1
  1497   00F72E  6E3D               	movwf	seven_segment_control_turn_off@seg_config^0,c
  1498   00F730  0E00               	movlw	high _segment_1
  1499   00F732  6E3E               	movwf	(seven_segment_control_turn_off@seg_config+1)^0,c
  1500   00F734  0E2D               	movlw	low _segment_6_control
  1501   00F736  6E3F               	movwf	seven_segment_control_turn_off@pin_config^0,c
  1502   00F738  0E00               	movlw	high _segment_6_control
  1503   00F73A  6E40               	movwf	(seven_segment_control_turn_off@pin_config+1)^0,c
  1504   00F73C  ECB1  F076         	call	_seven_segment_control_turn_off	;wreg free
  1505   00F740                     
  1506                           ;application.c: 263:             _delay((unsigned long)((1)*(4000000UL/4000000.0)));
  1507   00F740  F000               	nop	
  1508                           
  1509                           ;application.c: 265:             seven_segment_write_number(&segment_1, (uint8)(var / 10
      +                          ));
  1510   00F742  0E1F               	movlw	low _segment_1
  1511   00F744  6E3D               	movwf	seven_segment_write_number@seg_config^0,c
  1512   00F746  0E00               	movlw	high _segment_1
  1513   00F748  6E3E               	movwf	(seven_segment_write_number@seg_config+1)^0,c
  1514   00F74A  5056               	movf	_var^0,w,c
  1515   00F74C  6E33               	movwf	___awdiv@dividend^0,c
  1516   00F74E  6A34               	clrf	(___awdiv@dividend+1)^0,c
  1517   00F750  BE33               	btfsc	___awdiv@dividend^0,7,c
  1518   00F752  0634               	decf	(___awdiv@dividend+1)^0,f,c
  1519   00F754  0E00               	movlw	0
  1520   00F756  6E36               	movwf	(___awdiv@divisor+1)^0,c
  1521   00F758  0E0A               	movlw	10
  1522   00F75A  6E35               	movwf	___awdiv@divisor^0,c
  1523   00F75C  EC7B  F078         	call	___awdiv	;wreg free
  1524   00F760  5033               	movf	?___awdiv^0,w,c
  1525   00F762  6E3F               	movwf	seven_segment_write_number@number^0,c
  1526   00F764  ECDD  F078         	call	_seven_segment_write_number	;wreg free
  1527                           
  1528                           ;application.c: 266:             seven_segment_control_turn_on(&segment_1, &segment_5_co
      +                          ntrol);
  1529   00F768  0E1F               	movlw	low _segment_1
  1530   00F76A  6E3D               	movwf	seven_segment_control_turn_on@seg_config^0,c
  1531   00F76C  0E00               	movlw	high _segment_1
  1532   00F76E  6E3E               	movwf	(seven_segment_control_turn_on@seg_config+1)^0,c
  1533   00F770  0E2E               	movlw	low _segment_5_control
  1534   00F772  6E3F               	movwf	seven_segment_control_turn_on@pin_config^0,c
  1535   00F774  0E00               	movlw	high _segment_5_control
  1536   00F776  6E40               	movwf	(seven_segment_control_turn_on@pin_config+1)^0,c
  1537   00F778  ECF4  F076         	call	_seven_segment_control_turn_on	;wreg free
  1538   00F77C                     
  1539                           ;application.c: 267:             _delay((unsigned long)((1)*(4000000UL/4000000.0)));
  1540   00F77C  F000               	nop	
  1541                           
  1542                           ;application.c: 268:             seven_segment_control_turn_off(&segment_1, &segment_5_c
      +                          ontrol);
  1543   00F77E  0E1F               	movlw	low _segment_1
  1544   00F780  6E3D               	movwf	seven_segment_control_turn_off@seg_config^0,c
  1545   00F782  0E00               	movlw	high _segment_1
  1546   00F784  6E3E               	movwf	(seven_segment_control_turn_off@seg_config+1)^0,c
  1547   00F786  0E2E               	movlw	low _segment_5_control
  1548   00F788  6E3F               	movwf	seven_segment_control_turn_off@pin_config^0,c
  1549   00F78A  0E00               	movlw	high _segment_5_control
  1550   00F78C  6E40               	movwf	(seven_segment_control_turn_off@pin_config+1)^0,c
  1551   00F78E  ECB1  F076         	call	_seven_segment_control_turn_off	;wreg free
  1552   00F792                     
  1553                           ;application.c: 269:             _delay((unsigned long)((1)*(4000000UL/4000000.0)));
  1554   00F792  F000               	nop	
  1555                           
  1556                           ;application.c: 270:             button_read_logic(&set_button, &set_button_state);
  1557   00F794  0E24               	movlw	low _set_button
  1558   00F796  6E3C               	movwf	button_read_logic@btn^0,c
  1559   00F798  0E00               	movlw	high _set_button
  1560   00F79A  6E3D               	movwf	(button_read_logic@btn+1)^0,c
  1561   00F79C  0E64               	movlw	low _set_button_state
  1562   00F79E  6E3E               	movwf	button_read_logic@state^0,c
  1563   00F7A0  0E00               	movlw	high _set_button_state
  1564   00F7A2  6E3F               	movwf	(button_read_logic@state+1)^0,c
  1565   00F7A4  ECA5  F07A         	call	_button_read_logic	;wreg free
  1566                           
  1567                           ;application.c: 271:             button_read_logic(&up_button, &up_button_state);
  1568   00F7A8  0E2A               	movlw	low _up_button
  1569   00F7AA  6E3C               	movwf	button_read_logic@btn^0,c
  1570   00F7AC  0E00               	movlw	high _up_button
  1571   00F7AE  6E3D               	movwf	(button_read_logic@btn+1)^0,c
  1572   00F7B0  0E66               	movlw	low _up_button_state
  1573   00F7B2  6E3E               	movwf	button_read_logic@state^0,c
  1574   00F7B4  0E00               	movlw	high _up_button_state
  1575   00F7B6  6E3F               	movwf	(button_read_logic@state+1)^0,c
  1576   00F7B8  ECA5  F07A         	call	_button_read_logic	;wreg free
  1577                           
  1578                           ;application.c: 272:             button_read_logic(&down_button, &down_button_state);
  1579   00F7BC  0E27               	movlw	low _down_button
  1580   00F7BE  6E3C               	movwf	button_read_logic@btn^0,c
  1581   00F7C0  0E00               	movlw	high _down_button
  1582   00F7C2  6E3D               	movwf	(button_read_logic@btn+1)^0,c
  1583   00F7C4  0E65               	movlw	low _down_button_state
  1584   00F7C6  6E3E               	movwf	button_read_logic@state^0,c
  1585   00F7C8  0E00               	movlw	high _down_button_state
  1586   00F7CA  6E3F               	movwf	(button_read_logic@state+1)^0,c
  1587   00F7CC  ECA5  F07A         	call	_button_read_logic	;wreg free
  1588   00F7D0                     
  1589                           ;application.c: 273:             if((BUTTON_PRESSED == up_button_state)){
  1590   00F7D0  0466               	decf	_up_button_state^0,w,c
  1591   00F7D2  A4D8               	btfss	status,2,c
  1592   00F7D4  EFEE  F07B         	goto	u1951
  1593   00F7D8  EFF0  F07B         	goto	u1950
  1594   00F7DC                     u1951:
  1595   00F7DC  EFFF  F07B         	goto	l2282
  1596   00F7E0                     u1950:
  1597   00F7E0                     
  1598                           ;application.c: 274:                 var++;
  1599   00F7E0  2A56               	incf	_var^0,f,c
  1600   00F7E2                     
  1601                           ;application.c: 275:                 if(var>=59) var = 0;
  1602   00F7E2  5056               	movf	_var^0,w,c
  1603   00F7E4  0A80               	xorlw	128
  1604   00F7E6  0F45               	addlw	-187
  1605   00F7E8  A0D8               	btfss	status,0,c
  1606   00F7EA  EFF9  F07B         	goto	u1961
  1607   00F7EE  EFFB  F07B         	goto	u1960
  1608   00F7F2                     u1961:
  1609   00F7F2  EFFD  F07B         	goto	l389
  1610   00F7F6                     u1960:
  1611   00F7F6  0E00               	movlw	0
  1612   00F7F8  6E56               	movwf	_var^0,c
  1613   00F7FA                     l389:
  1614                           
  1615                           ;application.c: 276:                 up_button_state = BUTTON_RELEASED;
  1616   00F7FA  0E00               	movlw	0
  1617   00F7FC  6E66               	movwf	_up_button_state^0,c
  1618   00F7FE                     l2282:
  1619                           
  1620                           ;application.c: 278:             if((BUTTON_PRESSED == down_button_state)){
  1621   00F7FE  0465               	decf	_down_button_state^0,w,c
  1622   00F800  A4D8               	btfss	status,2,c
  1623   00F802  EF05  F07C         	goto	u1971
  1624   00F806  EF07  F07C         	goto	u1970
  1625   00F80A                     u1971:
  1626   00F80A  EF16  F07C         	goto	l386
  1627   00F80E                     u1970:
  1628   00F80E                     
  1629                           ;application.c: 279:                 var--;
  1630   00F80E  0656               	decf	_var^0,f,c
  1631   00F810                     
  1632                           ;application.c: 280:                 if(var<=0) var = 0;
  1633   00F810  5056               	movf	_var^0,w,c
  1634   00F812  0A80               	xorlw	128
  1635   00F814  0F7F               	addlw	-129
  1636   00F816  B0D8               	btfsc	status,0,c
  1637   00F818  EF10  F07C         	goto	u1981
  1638   00F81C  EF12  F07C         	goto	u1980
  1639   00F820                     u1981:
  1640   00F820  EF14  F07C         	goto	l391
  1641   00F824                     u1980:
  1642   00F824  0E00               	movlw	0
  1643   00F826  6E56               	movwf	_var^0,c
  1644   00F828                     l391:
  1645                           
  1646                           ;application.c: 281:                 down_button_state = BUTTON_RELEASED;
  1647   00F828  0E00               	movlw	0
  1648   00F82A  6E65               	movwf	_down_button_state^0,c
  1649   00F82C                     l386:
  1650                           
  1651                           ;application.c: 257:         while( (0 == seconds) && (BUTTON_RELEASED == set_button_sta
      +                          te) )
  1652   00F82C  5058               	movf	_seconds^0,w,c
  1653   00F82E  A4D8               	btfss	status,2,c
  1654   00F830  EF1C  F07C         	goto	u1991
  1655   00F834  EF1E  F07C         	goto	u1990
  1656   00F838                     u1991:
  1657   00F838  EF26  F07C         	goto	l2292
  1658   00F83C                     u1990:
  1659   00F83C  5064               	movf	_set_button_state^0,w,c
  1660   00F83E  B4D8               	btfsc	status,2,c
  1661   00F840  EF24  F07C         	goto	u2001
  1662   00F844  EF26  F07C         	goto	u2000
  1663   00F848                     u2001:
  1664   00F848  EF78  F07B         	goto	l2264
  1665   00F84C                     u2000:
  1666   00F84C                     l2292:
  1667                           
  1668                           ;application.c: 285:         set_button_state = BUTTON_RELEASED;
  1669   00F84C  0E00               	movlw	0
  1670   00F84E  6E64               	movwf	_set_button_state^0,c
  1671   00F850                     
  1672                           ;application.c: 286:         seconds = var;
  1673   00F850  C056  F058         	movff	_var,_seconds
  1674                           
  1675                           ;application.c: 287:         var = 0;
  1676   00F854  0E00               	movlw	0
  1677   00F856  6E56               	movwf	_var^0,c
  1678                           
  1679                           ;application.c: 288:         while( (0 == minutes) && (BUTTON_RELEASED == set_button_sta
      +                          te) )
  1680   00F858  EFD8  F07C         	goto	l395
  1681   00F85C                     l2296:
  1682                           
  1683                           ;application.c: 289:         {;application.c: 290:             seven_segment_write_numbe
      +                          r(&segment_1, (uint8)(var % 10));
  1684   00F85C  0E1F               	movlw	low _segment_1
  1685   00F85E  6E3D               	movwf	seven_segment_write_number@seg_config^0,c
  1686   00F860  0E00               	movlw	high _segment_1
  1687   00F862  6E3E               	movwf	(seven_segment_write_number@seg_config+1)^0,c
  1688   00F864  5056               	movf	_var^0,w,c
  1689   00F866  6E33               	movwf	___awmod@dividend^0,c
  1690   00F868  6A34               	clrf	(___awmod@dividend+1)^0,c
  1691   00F86A  BE33               	btfsc	___awmod@dividend^0,7,c
  1692   00F86C  0634               	decf	(___awmod@dividend+1)^0,f,c
  1693   00F86E  0E00               	movlw	0
  1694   00F870  6E36               	movwf	(___awmod@divisor+1)^0,c
  1695   00F872  0E0A               	movlw	10
  1696   00F874  6E35               	movwf	___awmod@divisor^0,c
  1697   00F876  ECC6  F077         	call	___awmod	;wreg free
  1698   00F87A  5033               	movf	?___awmod^0,w,c
  1699   00F87C  6E3F               	movwf	seven_segment_write_number@number^0,c
  1700   00F87E  ECDD  F078         	call	_seven_segment_write_number	;wreg free
  1701                           
  1702                           ;application.c: 291:             seven_segment_control_turn_on(&segment_1, &segment_4_co
      +                          ntrol);
  1703   00F882  0E1F               	movlw	low _segment_1
  1704   00F884  6E3D               	movwf	seven_segment_control_turn_on@seg_config^0,c
  1705   00F886  0E00               	movlw	high _segment_1
  1706   00F888  6E3E               	movwf	(seven_segment_control_turn_on@seg_config+1)^0,c
  1707   00F88A  0E2F               	movlw	low _segment_4_control
  1708   00F88C  6E3F               	movwf	seven_segment_control_turn_on@pin_config^0,c
  1709   00F88E  0E00               	movlw	high _segment_4_control
  1710   00F890  6E40               	movwf	(seven_segment_control_turn_on@pin_config+1)^0,c
  1711   00F892  ECF4  F076         	call	_seven_segment_control_turn_on	;wreg free
  1712   00F896                     
  1713                           ;application.c: 292:             _delay((unsigned long)((1)*(4000000UL/4000.0)));
  1714   00F896  0EC8               	movlw	200
  1715   00F898                     u2667:
  1716   00F898  D000               	nop2	
  1717   00F89A  2EE8               	decfsz	wreg,f,c
  1718   00F89C  D7FD               	bra	u2667
  1719   00F89E                     
  1720                           ;application.c: 293:             seven_segment_control_turn_off(&segment_1, &segment_4_c
      +                          ontrol);
  1721   00F89E  0E1F               	movlw	low _segment_1
  1722   00F8A0  6E3D               	movwf	seven_segment_control_turn_off@seg_config^0,c
  1723   00F8A2  0E00               	movlw	high _segment_1
  1724   00F8A4  6E3E               	movwf	(seven_segment_control_turn_off@seg_config+1)^0,c
  1725   00F8A6  0E2F               	movlw	low _segment_4_control
  1726   00F8A8  6E3F               	movwf	seven_segment_control_turn_off@pin_config^0,c
  1727   00F8AA  0E00               	movlw	high _segment_4_control
  1728   00F8AC  6E40               	movwf	(seven_segment_control_turn_off@pin_config+1)^0,c
  1729   00F8AE  ECB1  F076         	call	_seven_segment_control_turn_off	;wreg free
  1730                           
  1731                           ;application.c: 294:             _delay((unsigned long)((1)*(4000000UL/4000.0)));
  1732   00F8B2  0EC8               	movlw	200
  1733   00F8B4                     u2677:
  1734   00F8B4  D000               	nop2	
  1735   00F8B6  2EE8               	decfsz	wreg,f,c
  1736   00F8B8  D7FD               	bra	u2677
  1737   00F8BA                     
  1738                           ;application.c: 296:             seven_segment_write_number(&segment_1, (uint8)(var / 10
      +                          ));
  1739   00F8BA  0E1F               	movlw	low _segment_1
  1740   00F8BC  6E3D               	movwf	seven_segment_write_number@seg_config^0,c
  1741   00F8BE  0E00               	movlw	high _segment_1
  1742   00F8C0  6E3E               	movwf	(seven_segment_write_number@seg_config+1)^0,c
  1743   00F8C2  5056               	movf	_var^0,w,c
  1744   00F8C4  6E33               	movwf	___awdiv@dividend^0,c
  1745   00F8C6  6A34               	clrf	(___awdiv@dividend+1)^0,c
  1746   00F8C8  BE33               	btfsc	___awdiv@dividend^0,7,c
  1747   00F8CA  0634               	decf	(___awdiv@dividend+1)^0,f,c
  1748   00F8CC  0E00               	movlw	0
  1749   00F8CE  6E36               	movwf	(___awdiv@divisor+1)^0,c
  1750   00F8D0  0E0A               	movlw	10
  1751   00F8D2  6E35               	movwf	___awdiv@divisor^0,c
  1752   00F8D4  EC7B  F078         	call	___awdiv	;wreg free
  1753   00F8D8  5033               	movf	?___awdiv^0,w,c
  1754   00F8DA  6E3F               	movwf	seven_segment_write_number@number^0,c
  1755   00F8DC  ECDD  F078         	call	_seven_segment_write_number	;wreg free
  1756   00F8E0                     
  1757                           ;application.c: 297:             seven_segment_control_turn_on(&segment_1, &segment_3_co
      +                          ntrol);
  1758   00F8E0  0E1F               	movlw	low _segment_1
  1759   00F8E2  6E3D               	movwf	seven_segment_control_turn_on@seg_config^0,c
  1760   00F8E4  0E00               	movlw	high _segment_1
  1761   00F8E6  6E3E               	movwf	(seven_segment_control_turn_on@seg_config+1)^0,c
  1762   00F8E8  0E30               	movlw	low _segment_3_control
  1763   00F8EA  6E3F               	movwf	seven_segment_control_turn_on@pin_config^0,c
  1764   00F8EC  0E00               	movlw	high _segment_3_control
  1765   00F8EE  6E40               	movwf	(seven_segment_control_turn_on@pin_config+1)^0,c
  1766   00F8F0  ECF4  F076         	call	_seven_segment_control_turn_on	;wreg free
  1767                           
  1768                           ;application.c: 298:             _delay((unsigned long)((1)*(4000000UL/4000.0)));
  1769   00F8F4  0EC8               	movlw	200
  1770   00F8F6                     u2687:
  1771   00F8F6  D000               	nop2	
  1772   00F8F8  2EE8               	decfsz	wreg,f,c
  1773   00F8FA  D7FD               	bra	u2687
  1774   00F8FC                     
  1775                           ;application.c: 299:             seven_segment_control_turn_off(&segment_1, &segment_3_c
      +                          ontrol);
  1776   00F8FC  0E1F               	movlw	low _segment_1
  1777   00F8FE  6E3D               	movwf	seven_segment_control_turn_off@seg_config^0,c
  1778   00F900  0E00               	movlw	high _segment_1
  1779   00F902  6E3E               	movwf	(seven_segment_control_turn_off@seg_config+1)^0,c
  1780   00F904  0E30               	movlw	low _segment_3_control
  1781   00F906  6E3F               	movwf	seven_segment_control_turn_off@pin_config^0,c
  1782   00F908  0E00               	movlw	high _segment_3_control
  1783   00F90A  6E40               	movwf	(seven_segment_control_turn_off@pin_config+1)^0,c
  1784   00F90C  ECB1  F076         	call	_seven_segment_control_turn_off	;wreg free
  1785   00F910                     
  1786                           ;application.c: 300:             _delay((unsigned long)((1)*(4000000UL/4000.0)));
  1787   00F910  0EC8               	movlw	200
  1788   00F912                     u2697:
  1789   00F912  D000               	nop2	
  1790   00F914  2EE8               	decfsz	wreg,f,c
  1791   00F916  D7FD               	bra	u2697
  1792                           
  1793                           ;application.c: 301:             button_read_logic(&set_button, &set_button_state);
  1794   00F918  0E24               	movlw	low _set_button
  1795   00F91A  6E3C               	movwf	button_read_logic@btn^0,c
  1796   00F91C  0E00               	movlw	high _set_button
  1797   00F91E  6E3D               	movwf	(button_read_logic@btn+1)^0,c
  1798   00F920  0E64               	movlw	low _set_button_state
  1799   00F922  6E3E               	movwf	button_read_logic@state^0,c
  1800   00F924  0E00               	movlw	high _set_button_state
  1801   00F926  6E3F               	movwf	(button_read_logic@state+1)^0,c
  1802   00F928  ECA5  F07A         	call	_button_read_logic	;wreg free
  1803                           
  1804                           ;application.c: 302:             button_read_logic(&up_button, &up_button_state);
  1805   00F92C  0E2A               	movlw	low _up_button
  1806   00F92E  6E3C               	movwf	button_read_logic@btn^0,c
  1807   00F930  0E00               	movlw	high _up_button
  1808   00F932  6E3D               	movwf	(button_read_logic@btn+1)^0,c
  1809   00F934  0E66               	movlw	low _up_button_state
  1810   00F936  6E3E               	movwf	button_read_logic@state^0,c
  1811   00F938  0E00               	movlw	high _up_button_state
  1812   00F93A  6E3F               	movwf	(button_read_logic@state+1)^0,c
  1813   00F93C  ECA5  F07A         	call	_button_read_logic	;wreg free
  1814                           
  1815                           ;application.c: 303:             button_read_logic(&down_button, &down_button_state);
  1816   00F940  0E27               	movlw	low _down_button
  1817   00F942  6E3C               	movwf	button_read_logic@btn^0,c
  1818   00F944  0E00               	movlw	high _down_button
  1819   00F946  6E3D               	movwf	(button_read_logic@btn+1)^0,c
  1820   00F948  0E65               	movlw	low _down_button_state
  1821   00F94A  6E3E               	movwf	button_read_logic@state^0,c
  1822   00F94C  0E00               	movlw	high _down_button_state
  1823   00F94E  6E3F               	movwf	(button_read_logic@state+1)^0,c
  1824   00F950  ECA5  F07A         	call	_button_read_logic	;wreg free
  1825   00F954                     
  1826                           ;application.c: 304:             if((BUTTON_PRESSED == up_button_state)){
  1827   00F954  0466               	decf	_up_button_state^0,w,c
  1828   00F956  A4D8               	btfss	status,2,c
  1829   00F958  EFB0  F07C         	goto	u2011
  1830   00F95C  EFB2  F07C         	goto	u2010
  1831   00F960                     u2011:
  1832   00F960  EFC1  F07C         	goto	l2318
  1833   00F964                     u2010:
  1834   00F964                     
  1835                           ;application.c: 305:                 var++;
  1836   00F964  2A56               	incf	_var^0,f,c
  1837   00F966                     
  1838                           ;application.c: 306:                 if(var>=59) var = 0;
  1839   00F966  5056               	movf	_var^0,w,c
  1840   00F968  0A80               	xorlw	128
  1841   00F96A  0F45               	addlw	-187
  1842   00F96C  A0D8               	btfss	status,0,c
  1843   00F96E  EFBB  F07C         	goto	u2021
  1844   00F972  EFBD  F07C         	goto	u2020
  1845   00F976                     u2021:
  1846   00F976  EFBF  F07C         	goto	l398
  1847   00F97A                     u2020:
  1848   00F97A  0E00               	movlw	0
  1849   00F97C  6E56               	movwf	_var^0,c
  1850   00F97E                     l398:
  1851                           
  1852                           ;application.c: 307:                 up_button_state = BUTTON_RELEASED;
  1853   00F97E  0E00               	movlw	0
  1854   00F980  6E66               	movwf	_up_button_state^0,c
  1855   00F982                     l2318:
  1856                           
  1857                           ;application.c: 309:             if((BUTTON_PRESSED == down_button_state)){
  1858   00F982  0465               	decf	_down_button_state^0,w,c
  1859   00F984  A4D8               	btfss	status,2,c
  1860   00F986  EFC7  F07C         	goto	u2031
  1861   00F98A  EFC9  F07C         	goto	u2030
  1862   00F98E                     u2031:
  1863   00F98E  EFD8  F07C         	goto	l395
  1864   00F992                     u2030:
  1865   00F992                     
  1866                           ;application.c: 310:                 var--;
  1867   00F992  0656               	decf	_var^0,f,c
  1868   00F994                     
  1869                           ;application.c: 311:                 if(var<=0) var = 0;
  1870   00F994  5056               	movf	_var^0,w,c
  1871   00F996  0A80               	xorlw	128
  1872   00F998  0F7F               	addlw	-129
  1873   00F99A  B0D8               	btfsc	status,0,c
  1874   00F99C  EFD2  F07C         	goto	u2041
  1875   00F9A0  EFD4  F07C         	goto	u2040
  1876   00F9A4                     u2041:
  1877   00F9A4  EFD6  F07C         	goto	l400
  1878   00F9A8                     u2040:
  1879   00F9A8  0E00               	movlw	0
  1880   00F9AA  6E56               	movwf	_var^0,c
  1881   00F9AC                     l400:
  1882                           
  1883                           ;application.c: 312:                 down_button_state = BUTTON_RELEASED;
  1884   00F9AC  0E00               	movlw	0
  1885   00F9AE  6E65               	movwf	_down_button_state^0,c
  1886   00F9B0                     l395:
  1887                           
  1888                           ;application.c: 288:         while( (0 == minutes) && (BUTTON_RELEASED == set_button_sta
      +                          te) )
  1889   00F9B0  5059               	movf	_minutes^0,w,c
  1890   00F9B2  A4D8               	btfss	status,2,c
  1891   00F9B4  EFDE  F07C         	goto	u2051
  1892   00F9B8  EFE0  F07C         	goto	u2050
  1893   00F9BC                     u2051:
  1894   00F9BC  EFE8  F07C         	goto	l2328
  1895   00F9C0                     u2050:
  1896   00F9C0  5064               	movf	_set_button_state^0,w,c
  1897   00F9C2  B4D8               	btfsc	status,2,c
  1898   00F9C4  EFE6  F07C         	goto	u2061
  1899   00F9C8  EFE8  F07C         	goto	u2060
  1900   00F9CC                     u2061:
  1901   00F9CC  EF2E  F07C         	goto	l2296
  1902   00F9D0                     u2060:
  1903   00F9D0                     l2328:
  1904                           
  1905                           ;application.c: 317:         set_button_state = BUTTON_RELEASED;
  1906   00F9D0  0E00               	movlw	0
  1907   00F9D2  6E64               	movwf	_set_button_state^0,c
  1908   00F9D4                     
  1909                           ;application.c: 318:         minutes = var;
  1910   00F9D4  C056  F059         	movff	_var,_minutes
  1911                           
  1912                           ;application.c: 319:         var = 0;
  1913   00F9D8  0E00               	movlw	0
  1914   00F9DA  6E56               	movwf	_var^0,c
  1915                           
  1916                           ;application.c: 320:         while( (0 == hours) && (BUTTON_RELEASED == set_button_state
      +                          ) )
  1917   00F9DC  EF9A  F07D         	goto	l404
  1918   00F9E0                     l2332:
  1919                           
  1920                           ;application.c: 321:         {;application.c: 322:             seven_segment_write_numbe
      +                          r(&segment_1, (uint8)(var % 10));
  1921   00F9E0  0E1F               	movlw	low _segment_1
  1922   00F9E2  6E3D               	movwf	seven_segment_write_number@seg_config^0,c
  1923   00F9E4  0E00               	movlw	high _segment_1
  1924   00F9E6  6E3E               	movwf	(seven_segment_write_number@seg_config+1)^0,c
  1925   00F9E8  5056               	movf	_var^0,w,c
  1926   00F9EA  6E33               	movwf	___awmod@dividend^0,c
  1927   00F9EC  6A34               	clrf	(___awmod@dividend+1)^0,c
  1928   00F9EE  BE33               	btfsc	___awmod@dividend^0,7,c
  1929   00F9F0  0634               	decf	(___awmod@dividend+1)^0,f,c
  1930   00F9F2  0E00               	movlw	0
  1931   00F9F4  6E36               	movwf	(___awmod@divisor+1)^0,c
  1932   00F9F6  0E0A               	movlw	10
  1933   00F9F8  6E35               	movwf	___awmod@divisor^0,c
  1934   00F9FA  ECC6  F077         	call	___awmod	;wreg free
  1935   00F9FE  5033               	movf	?___awmod^0,w,c
  1936   00FA00  6E3F               	movwf	seven_segment_write_number@number^0,c
  1937   00FA02  ECDD  F078         	call	_seven_segment_write_number	;wreg free
  1938                           
  1939                           ;application.c: 323:             seven_segment_control_turn_on(&segment_1, &segment_2_co
      +                          ntrol);
  1940   00FA06  0E1F               	movlw	low _segment_1
  1941   00FA08  6E3D               	movwf	seven_segment_control_turn_on@seg_config^0,c
  1942   00FA0A  0E00               	movlw	high _segment_1
  1943   00FA0C  6E3E               	movwf	(seven_segment_control_turn_on@seg_config+1)^0,c
  1944   00FA0E  0E31               	movlw	low _segment_2_control
  1945   00FA10  6E3F               	movwf	seven_segment_control_turn_on@pin_config^0,c
  1946   00FA12  0E00               	movlw	high _segment_2_control
  1947   00FA14  6E40               	movwf	(seven_segment_control_turn_on@pin_config+1)^0,c
  1948   00FA16  ECF4  F076         	call	_seven_segment_control_turn_on	;wreg free
  1949   00FA1A                     
  1950                           ;application.c: 324:             _delay((unsigned long)((1)*(4000000UL/4000.0)));
  1951   00FA1A  0EC8               	movlw	200
  1952   00FA1C                     u2707:
  1953   00FA1C  D000               	nop2	
  1954   00FA1E  2EE8               	decfsz	wreg,f,c
  1955   00FA20  D7FD               	bra	u2707
  1956   00FA22                     
  1957                           ;application.c: 325:             seven_segment_control_turn_off(&segment_1, &segment_2_c
      +                          ontrol);
  1958   00FA22  0E1F               	movlw	low _segment_1
  1959   00FA24  6E3D               	movwf	seven_segment_control_turn_off@seg_config^0,c
  1960   00FA26  0E00               	movlw	high _segment_1
  1961   00FA28  6E3E               	movwf	(seven_segment_control_turn_off@seg_config+1)^0,c
  1962   00FA2A  0E31               	movlw	low _segment_2_control
  1963   00FA2C  6E3F               	movwf	seven_segment_control_turn_off@pin_config^0,c
  1964   00FA2E  0E00               	movlw	high _segment_2_control
  1965   00FA30  6E40               	movwf	(seven_segment_control_turn_off@pin_config+1)^0,c
  1966   00FA32  ECB1  F076         	call	_seven_segment_control_turn_off	;wreg free
  1967                           
  1968                           ;application.c: 326:             _delay((unsigned long)((1)*(4000000UL/4000.0)));
  1969   00FA36  0EC8               	movlw	200
  1970   00FA38                     u2717:
  1971   00FA38  D000               	nop2	
  1972   00FA3A  2EE8               	decfsz	wreg,f,c
  1973   00FA3C  D7FD               	bra	u2717
  1974   00FA3E                     
  1975                           ;application.c: 328:             seven_segment_write_number(&segment_1, (uint8)(var / 10
      +                          ));
  1976   00FA3E  0E1F               	movlw	low _segment_1
  1977   00FA40  6E3D               	movwf	seven_segment_write_number@seg_config^0,c
  1978   00FA42  0E00               	movlw	high _segment_1
  1979   00FA44  6E3E               	movwf	(seven_segment_write_number@seg_config+1)^0,c
  1980   00FA46  5056               	movf	_var^0,w,c
  1981   00FA48  6E33               	movwf	___awdiv@dividend^0,c
  1982   00FA4A  6A34               	clrf	(___awdiv@dividend+1)^0,c
  1983   00FA4C  BE33               	btfsc	___awdiv@dividend^0,7,c
  1984   00FA4E  0634               	decf	(___awdiv@dividend+1)^0,f,c
  1985   00FA50  0E00               	movlw	0
  1986   00FA52  6E36               	movwf	(___awdiv@divisor+1)^0,c
  1987   00FA54  0E0A               	movlw	10
  1988   00FA56  6E35               	movwf	___awdiv@divisor^0,c
  1989   00FA58  EC7B  F078         	call	___awdiv	;wreg free
  1990   00FA5C  5033               	movf	?___awdiv^0,w,c
  1991   00FA5E  6E3F               	movwf	seven_segment_write_number@number^0,c
  1992   00FA60  ECDD  F078         	call	_seven_segment_write_number	;wreg free
  1993   00FA64                     
  1994                           ;application.c: 329:             seven_segment_control_turn_on(&segment_1, &segment_1_co
      +                          ntrol);
  1995   00FA64  0E1F               	movlw	low _segment_1
  1996   00FA66  6E3D               	movwf	seven_segment_control_turn_on@seg_config^0,c
  1997   00FA68  0E00               	movlw	high _segment_1
  1998   00FA6A  6E3E               	movwf	(seven_segment_control_turn_on@seg_config+1)^0,c
  1999   00FA6C  0E32               	movlw	low _segment_1_control
  2000   00FA6E  6E3F               	movwf	seven_segment_control_turn_on@pin_config^0,c
  2001   00FA70  0E00               	movlw	high _segment_1_control
  2002   00FA72  6E40               	movwf	(seven_segment_control_turn_on@pin_config+1)^0,c
  2003   00FA74  ECF4  F076         	call	_seven_segment_control_turn_on	;wreg free
  2004                           
  2005                           ;application.c: 330:             _delay((unsigned long)((1)*(4000000UL/4000.0)));
  2006   00FA78  0EC8               	movlw	200
  2007   00FA7A                     u2727:
  2008   00FA7A  D000               	nop2	
  2009   00FA7C  2EE8               	decfsz	wreg,f,c
  2010   00FA7E  D7FD               	bra	u2727
  2011   00FA80                     
  2012                           ;application.c: 331:             seven_segment_control_turn_off(&segment_1, &segment_1_c
      +                          ontrol);
  2013   00FA80  0E1F               	movlw	low _segment_1
  2014   00FA82  6E3D               	movwf	seven_segment_control_turn_off@seg_config^0,c
  2015   00FA84  0E00               	movlw	high _segment_1
  2016   00FA86  6E3E               	movwf	(seven_segment_control_turn_off@seg_config+1)^0,c
  2017   00FA88  0E32               	movlw	low _segment_1_control
  2018   00FA8A  6E3F               	movwf	seven_segment_control_turn_off@pin_config^0,c
  2019   00FA8C  0E00               	movlw	high _segment_1_control
  2020   00FA8E  6E40               	movwf	(seven_segment_control_turn_off@pin_config+1)^0,c
  2021   00FA90  ECB1  F076         	call	_seven_segment_control_turn_off	;wreg free
  2022   00FA94                     
  2023                           ;application.c: 332:             _delay((unsigned long)((1)*(4000000UL/4000.0)));
  2024   00FA94  0EC8               	movlw	200
  2025   00FA96                     u2737:
  2026   00FA96  D000               	nop2	
  2027   00FA98  2EE8               	decfsz	wreg,f,c
  2028   00FA9A  D7FD               	bra	u2737
  2029                           
  2030                           ;application.c: 333:             button_read_logic(&set_button, &set_button_state);
  2031   00FA9C  0E24               	movlw	low _set_button
  2032   00FA9E  6E3C               	movwf	button_read_logic@btn^0,c
  2033   00FAA0  0E00               	movlw	high _set_button
  2034   00FAA2  6E3D               	movwf	(button_read_logic@btn+1)^0,c
  2035   00FAA4  0E64               	movlw	low _set_button_state
  2036   00FAA6  6E3E               	movwf	button_read_logic@state^0,c
  2037   00FAA8  0E00               	movlw	high _set_button_state
  2038   00FAAA  6E3F               	movwf	(button_read_logic@state+1)^0,c
  2039   00FAAC  ECA5  F07A         	call	_button_read_logic	;wreg free
  2040                           
  2041                           ;application.c: 334:             button_read_logic(&up_button, &up_button_state);
  2042   00FAB0  0E2A               	movlw	low _up_button
  2043   00FAB2  6E3C               	movwf	button_read_logic@btn^0,c
  2044   00FAB4  0E00               	movlw	high _up_button
  2045   00FAB6  6E3D               	movwf	(button_read_logic@btn+1)^0,c
  2046   00FAB8  0E66               	movlw	low _up_button_state
  2047   00FABA  6E3E               	movwf	button_read_logic@state^0,c
  2048   00FABC  0E00               	movlw	high _up_button_state
  2049   00FABE  6E3F               	movwf	(button_read_logic@state+1)^0,c
  2050   00FAC0  ECA5  F07A         	call	_button_read_logic	;wreg free
  2051                           
  2052                           ;application.c: 335:             button_read_logic(&down_button, &down_button_state);
  2053   00FAC4  0E27               	movlw	low _down_button
  2054   00FAC6  6E3C               	movwf	button_read_logic@btn^0,c
  2055   00FAC8  0E00               	movlw	high _down_button
  2056   00FACA  6E3D               	movwf	(button_read_logic@btn+1)^0,c
  2057   00FACC  0E65               	movlw	low _down_button_state
  2058   00FACE  6E3E               	movwf	button_read_logic@state^0,c
  2059   00FAD0  0E00               	movlw	high _down_button_state
  2060   00FAD2  6E3F               	movwf	(button_read_logic@state+1)^0,c
  2061   00FAD4  ECA5  F07A         	call	_button_read_logic	;wreg free
  2062   00FAD8                     
  2063                           ;application.c: 336:             if((BUTTON_PRESSED == up_button_state)){
  2064   00FAD8  0466               	decf	_up_button_state^0,w,c
  2065   00FADA  A4D8               	btfss	status,2,c
  2066   00FADC  EF72  F07D         	goto	u2071
  2067   00FAE0  EF74  F07D         	goto	u2070
  2068   00FAE4                     u2071:
  2069   00FAE4  EF83  F07D         	goto	l2354
  2070   00FAE8                     u2070:
  2071   00FAE8                     
  2072                           ;application.c: 337:                 var++;
  2073   00FAE8  2A56               	incf	_var^0,f,c
  2074   00FAEA                     
  2075                           ;application.c: 338:                 if(var>=23) var = 0;
  2076   00FAEA  5056               	movf	_var^0,w,c
  2077   00FAEC  0A80               	xorlw	128
  2078   00FAEE  0F69               	addlw	-151
  2079   00FAF0  A0D8               	btfss	status,0,c
  2080   00FAF2  EF7D  F07D         	goto	u2081
  2081   00FAF6  EF7F  F07D         	goto	u2080
  2082   00FAFA                     u2081:
  2083   00FAFA  EF81  F07D         	goto	l407
  2084   00FAFE                     u2080:
  2085   00FAFE  0E00               	movlw	0
  2086   00FB00  6E56               	movwf	_var^0,c
  2087   00FB02                     l407:
  2088                           
  2089                           ;application.c: 339:                 up_button_state = BUTTON_RELEASED;
  2090   00FB02  0E00               	movlw	0
  2091   00FB04  6E66               	movwf	_up_button_state^0,c
  2092   00FB06                     l2354:
  2093                           
  2094                           ;application.c: 341:             if((BUTTON_PRESSED == down_button_state)){
  2095   00FB06  0465               	decf	_down_button_state^0,w,c
  2096   00FB08  A4D8               	btfss	status,2,c
  2097   00FB0A  EF89  F07D         	goto	u2091
  2098   00FB0E  EF8B  F07D         	goto	u2090
  2099   00FB12                     u2091:
  2100   00FB12  EF9A  F07D         	goto	l404
  2101   00FB16                     u2090:
  2102   00FB16                     
  2103                           ;application.c: 342:                 var--;
  2104   00FB16  0656               	decf	_var^0,f,c
  2105   00FB18                     
  2106                           ;application.c: 343:                 if(var<=0) var = 0;
  2107   00FB18  5056               	movf	_var^0,w,c
  2108   00FB1A  0A80               	xorlw	128
  2109   00FB1C  0F7F               	addlw	-129
  2110   00FB1E  B0D8               	btfsc	status,0,c
  2111   00FB20  EF94  F07D         	goto	u2101
  2112   00FB24  EF96  F07D         	goto	u2100
  2113   00FB28                     u2101:
  2114   00FB28  EF98  F07D         	goto	l409
  2115   00FB2C                     u2100:
  2116   00FB2C  0E00               	movlw	0
  2117   00FB2E  6E56               	movwf	_var^0,c
  2118   00FB30                     l409:
  2119                           
  2120                           ;application.c: 344:                 down_button_state = BUTTON_RELEASED;
  2121   00FB30  0E00               	movlw	0
  2122   00FB32  6E65               	movwf	_down_button_state^0,c
  2123   00FB34                     l404:
  2124                           
  2125                           ;application.c: 320:         while( (0 == hours) && (BUTTON_RELEASED == set_button_state
      +                          ) )
  2126   00FB34  505A               	movf	_hours^0,w,c
  2127   00FB36  A4D8               	btfss	status,2,c
  2128   00FB38  EFA0  F07D         	goto	u2111
  2129   00FB3C  EFA2  F07D         	goto	u2110
  2130   00FB40                     u2111:
  2131   00FB40  EFAA  F07D         	goto	l2364
  2132   00FB44                     u2110:
  2133   00FB44  5064               	movf	_set_button_state^0,w,c
  2134   00FB46  B4D8               	btfsc	status,2,c
  2135   00FB48  EFA8  F07D         	goto	u2121
  2136   00FB4C  EFAA  F07D         	goto	u2120
  2137   00FB50                     u2121:
  2138   00FB50  EFF0  F07C         	goto	l2332
  2139   00FB54                     u2120:
  2140   00FB54                     l2364:
  2141                           
  2142                           ;application.c: 347:         set_button_state = BUTTON_RELEASED;
  2143   00FB54  0E00               	movlw	0
  2144   00FB56  6E64               	movwf	_set_button_state^0,c
  2145   00FB58                     
  2146                           ;application.c: 348:         hours = var;
  2147   00FB58  C056  F05A         	movff	_var,_hours
  2148   00FB5C                     
  2149                           ;application.c: 349:         loop_flag.flag = 1;
  2150   00FB5C  805C               	bsf	_loop_flag^0,0,c
  2151   00FB5E                     l2370:
  2152                           
  2153                           ;application.c: 253:     while(0 == loop_flag.flag)
  2154   00FB5E  A05C               	btfss	_loop_flag^0,0,c
  2155   00FB60  EFB4  F07D         	goto	u2131
  2156   00FB64  EFB6  F07D         	goto	u2130
  2157   00FB68                     u2131:
  2158   00FB68  EF72  F07B         	goto	l2262
  2159   00FB6C                     u2130:
  2160   00FB6C  0012               	return		;funcret
  2161   00FB6E                     __end_of_timer_init:
  2162                           	callstack 0
  2163                           
  2164 ;; *************** function _seven_segment_write_number *****************
  2165 ;; Defined at:
  2166 ;;		line 54 in file "ECU_Layer/7_Segment/ecu_sev_segment.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  seg_config      2   10[COMRAM] PTR const struct .
  2169 ;;		 -> segment_1(5), 
  2170 ;;  number          1   12[COMRAM] unsigned char 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  ret             1    0        unsigned char 
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  1    wreg      unsigned char 
  2175 ;; Registers used:
  2176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2182 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;Total ram usage:        3 bytes
  2187 ;; Hardware stack levels used: 1
  2188 ;; Hardware stack levels required when called: 1
  2189 ;; This function calls:
  2190 ;;		_gpio_pin_write_logic
  2191 ;; This function is called by:
  2192 ;;		_main
  2193 ;;		_timer_init
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text5
  2198   00F1BA                     __ptext5:
  2199                           	callstack 0
  2200   00F1BA                     _seven_segment_write_number:
  2201                           	callstack 28
  2202   00F1BA                     
  2203                           ;ECU_Layer/7_Segment/ecu_sev_segment.c: 58:     if(((void*)0) == seg_config || number > 
      +                          (uint8)9)
  2204   00F1BA  503D               	movf	seven_segment_write_number@seg_config^0,w,c
  2205   00F1BC  103E               	iorwf	(seven_segment_write_number@seg_config+1)^0,w,c
  2206   00F1BE  B4D8               	btfsc	status,2,c
  2207   00F1C0  EFE4  F078         	goto	u1521
  2208   00F1C4  EFE6  F078         	goto	u1520
  2209   00F1C8                     u1521:
  2210   00F1C8  EFEE  F078         	goto	l2036
  2211   00F1CC                     u1520:
  2212   00F1CC  0E09               	movlw	9
  2213   00F1CE  643F               	cpfsgt	seven_segment_write_number@number^0,c
  2214   00F1D0  EFEC  F078         	goto	u1531
  2215   00F1D4  EFEE  F078         	goto	u1530
  2216   00F1D8                     u1531:
  2217   00F1D8  EFF0  F078         	goto	l2038
  2218   00F1DC                     u1530:
  2219   00F1DC                     l2036:
  2220                           
  2221                           ;ECU_Layer/7_Segment/ecu_sev_segment.c: 61:     }
  2222   00F1DC  EF3F  F079         	goto	l20
  2223   00F1E0                     l2038:
  2224                           
  2225                           ;ECU_Layer/7_Segment/ecu_sev_segment.c: 63:     {;ECU_Layer/7_Segment/ecu_sev_segment.c:
      +                           64:         if((gpio_pin_write_logic(&(seg_config -> segment_pins[0]), number & 0x01)) 
      +                          &&
  2226   00F1E0  C03D  F033         	movff	seven_segment_write_number@seg_config,gpio_pin_write_logic@_pin_config
  2227   00F1E4  C03E  F034         	movff	seven_segment_write_number@seg_config+1,gpio_pin_write_logic@_pin_config+1
  2228   00F1E8  503F               	movf	seven_segment_write_number@number^0,w,c
  2229   00F1EA  0B01               	andlw	1
  2230   00F1EC  6E35               	movwf	gpio_pin_write_logic@_logic^0,c
  2231   00F1EE  EC40  F079         	call	_gpio_pin_write_logic	;wreg free
  2232   00F1F2  0900               	iorlw	0
  2233   00F1F4  B4D8               	btfsc	status,2,c
  2234   00F1F6  EFFF  F078         	goto	u1541
  2235   00F1FA  EF01  F079         	goto	u1540
  2236   00F1FE                     u1541:
  2237   00F1FE  EFEE  F078         	goto	l2036
  2238   00F202                     u1540:
  2239   00F202  0E01               	movlw	1
  2240   00F204  243D               	addwf	seven_segment_write_number@seg_config^0,w,c
  2241   00F206  6E33               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2242   00F208  0E00               	movlw	0
  2243   00F20A  203E               	addwfc	(seven_segment_write_number@seg_config+1)^0,w,c
  2244   00F20C  6E34               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2245   00F20E  90D8               	bcf	status,0,c
  2246   00F210  303F               	rrcf	seven_segment_write_number@number^0,w,c
  2247   00F212  0B01               	andlw	1
  2248   00F214  6E35               	movwf	gpio_pin_write_logic@_logic^0,c
  2249   00F216  EC40  F079         	call	_gpio_pin_write_logic	;wreg free
  2250   00F21A  0900               	iorlw	0
  2251   00F21C  B4D8               	btfsc	status,2,c
  2252   00F21E  EF13  F079         	goto	u1551
  2253   00F222  EF15  F079         	goto	u1550
  2254   00F226                     u1551:
  2255   00F226  EFEE  F078         	goto	l2036
  2256   00F22A                     u1550:
  2257   00F22A  0E02               	movlw	2
  2258   00F22C  243D               	addwf	seven_segment_write_number@seg_config^0,w,c
  2259   00F22E  6E33               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2260   00F230  0E00               	movlw	0
  2261   00F232  203E               	addwfc	(seven_segment_write_number@seg_config+1)^0,w,c
  2262   00F234  6E34               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2263   00F236  403F               	rrncf	seven_segment_write_number@number^0,w,c
  2264   00F238  42E8               	rrncf	wreg,f,c
  2265   00F23A  0B3F               	andlw	63
  2266   00F23C  0B01               	andlw	1
  2267   00F23E  6E35               	movwf	gpio_pin_write_logic@_logic^0,c
  2268   00F240  EC40  F079         	call	_gpio_pin_write_logic	;wreg free
  2269   00F244  0900               	iorlw	0
  2270   00F246  B4D8               	btfsc	status,2,c
  2271   00F248  EF28  F079         	goto	u1561
  2272   00F24C  EF2A  F079         	goto	u1560
  2273   00F250                     u1561:
  2274   00F250  EFEE  F078         	goto	l2036
  2275   00F254                     u1560:
  2276   00F254  0E03               	movlw	3
  2277   00F256  243D               	addwf	seven_segment_write_number@seg_config^0,w,c
  2278   00F258  6E33               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2279   00F25A  0E00               	movlw	0
  2280   00F25C  203E               	addwfc	(seven_segment_write_number@seg_config+1)^0,w,c
  2281   00F25E  6E34               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2282   00F260  383F               	swapf	seven_segment_write_number@number^0,w,c
  2283   00F262  46E8               	rlncf	wreg,f,c
  2284   00F264  0B1F               	andlw	31
  2285   00F266  0B01               	andlw	1
  2286   00F268  6E35               	movwf	gpio_pin_write_logic@_logic^0,c
  2287   00F26A  EC40  F079         	call	_gpio_pin_write_logic	;wreg free
  2288   00F26E  0900               	iorlw	0
  2289   00F270  B4D8               	btfsc	status,2,c
  2290   00F272  EF3D  F079         	goto	u1571
  2291   00F276  EF3F  F079         	goto	u1570
  2292   00F27A                     u1571:
  2293   00F27A  EFEE  F078         	goto	l2036
  2294   00F27E                     u1570:
  2295   00F27E                     l20:
  2296   00F27E  0012               	return		;funcret
  2297   00F280                     __end_of_seven_segment_write_number:
  2298                           	callstack 0
  2299                           
  2300 ;; *************** function _seven_segment_control_turn_on *****************
  2301 ;; Defined at:
  2302 ;;		line 114 in file "ECU_Layer/7_Segment/ecu_sev_segment.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;  seg_config      2   10[COMRAM] PTR const struct .
  2305 ;;		 -> segment_1(5), 
  2306 ;;  pin_config      2   12[COMRAM] PTR const struct .
  2307 ;;		 -> segment_1_control(1), segment_2_control(1), segment_3_control(1), segment_4_control(1), 
  2308 ;;		 -> segment_5_control(1), segment_6_control(1), 
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;  ret             1    0        unsigned char 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      unsigned char 
  2313 ;; Registers used:
  2314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2320 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2322 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2323 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2324 ;;Total ram usage:        5 bytes
  2325 ;; Hardware stack levels used: 1
  2326 ;; Hardware stack levels required when called: 1
  2327 ;; This function calls:
  2328 ;;		_gpio_pin_write_logic
  2329 ;; This function is called by:
  2330 ;;		_main
  2331 ;;		_timer_init
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           	psect	text6
  2336   00EDE8                     __ptext6:
  2337                           	callstack 0
  2338   00EDE8                     _seven_segment_control_turn_on:
  2339                           	callstack 28
  2340   00EDE8                     
  2341                           ;ECU_Layer/7_Segment/ecu_sev_segment.c: 117:     if(((void*)0) == seg_config || ((void*)
      +                          0) == pin_config)
  2342   00EDE8  503D               	movf	seven_segment_control_turn_on@seg_config^0,w,c
  2343   00EDEA  103E               	iorwf	(seven_segment_control_turn_on@seg_config+1)^0,w,c
  2344   00EDEC  B4D8               	btfsc	status,2,c
  2345   00EDEE  EFFB  F076         	goto	u1581
  2346   00EDF2  EFFD  F076         	goto	u1580
  2347   00EDF6                     u1581:
  2348   00EDF6  EF06  F077         	goto	l2058
  2349   00EDFA                     u1580:
  2350   00EDFA  503F               	movf	seven_segment_control_turn_on@pin_config^0,w,c
  2351   00EDFC  1040               	iorwf	(seven_segment_control_turn_on@pin_config+1)^0,w,c
  2352   00EDFE  A4D8               	btfss	status,2,c
  2353   00EE00  EF04  F077         	goto	u1591
  2354   00EE04  EF06  F077         	goto	u1590
  2355   00EE08                     u1591:
  2356   00EE08  EF08  F077         	goto	l2060
  2357   00EE0C                     u1590:
  2358   00EE0C                     l2058:
  2359                           
  2360                           ;ECU_Layer/7_Segment/ecu_sev_segment.c: 120:     }
  2361   00EE0C  EF36  F077         	goto	l36
  2362   00EE10                     l2060:
  2363                           
  2364                           ;ECU_Layer/7_Segment/ecu_sev_segment.c: 122:     {;ECU_Layer/7_Segment/ecu_sev_segment.c
      +                          : 123:         if(seg_config -> segment_type == SEGMENT_COMMON_ANODE)
  2365   00EE10  EE20 F004          	lfsr	2,4
  2366   00EE14  503D               	movf	seven_segment_control_turn_on@seg_config^0,w,c
  2367   00EE16  26D9               	addwf	fsr2l,f,c
  2368   00EE18  503E               	movf	(seven_segment_control_turn_on@seg_config+1)^0,w,c
  2369   00EE1A  22DA               	addwfc	fsr2h,f,c
  2370   00EE1C  50DF               	movf	indf2,w,c
  2371   00EE1E  A4D8               	btfss	status,2,c
  2372   00EE20  EF14  F077         	goto	u1601
  2373   00EE24  EF16  F077         	goto	u1600
  2374   00EE28                     u1601:
  2375   00EE28  EF20  F077         	goto	l2064
  2376   00EE2C                     u1600:
  2377   00EE2C  C03F  F033         	movff	seven_segment_control_turn_on@pin_config,gpio_pin_write_logic@_pin_config
  2378   00EE30  C040  F034         	movff	seven_segment_control_turn_on@pin_config+1,gpio_pin_write_logic@_pin_config+1
  2379   00EE34  0E01               	movlw	1
  2380   00EE36  6E35               	movwf	gpio_pin_write_logic@_logic^0,c
  2381   00EE38  EC40  F079         	call	_gpio_pin_write_logic	;wreg free
  2382                           
  2383                           ;ECU_Layer/7_Segment/ecu_sev_segment.c: 126:         }
  2384   00EE3C  EF36  F077         	goto	l36
  2385   00EE40                     l2064:
  2386   00EE40  EE20 F004          	lfsr	2,4
  2387   00EE44  503D               	movf	seven_segment_control_turn_on@seg_config^0,w,c
  2388   00EE46  26D9               	addwf	fsr2l,f,c
  2389   00EE48  503E               	movf	(seven_segment_control_turn_on@seg_config+1)^0,w,c
  2390   00EE4A  22DA               	addwfc	fsr2h,f,c
  2391   00EE4C  04DE               	decf	postinc2,w,c
  2392   00EE4E  A4D8               	btfss	status,2,c
  2393   00EE50  EF2C  F077         	goto	u1611
  2394   00EE54  EF2E  F077         	goto	u1610
  2395   00EE58                     u1611:
  2396   00EE58  EF06  F077         	goto	l2058
  2397   00EE5C                     u1610:
  2398   00EE5C  C03F  F033         	movff	seven_segment_control_turn_on@pin_config,gpio_pin_write_logic@_pin_config
  2399   00EE60  C040  F034         	movff	seven_segment_control_turn_on@pin_config+1,gpio_pin_write_logic@_pin_config+1
  2400   00EE64  0E00               	movlw	0
  2401   00EE66  6E35               	movwf	gpio_pin_write_logic@_logic^0,c
  2402   00EE68  EC40  F079         	call	_gpio_pin_write_logic	;wreg free
  2403   00EE6C                     l36:
  2404   00EE6C  0012               	return		;funcret
  2405   00EE6E                     __end_of_seven_segment_control_turn_on:
  2406                           	callstack 0
  2407                           
  2408 ;; *************** function _seven_segment_control_turn_off *****************
  2409 ;; Defined at:
  2410 ;;		line 147 in file "ECU_Layer/7_Segment/ecu_sev_segment.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  seg_config      2   10[COMRAM] PTR const struct .
  2413 ;;		 -> segment_1(5), 
  2414 ;;  pin_config      2   12[COMRAM] PTR const struct .
  2415 ;;		 -> segment_1_control(1), segment_2_control(1), segment_3_control(1), segment_4_control(1), 
  2416 ;;		 -> segment_5_control(1), segment_6_control(1), 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  ret             1    0        unsigned char 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      unsigned char 
  2421 ;; Registers used:
  2422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2428 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;Total ram usage:        5 bytes
  2433 ;; Hardware stack levels used: 1
  2434 ;; Hardware stack levels required when called: 1
  2435 ;; This function calls:
  2436 ;;		_gpio_pin_write_logic
  2437 ;; This function is called by:
  2438 ;;		_main
  2439 ;;		_timer_init
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text7
  2444   00ED62                     __ptext7:
  2445                           	callstack 0
  2446   00ED62                     _seven_segment_control_turn_off:
  2447                           	callstack 28
  2448   00ED62                     
  2449                           ;ECU_Layer/7_Segment/ecu_sev_segment.c: 150:     if(((void*)0) == seg_config || ((void*)
      +                          0) == pin_config)
  2450   00ED62  503D               	movf	seven_segment_control_turn_off@seg_config^0,w,c
  2451   00ED64  103E               	iorwf	(seven_segment_control_turn_off@seg_config+1)^0,w,c
  2452   00ED66  B4D8               	btfsc	status,2,c
  2453   00ED68  EFB8  F076         	goto	u1621
  2454   00ED6C  EFBA  F076         	goto	u1620
  2455   00ED70                     u1621:
  2456   00ED70  EFC3  F076         	goto	l2078
  2457   00ED74                     u1620:
  2458   00ED74  503F               	movf	seven_segment_control_turn_off@pin_config^0,w,c
  2459   00ED76  1040               	iorwf	(seven_segment_control_turn_off@pin_config+1)^0,w,c
  2460   00ED78  A4D8               	btfss	status,2,c
  2461   00ED7A  EFC1  F076         	goto	u1631
  2462   00ED7E  EFC3  F076         	goto	u1630
  2463   00ED82                     u1631:
  2464   00ED82  EFC5  F076         	goto	l2080
  2465   00ED86                     u1630:
  2466   00ED86                     l2078:
  2467                           
  2468                           ;ECU_Layer/7_Segment/ecu_sev_segment.c: 153:     }
  2469   00ED86  EFF3  F076         	goto	l47
  2470   00ED8A                     l2080:
  2471                           
  2472                           ;ECU_Layer/7_Segment/ecu_sev_segment.c: 155:     {;ECU_Layer/7_Segment/ecu_sev_segment.c
      +                          : 156:         if(seg_config -> segment_type == SEGMENT_COMMON_ANODE)
  2473   00ED8A  EE20 F004          	lfsr	2,4
  2474   00ED8E  503D               	movf	seven_segment_control_turn_off@seg_config^0,w,c
  2475   00ED90  26D9               	addwf	fsr2l,f,c
  2476   00ED92  503E               	movf	(seven_segment_control_turn_off@seg_config+1)^0,w,c
  2477   00ED94  22DA               	addwfc	fsr2h,f,c
  2478   00ED96  50DF               	movf	indf2,w,c
  2479   00ED98  A4D8               	btfss	status,2,c
  2480   00ED9A  EFD1  F076         	goto	u1641
  2481   00ED9E  EFD3  F076         	goto	u1640
  2482   00EDA2                     u1641:
  2483   00EDA2  EFDD  F076         	goto	l2084
  2484   00EDA6                     u1640:
  2485   00EDA6  C03F  F033         	movff	seven_segment_control_turn_off@pin_config,gpio_pin_write_logic@_pin_config
  2486   00EDAA  C040  F034         	movff	seven_segment_control_turn_off@pin_config+1,gpio_pin_write_logic@_pin_config+1
  2487   00EDAE  0E00               	movlw	0
  2488   00EDB0  6E35               	movwf	gpio_pin_write_logic@_logic^0,c
  2489   00EDB2  EC40  F079         	call	_gpio_pin_write_logic	;wreg free
  2490                           
  2491                           ;ECU_Layer/7_Segment/ecu_sev_segment.c: 159:         }
  2492   00EDB6  EFF3  F076         	goto	l47
  2493   00EDBA                     l2084:
  2494   00EDBA  EE20 F004          	lfsr	2,4
  2495   00EDBE  503D               	movf	seven_segment_control_turn_off@seg_config^0,w,c
  2496   00EDC0  26D9               	addwf	fsr2l,f,c
  2497   00EDC2  503E               	movf	(seven_segment_control_turn_off@seg_config+1)^0,w,c
  2498   00EDC4  22DA               	addwfc	fsr2h,f,c
  2499   00EDC6  04DE               	decf	postinc2,w,c
  2500   00EDC8  A4D8               	btfss	status,2,c
  2501   00EDCA  EFE9  F076         	goto	u1651
  2502   00EDCE  EFEB  F076         	goto	u1650
  2503   00EDD2                     u1651:
  2504   00EDD2  EFC3  F076         	goto	l2078
  2505   00EDD6                     u1650:
  2506   00EDD6  C03F  F033         	movff	seven_segment_control_turn_off@pin_config,gpio_pin_write_logic@_pin_config
  2507   00EDDA  C040  F034         	movff	seven_segment_control_turn_off@pin_config+1,gpio_pin_write_logic@_pin_config+1
  2508   00EDDE  0E01               	movlw	1
  2509   00EDE0  6E35               	movwf	gpio_pin_write_logic@_logic^0,c
  2510   00EDE2  EC40  F079         	call	_gpio_pin_write_logic	;wreg free
  2511   00EDE6                     l47:
  2512   00EDE6  0012               	return		;funcret
  2513   00EDE8                     __end_of_seven_segment_control_turn_off:
  2514                           	callstack 0
  2515                           
  2516 ;; *************** function _button_read_logic *****************
  2517 ;; Defined at:
  2518 ;;		line 41 in file "ECU_Layer/button/ecu_button.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;  btn             2    9[COMRAM] PTR const struct .
  2521 ;;		 -> set_button(3), down_button(3), up_button(3), 
  2522 ;;  state           2   11[COMRAM] PTR enum E2859
  2523 ;;		 -> down_button_state(1), up_button_state(1), set_button_state(1), 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  Pin_Logic_St    1   14[COMRAM] enum E2801
  2526 ;;  ret             1    0        unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      unsigned char 
  2529 ;; Registers used:
  2530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2536 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;Total ram usage:        6 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 1
  2543 ;; This function calls:
  2544 ;;		_gpio_pin_read_logic
  2545 ;; This function is called by:
  2546 ;;		_main
  2547 ;;		_timer_init
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           	psect	text8
  2552   00F54A                     __ptext8:
  2553                           	callstack 0
  2554   00F54A                     _button_read_logic:
  2555                           	callstack 28
  2556   00F54A                     
  2557                           ;ECU_Layer/button/ecu_button.c: 44:     logic_t Pin_Logic_Status = GPIO_LOW;
  2558   00F54A  0E00               	movlw	0
  2559   00F54C  6E41               	movwf	button_read_logic@Pin_Logic_Status^0,c
  2560   00F54E                     
  2561                           ;ECU_Layer/button/ecu_button.c: 45:     *state = BUTTON_RELEASED;
  2562   00F54E  C03E  FFD9         	movff	button_read_logic@state,fsr2l
  2563   00F552  C03F  FFDA         	movff	button_read_logic@state+1,fsr2h
  2564   00F556  6ADF               	clrf	indf2,c
  2565   00F558                     
  2566                           ;ECU_Layer/button/ecu_button.c: 46:     if(((void*)0) == btn || ((void*)0) == state)
  2567   00F558  503C               	movf	button_read_logic@btn^0,w,c
  2568   00F55A  103D               	iorwf	(button_read_logic@btn+1)^0,w,c
  2569   00F55C  B4D8               	btfsc	status,2,c
  2570   00F55E  EFB3  F07A         	goto	u1661
  2571   00F562  EFB5  F07A         	goto	u1660
  2572   00F566                     u1661:
  2573   00F566  EFBE  F07A         	goto	l2100
  2574   00F56A                     u1660:
  2575   00F56A  503E               	movf	button_read_logic@state^0,w,c
  2576   00F56C  103F               	iorwf	(button_read_logic@state+1)^0,w,c
  2577   00F56E  A4D8               	btfss	status,2,c
  2578   00F570  EFBC  F07A         	goto	u1671
  2579   00F574  EFBE  F07A         	goto	u1670
  2580   00F578                     u1671:
  2581   00F578  EFC0  F07A         	goto	l2102
  2582   00F57C                     u1670:
  2583   00F57C                     l2100:
  2584                           
  2585                           ;ECU_Layer/button/ecu_button.c: 49:     }
  2586   00F57C  EF6E  F07B         	goto	l81
  2587   00F580                     l2102:
  2588                           
  2589                           ;ECU_Layer/button/ecu_button.c: 51:     {;ECU_Layer/button/ecu_button.c: 52:         gpi
      +                          o_pin_read_logic(&(btn->btn_obj), &Pin_Logic_Status);
  2590   00F580  C03C  F033         	movff	button_read_logic@btn,gpio_pin_read_logic@_pin_config
  2591   00F584  C03D  F034         	movff	button_read_logic@btn+1,gpio_pin_read_logic@_pin_config+1
  2592   00F588  0E41               	movlw	low button_read_logic@Pin_Logic_Status
  2593   00F58A  6E35               	movwf	gpio_pin_read_logic@_logic^0,c
  2594   00F58C  0E00               	movlw	high button_read_logic@Pin_Logic_Status
  2595   00F58E  6E36               	movwf	(gpio_pin_read_logic@_logic+1)^0,c
  2596   00F590  EC1E  F078         	call	_gpio_pin_read_logic	;wreg free
  2597   00F594                     
  2598                           ;ECU_Layer/button/ecu_button.c: 53:         if(BUTTON_ACTIVE_HIGH == btn->button_connect
      +                          ion){
  2599   00F594  EE20 F002          	lfsr	2,2
  2600   00F598  503C               	movf	button_read_logic@btn^0,w,c
  2601   00F59A  26D9               	addwf	fsr2l,f,c
  2602   00F59C  503D               	movf	(button_read_logic@btn+1)^0,w,c
  2603   00F59E  22DA               	addwfc	fsr2h,f,c
  2604   00F5A0  04DE               	decf	postinc2,w,c
  2605   00F5A2  A4D8               	btfss	status,2,c
  2606   00F5A4  EFD6  F07A         	goto	u1681
  2607   00F5A8  EFD8  F07A         	goto	u1680
  2608   00F5AC                     u1681:
  2609   00F5AC  EF1C  F07B         	goto	l2122
  2610   00F5B0                     u1680:
  2611   00F5B0                     
  2612                           ;ECU_Layer/button/ecu_button.c: 54:             if(GPIO_HIGH == Pin_Logic_Status){
  2613   00F5B0  0441               	decf	button_read_logic@Pin_Logic_Status^0,w,c
  2614   00F5B2  A4D8               	btfss	status,2,c
  2615   00F5B4  EFDE  F07A         	goto	u1691
  2616   00F5B8  EFE0  F07A         	goto	u1690
  2617   00F5BC                     u1691:
  2618   00F5BC  EF6E  F07B         	goto	l72
  2619   00F5C0                     u1690:
  2620   00F5C0                     
  2621                           ;ECU_Layer/button/ecu_button.c: 56:                 _delay((unsigned long)((10)*(4000000
      +                          UL/4000.0)));
  2622   00F5C0  0E0D               	movlw	13
  2623   00F5C2  6E40               	movwf	??_button_read_logic^0,c
  2624   00F5C4  0EFC               	movlw	252
  2625   00F5C6                     u2747:
  2626   00F5C6  2EE8               	decfsz	wreg,f,c
  2627   00F5C8  D7FE               	bra	u2747
  2628   00F5CA  2E40               	decfsz	??_button_read_logic^0,f,c
  2629   00F5CC  D7FC               	bra	u2747
  2630   00F5CE                     
  2631                           ;ECU_Layer/button/ecu_button.c: 57:                 gpio_pin_read_logic(&(btn->btn_obj),
      +                           &Pin_Logic_Status);
  2632   00F5CE  C03C  F033         	movff	button_read_logic@btn,gpio_pin_read_logic@_pin_config
  2633   00F5D2  C03D  F034         	movff	button_read_logic@btn+1,gpio_pin_read_logic@_pin_config+1
  2634   00F5D6  0E41               	movlw	low button_read_logic@Pin_Logic_Status
  2635   00F5D8  6E35               	movwf	gpio_pin_read_logic@_logic^0,c
  2636   00F5DA  0E00               	movlw	high button_read_logic@Pin_Logic_Status
  2637   00F5DC  6E36               	movwf	(gpio_pin_read_logic@_logic+1)^0,c
  2638   00F5DE  EC1E  F078         	call	_gpio_pin_read_logic	;wreg free
  2639   00F5E2                     
  2640                           ;ECU_Layer/button/ecu_button.c: 58:                 if(GPIO_HIGH == Pin_Logic_Status)
  2641   00F5E2  0441               	decf	button_read_logic@Pin_Logic_Status^0,w,c
  2642   00F5E4  A4D8               	btfss	status,2,c
  2643   00F5E6  EFF7  F07A         	goto	u1701
  2644   00F5EA  EFF9  F07A         	goto	u1700
  2645   00F5EE                     u1701:
  2646   00F5EE  EF6E  F07B         	goto	l81
  2647   00F5F2                     u1700:
  2648   00F5F2                     
  2649                           ;ECU_Layer/button/ecu_button.c: 59:                 {;ECU_Layer/button/ecu_button.c: 60:
      +                                               *state = BUTTON_PRESSED;
  2650   00F5F2  C03E  FFD9         	movff	button_read_logic@state,fsr2l
  2651   00F5F6  C03F  FFDA         	movff	button_read_logic@state+1,fsr2h
  2652   00F5FA  0E01               	movlw	1
  2653   00F5FC  6EDF               	movwf	indf2,c
  2654                           
  2655                           ;ECU_Layer/button/ecu_button.c: 61:                     while(GPIO_HIGH == Pin_Logic_Sta
      +                          tus)
  2656   00F5FE  EF12  F07B         	goto	l2120
  2657   00F602                     l2116:
  2658                           
  2659                           ;ECU_Layer/button/ecu_button.c: 62:                     {;ECU_Layer/button/ecu_button.c:
      +                           63:                         gpio_pin_read_logic(&(btn->btn_obj), &Pin_Logic_Status);
  2660   00F602  C03C  F033         	movff	button_read_logic@btn,gpio_pin_read_logic@_pin_config
  2661   00F606  C03D  F034         	movff	button_read_logic@btn+1,gpio_pin_read_logic@_pin_config+1
  2662   00F60A  0E41               	movlw	low button_read_logic@Pin_Logic_Status
  2663   00F60C  6E35               	movwf	gpio_pin_read_logic@_logic^0,c
  2664   00F60E  0E00               	movlw	high button_read_logic@Pin_Logic_Status
  2665   00F610  6E36               	movwf	(gpio_pin_read_logic@_logic+1)^0,c
  2666   00F612  EC1E  F078         	call	_gpio_pin_read_logic	;wreg free
  2667   00F616                     
  2668                           ;ECU_Layer/button/ecu_button.c: 64:                         _delay((unsigned long)((10)*
      +                          (4000000UL/4000.0)));
  2669   00F616  0E0D               	movlw	13
  2670   00F618  6E40               	movwf	??_button_read_logic^0,c
  2671   00F61A  0EFC               	movlw	252
  2672   00F61C                     u2757:
  2673   00F61C  2EE8               	decfsz	wreg,f,c
  2674   00F61E  D7FE               	bra	u2757
  2675   00F620  2E40               	decfsz	??_button_read_logic^0,f,c
  2676   00F622  D7FC               	bra	u2757
  2677   00F624                     l2120:
  2678                           
  2679                           ;ECU_Layer/button/ecu_button.c: 61:                     while(GPIO_HIGH == Pin_Logic_Sta
      +                          tus)
  2680   00F624  0441               	decf	button_read_logic@Pin_Logic_Status^0,w,c
  2681   00F626  B4D8               	btfsc	status,2,c
  2682   00F628  EF18  F07B         	goto	u1711
  2683   00F62C  EF1A  F07B         	goto	u1710
  2684   00F630                     u1711:
  2685   00F630  EF01  F07B         	goto	l2116
  2686   00F634                     u1710:
  2687   00F634  EF6E  F07B         	goto	l81
  2688   00F638                     l2122:
  2689   00F638  EE20 F002          	lfsr	2,2
  2690   00F63C  503C               	movf	button_read_logic@btn^0,w,c
  2691   00F63E  26D9               	addwf	fsr2l,f,c
  2692   00F640  503D               	movf	(button_read_logic@btn+1)^0,w,c
  2693   00F642  22DA               	addwfc	fsr2h,f,c
  2694   00F644  50DF               	movf	indf2,w,c
  2695   00F646  A4D8               	btfss	status,2,c
  2696   00F648  EF28  F07B         	goto	u1721
  2697   00F64C  EF2A  F07B         	goto	u1720
  2698   00F650                     u1721:
  2699   00F650  EF6E  F07B         	goto	l72
  2700   00F654                     u1720:
  2701   00F654                     
  2702                           ;ECU_Layer/button/ecu_button.c: 74:             if(GPIO_LOW == Pin_Logic_Status){
  2703   00F654  5041               	movf	button_read_logic@Pin_Logic_Status^0,w,c
  2704   00F656  A4D8               	btfss	status,2,c
  2705   00F658  EF30  F07B         	goto	u1731
  2706   00F65C  EF32  F07B         	goto	u1730
  2707   00F660                     u1731:
  2708   00F660  EF6E  F07B         	goto	l81
  2709   00F664                     u1730:
  2710   00F664                     
  2711                           ;ECU_Layer/button/ecu_button.c: 75:                 _delay((unsigned long)((10)*(4000000
      +                          UL/4000.0)));
  2712   00F664  0E0D               	movlw	13
  2713   00F666  6E40               	movwf	??_button_read_logic^0,c
  2714   00F668  0EFC               	movlw	252
  2715   00F66A                     u2767:
  2716   00F66A  2EE8               	decfsz	wreg,f,c
  2717   00F66C  D7FE               	bra	u2767
  2718   00F66E  2E40               	decfsz	??_button_read_logic^0,f,c
  2719   00F670  D7FC               	bra	u2767
  2720   00F672                     
  2721                           ;ECU_Layer/button/ecu_button.c: 76:                 gpio_pin_read_logic(&(btn->btn_obj),
      +                           &Pin_Logic_Status);
  2722   00F672  C03C  F033         	movff	button_read_logic@btn,gpio_pin_read_logic@_pin_config
  2723   00F676  C03D  F034         	movff	button_read_logic@btn+1,gpio_pin_read_logic@_pin_config+1
  2724   00F67A  0E41               	movlw	low button_read_logic@Pin_Logic_Status
  2725   00F67C  6E35               	movwf	gpio_pin_read_logic@_logic^0,c
  2726   00F67E  0E00               	movlw	high button_read_logic@Pin_Logic_Status
  2727   00F680  6E36               	movwf	(gpio_pin_read_logic@_logic+1)^0,c
  2728   00F682  EC1E  F078         	call	_gpio_pin_read_logic	;wreg free
  2729   00F686                     
  2730                           ;ECU_Layer/button/ecu_button.c: 77:                 if(GPIO_LOW == Pin_Logic_Status)
  2731   00F686  5041               	movf	button_read_logic@Pin_Logic_Status^0,w,c
  2732   00F688  A4D8               	btfss	status,2,c
  2733   00F68A  EF49  F07B         	goto	u1741
  2734   00F68E  EF4B  F07B         	goto	u1740
  2735   00F692                     u1741:
  2736   00F692  EF6E  F07B         	goto	l81
  2737   00F696                     u1740:
  2738   00F696                     
  2739                           ;ECU_Layer/button/ecu_button.c: 78:                 {;ECU_Layer/button/ecu_button.c: 79:
      +                                               *state = BUTTON_PRESSED;
  2740   00F696  C03E  FFD9         	movff	button_read_logic@state,fsr2l
  2741   00F69A  C03F  FFDA         	movff	button_read_logic@state+1,fsr2h
  2742   00F69E  0E01               	movlw	1
  2743   00F6A0  6EDF               	movwf	indf2,c
  2744                           
  2745                           ;ECU_Layer/button/ecu_button.c: 80:                     while(GPIO_LOW == Pin_Logic_Stat
      +                          us)
  2746   00F6A2  EF64  F07B         	goto	l2138
  2747   00F6A6                     l2134:
  2748                           
  2749                           ;ECU_Layer/button/ecu_button.c: 81:                     {;ECU_Layer/button/ecu_button.c:
      +                           82:                         gpio_pin_read_logic(&(btn->btn_obj), &Pin_Logic_Status);
  2750   00F6A6  C03C  F033         	movff	button_read_logic@btn,gpio_pin_read_logic@_pin_config
  2751   00F6AA  C03D  F034         	movff	button_read_logic@btn+1,gpio_pin_read_logic@_pin_config+1
  2752   00F6AE  0E41               	movlw	low button_read_logic@Pin_Logic_Status
  2753   00F6B0  6E35               	movwf	gpio_pin_read_logic@_logic^0,c
  2754   00F6B2  0E00               	movlw	high button_read_logic@Pin_Logic_Status
  2755   00F6B4  6E36               	movwf	(gpio_pin_read_logic@_logic+1)^0,c
  2756   00F6B6  EC1E  F078         	call	_gpio_pin_read_logic	;wreg free
  2757   00F6BA                     
  2758                           ;ECU_Layer/button/ecu_button.c: 83:                         _delay((unsigned long)((10)*
      +                          (4000000UL/4000.0)));
  2759   00F6BA  0E0D               	movlw	13
  2760   00F6BC  6E40               	movwf	??_button_read_logic^0,c
  2761   00F6BE  0EFC               	movlw	252
  2762   00F6C0                     u2777:
  2763   00F6C0  2EE8               	decfsz	wreg,f,c
  2764   00F6C2  D7FE               	bra	u2777
  2765   00F6C4  2E40               	decfsz	??_button_read_logic^0,f,c
  2766   00F6C6  D7FC               	bra	u2777
  2767   00F6C8                     l2138:
  2768                           
  2769                           ;ECU_Layer/button/ecu_button.c: 80:                     while(GPIO_LOW == Pin_Logic_Stat
      +                          us)
  2770   00F6C8  5041               	movf	button_read_logic@Pin_Logic_Status^0,w,c
  2771   00F6CA  B4D8               	btfsc	status,2,c
  2772   00F6CC  EF6A  F07B         	goto	u1751
  2773   00F6D0  EF6C  F07B         	goto	u1750
  2774   00F6D4                     u1751:
  2775   00F6D4  EF53  F07B         	goto	l2134
  2776   00F6D8                     u1750:
  2777   00F6D8  EF6E  F07B         	goto	l81
  2778   00F6DC                     l72:
  2779   00F6DC                     l81:
  2780   00F6DC  0012               	return		;funcret
  2781   00F6DE                     __end_of_button_read_logic:
  2782                           	callstack 0
  2783                           
  2784 ;; *************** function _gpio_pin_read_logic *****************
  2785 ;; Defined at:
  2786 ;;		line 112 in file "Mcal_Layer/GPIO/hal_gpio.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  2789 ;;		 -> set_button(3), down_button(3), up_button(3), 
  2790 ;;  _logic          2    2[COMRAM] PTR enum E2801
  2791 ;;		 -> button_read_logic@Pin_Logic_Status(1), 
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;  ret             1    0        unsigned char 
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  1    wreg      unsigned char 
  2796 ;; Registers used:
  2797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2803 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2805 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2806 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2807 ;;Total ram usage:        9 bytes
  2808 ;; Hardware stack levels used: 1
  2809 ;; This function calls:
  2810 ;;		Nothing
  2811 ;; This function is called by:
  2812 ;;		_button_read_logic
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           	psect	text9
  2817   00F03C                     __ptext9:
  2818                           	callstack 0
  2819   00F03C                     _gpio_pin_read_logic:
  2820                           	callstack 28
  2821   00F03C                     
  2822                           ;Mcal_Layer/GPIO/hal_gpio.c: 115:     if(((void*)0) == _pin_config || _pin_config -> por
      +                          t > 5 - 1 || _pin_config -> pin > 8 - 1)
  2823   00F03C  5033               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  2824   00F03E  1034               	iorwf	(gpio_pin_read_logic@_pin_config+1)^0,w,c
  2825   00F040  B4D8               	btfsc	status,2,c
  2826   00F042  EF25  F078         	goto	u1411
  2827   00F046  EF27  F078         	goto	u1410
  2828   00F04A                     u1411:
  2829   00F04A  EF47  F078         	goto	l1996
  2830   00F04E                     u1410:
  2831   00F04E  C033  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  2832   00F052  C034  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  2833   00F056  50DF               	movf	223,w,c
  2834   00F058  0B07               	andlw	7
  2835   00F05A  6E37               	movwf	??_gpio_pin_read_logic^0,c
  2836   00F05C  0E05               	movlw	5
  2837   00F05E  6037               	cpfslt	??_gpio_pin_read_logic^0,c
  2838   00F060  EF34  F078         	goto	u1421
  2839   00F064  EF36  F078         	goto	u1420
  2840   00F068                     u1421:
  2841   00F068  EF47  F078         	goto	l1996
  2842   00F06C                     u1420:
  2843   00F06C  C033  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  2844   00F070  C034  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  2845   00F074  30DF               	rrcf	223,w,c
  2846   00F076  32E8               	rrcf	wreg,f,c
  2847   00F078  32E8               	rrcf	wreg,f,c
  2848   00F07A  0B07               	andlw	7
  2849   00F07C  6E37               	movwf	??_gpio_pin_read_logic^0,c
  2850   00F07E  0E07               	movlw	7
  2851   00F080  6437               	cpfsgt	??_gpio_pin_read_logic^0,c
  2852   00F082  EF45  F078         	goto	u1431
  2853   00F086  EF47  F078         	goto	u1430
  2854   00F08A                     u1431:
  2855   00F08A  EF49  F078         	goto	l1998
  2856   00F08E                     u1430:
  2857   00F08E                     l1996:
  2858                           
  2859                           ;Mcal_Layer/GPIO/hal_gpio.c: 118:     }
  2860   00F08E  EF7A  F078         	goto	l248
  2861   00F092                     l1998:
  2862                           
  2863                           ;Mcal_Layer/GPIO/hal_gpio.c: 120:     {;Mcal_Layer/GPIO/hal_gpio.c: 121:         *_logic
      +                           = ( (*port_registers[_pin_config -> port] >> _pin_config -> pin) & (uint8)1 );
  2864   00F092  C033  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  2865   00F096  C034  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  2866   00F09A  30DF               	rrcf	223,w,c
  2867   00F09C  32E8               	rrcf	wreg,f,c
  2868   00F09E  32E8               	rrcf	wreg,f,c
  2869   00F0A0  0B07               	andlw	7
  2870   00F0A2  6E37               	movwf	??_gpio_pin_read_logic^0,c
  2871   00F0A4  C033  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  2872   00F0A8  C034  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  2873   00F0AC  50DF               	movf	223,w,c
  2874   00F0AE  0B07               	andlw	7
  2875   00F0B0  6E38               	movwf	(??_gpio_pin_read_logic+1)^0,c
  2876   00F0B2  5038               	movf	(??_gpio_pin_read_logic+1)^0,w,c
  2877   00F0B4  0D02               	mullw	2
  2878   00F0B6  0E01               	movlw	low _port_registers
  2879   00F0B8  24F3               	addwf	243,w,c
  2880   00F0BA  6ED9               	movwf	fsr2l,c
  2881   00F0BC  0E00               	movlw	high _port_registers
  2882   00F0BE  20F4               	addwfc	prodh,w,c
  2883   00F0C0  6EDA               	movwf	fsr2h,c
  2884   00F0C2  CFDE F039          	movff	postinc2,??_gpio_pin_read_logic+2
  2885   00F0C6  CFDD F03A          	movff	postdec2,??_gpio_pin_read_logic+3
  2886   00F0CA  C039  FFD9         	movff	??_gpio_pin_read_logic+2,fsr2l
  2887   00F0CE  C03A  FFDA         	movff	??_gpio_pin_read_logic+3,fsr2h
  2888   00F0D2  50DF               	movf	indf2,w,c
  2889   00F0D4  6E3B               	movwf	(??_gpio_pin_read_logic+4)^0,c
  2890   00F0D6  2A37               	incf	??_gpio_pin_read_logic^0,f,c
  2891   00F0D8  EF70  F078         	goto	u1444
  2892   00F0DC                     u1445:
  2893   00F0DC  90D8               	bcf	status,0,c
  2894   00F0DE  323B               	rrcf	(??_gpio_pin_read_logic+4)^0,f,c
  2895   00F0E0                     u1444:
  2896   00F0E0  2E37               	decfsz	??_gpio_pin_read_logic^0,f,c
  2897   00F0E2  EF6E  F078         	goto	u1445
  2898   00F0E6  503B               	movf	(??_gpio_pin_read_logic+4)^0,w,c
  2899   00F0E8  0B01               	andlw	1
  2900   00F0EA  C035  FFD9         	movff	gpio_pin_read_logic@_logic,fsr2l
  2901   00F0EE  C036  FFDA         	movff	gpio_pin_read_logic@_logic+1,fsr2h
  2902   00F0F2  6EDF               	movwf	indf2,c
  2903   00F0F4                     l248:
  2904   00F0F4  0012               	return		;funcret
  2905   00F0F6                     __end_of_gpio_pin_read_logic:
  2906                           	callstack 0
  2907                           
  2908 ;; *************** function ___awmod *****************
  2909 ;; Defined at:
  2910 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  dividend        2    0[COMRAM] int 
  2913 ;;  divisor         2    2[COMRAM] int 
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;  sign            1    5[COMRAM] unsigned char 
  2916 ;;  counter         1    4[COMRAM] unsigned char 
  2917 ;; Return value:  Size  Location     Type
  2918 ;;                  2    0[COMRAM] int 
  2919 ;; Registers used:
  2920 ;;		wreg, status,2, status,0
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2926 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2929 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2930 ;;Total ram usage:        6 bytes
  2931 ;; Hardware stack levels used: 1
  2932 ;; This function calls:
  2933 ;;		Nothing
  2934 ;; This function is called by:
  2935 ;;		_main
  2936 ;;		_timer_init
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           	psect	text10
  2941   00EF8C                     __ptext10:
  2942                           	callstack 0
  2943   00EF8C                     ___awmod:
  2944                           	callstack 29
  2945   00EF8C  0E00               	movlw	0
  2946   00EF8E  6E38               	movwf	___awmod@sign^0,c
  2947   00EF90  BE34               	btfsc	(___awmod@dividend+1)^0,7,c
  2948   00EF92  EFCF  F077         	goto	u1820
  2949   00EF96  EFCD  F077         	goto	u1821
  2950   00EF9A                     u1821:
  2951   00EF9A  EFD5  F077         	goto	l2192
  2952   00EF9E                     u1820:
  2953   00EF9E  6C33               	negf	___awmod@dividend^0,c
  2954   00EFA0  1E34               	comf	(___awmod@dividend+1)^0,f,c
  2955   00EFA2  B0D8               	btfsc	status,0,c
  2956   00EFA4  2A34               	incf	(___awmod@dividend+1)^0,f,c
  2957   00EFA6  0E01               	movlw	1
  2958   00EFA8  6E38               	movwf	___awmod@sign^0,c
  2959   00EFAA                     l2192:
  2960   00EFAA  BE36               	btfsc	(___awmod@divisor+1)^0,7,c
  2961   00EFAC  EFDC  F077         	goto	u1830
  2962   00EFB0  EFDA  F077         	goto	u1831
  2963   00EFB4                     u1831:
  2964   00EFB4  EFE0  F077         	goto	l2196
  2965   00EFB8                     u1830:
  2966   00EFB8  6C35               	negf	___awmod@divisor^0,c
  2967   00EFBA  1E36               	comf	(___awmod@divisor+1)^0,f,c
  2968   00EFBC  B0D8               	btfsc	status,0,c
  2969   00EFBE  2A36               	incf	(___awmod@divisor+1)^0,f,c
  2970   00EFC0                     l2196:
  2971   00EFC0  5035               	movf	___awmod@divisor^0,w,c
  2972   00EFC2  1036               	iorwf	(___awmod@divisor+1)^0,w,c
  2973   00EFC4  B4D8               	btfsc	status,2,c
  2974   00EFC6  EFE7  F077         	goto	u1841
  2975   00EFCA  EFE9  F077         	goto	u1840
  2976   00EFCE                     u1841:
  2977   00EFCE  EF0D  F078         	goto	l2212
  2978   00EFD2                     u1840:
  2979   00EFD2  0E01               	movlw	1
  2980   00EFD4  6E37               	movwf	___awmod@counter^0,c
  2981   00EFD6  EFF1  F077         	goto	l2202
  2982   00EFDA                     l2200:
  2983   00EFDA  90D8               	bcf	status,0,c
  2984   00EFDC  3635               	rlcf	___awmod@divisor^0,f,c
  2985   00EFDE  3636               	rlcf	(___awmod@divisor+1)^0,f,c
  2986   00EFE0  2A37               	incf	___awmod@counter^0,f,c
  2987   00EFE2                     l2202:
  2988   00EFE2  AE36               	btfss	(___awmod@divisor+1)^0,7,c
  2989   00EFE4  EFF6  F077         	goto	u1851
  2990   00EFE8  EFF8  F077         	goto	u1850
  2991   00EFEC                     u1851:
  2992   00EFEC  EFED  F077         	goto	l2200
  2993   00EFF0                     u1850:
  2994   00EFF0                     l2204:
  2995   00EFF0  5035               	movf	___awmod@divisor^0,w,c
  2996   00EFF2  5C33               	subwf	___awmod@dividend^0,w,c
  2997   00EFF4  5036               	movf	(___awmod@divisor+1)^0,w,c
  2998   00EFF6  5834               	subwfb	(___awmod@dividend+1)^0,w,c
  2999   00EFF8  A0D8               	btfss	status,0,c
  3000   00EFFA  EF01  F078         	goto	u1861
  3001   00EFFE  EF03  F078         	goto	u1860
  3002   00F002                     u1861:
  3003   00F002  EF07  F078         	goto	l2208
  3004   00F006                     u1860:
  3005   00F006  5035               	movf	___awmod@divisor^0,w,c
  3006   00F008  5E33               	subwf	___awmod@dividend^0,f,c
  3007   00F00A  5036               	movf	(___awmod@divisor+1)^0,w,c
  3008   00F00C  5A34               	subwfb	(___awmod@dividend+1)^0,f,c
  3009   00F00E                     l2208:
  3010   00F00E  90D8               	bcf	status,0,c
  3011   00F010  3236               	rrcf	(___awmod@divisor+1)^0,f,c
  3012   00F012  3235               	rrcf	___awmod@divisor^0,f,c
  3013   00F014  2E37               	decfsz	___awmod@counter^0,f,c
  3014   00F016  EFF8  F077         	goto	l2204
  3015   00F01A                     l2212:
  3016   00F01A  5038               	movf	___awmod@sign^0,w,c
  3017   00F01C  B4D8               	btfsc	status,2,c
  3018   00F01E  EF13  F078         	goto	u1871
  3019   00F022  EF15  F078         	goto	u1870
  3020   00F026                     u1871:
  3021   00F026  EF19  F078         	goto	l2216
  3022   00F02A                     u1870:
  3023   00F02A  6C33               	negf	___awmod@dividend^0,c
  3024   00F02C  1E34               	comf	(___awmod@dividend+1)^0,f,c
  3025   00F02E  B0D8               	btfsc	status,0,c
  3026   00F030  2A34               	incf	(___awmod@dividend+1)^0,f,c
  3027   00F032                     l2216:
  3028   00F032  C033  F033         	movff	___awmod@dividend,?___awmod
  3029   00F036  C034  F034         	movff	___awmod@dividend+1,?___awmod+1
  3030   00F03A  0012               	return		;funcret
  3031   00F03C                     __end_of___awmod:
  3032                           	callstack 0
  3033                           
  3034 ;; *************** function ___awdiv *****************
  3035 ;; Defined at:
  3036 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;  dividend        2    0[COMRAM] int 
  3039 ;;  divisor         2    2[COMRAM] int 
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;  quotient        2    6[COMRAM] int 
  3042 ;;  sign            1    5[COMRAM] unsigned char 
  3043 ;;  counter         1    4[COMRAM] unsigned char 
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  2    0[COMRAM] int 
  3046 ;; Registers used:
  3047 ;;		wreg, status,2, status,0
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3053 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;Total ram usage:        8 bytes
  3058 ;; Hardware stack levels used: 1
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		_main
  3063 ;;		_timer_init
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           	psect	text11
  3068   00F0F6                     __ptext11:
  3069                           	callstack 0
  3070   00F0F6                     ___awdiv:
  3071                           	callstack 29
  3072   00F0F6  0E00               	movlw	0
  3073   00F0F8  6E38               	movwf	___awdiv@sign^0,c
  3074   00F0FA  BE36               	btfsc	(___awdiv@divisor+1)^0,7,c
  3075   00F0FC  EF84  F078         	goto	u1760
  3076   00F100  EF82  F078         	goto	u1761
  3077   00F104                     u1761:
  3078   00F104  EF8A  F078         	goto	l2148
  3079   00F108                     u1760:
  3080   00F108  6C35               	negf	___awdiv@divisor^0,c
  3081   00F10A  1E36               	comf	(___awdiv@divisor+1)^0,f,c
  3082   00F10C  B0D8               	btfsc	status,0,c
  3083   00F10E  2A36               	incf	(___awdiv@divisor+1)^0,f,c
  3084   00F110  0E01               	movlw	1
  3085   00F112  6E38               	movwf	___awdiv@sign^0,c
  3086   00F114                     l2148:
  3087   00F114  BE34               	btfsc	(___awdiv@dividend+1)^0,7,c
  3088   00F116  EF91  F078         	goto	u1770
  3089   00F11A  EF8F  F078         	goto	u1771
  3090   00F11E                     u1771:
  3091   00F11E  EF97  F078         	goto	l2154
  3092   00F122                     u1770:
  3093   00F122  6C33               	negf	___awdiv@dividend^0,c
  3094   00F124  1E34               	comf	(___awdiv@dividend+1)^0,f,c
  3095   00F126  B0D8               	btfsc	status,0,c
  3096   00F128  2A34               	incf	(___awdiv@dividend+1)^0,f,c
  3097   00F12A  0E01               	movlw	1
  3098   00F12C  1A38               	xorwf	___awdiv@sign^0,f,c
  3099   00F12E                     l2154:
  3100   00F12E  0E00               	movlw	0
  3101   00F130  6E3A               	movwf	(___awdiv@quotient+1)^0,c
  3102   00F132  0E00               	movlw	0
  3103   00F134  6E39               	movwf	___awdiv@quotient^0,c
  3104   00F136  5035               	movf	___awdiv@divisor^0,w,c
  3105   00F138  1036               	iorwf	(___awdiv@divisor+1)^0,w,c
  3106   00F13A  B4D8               	btfsc	status,2,c
  3107   00F13C  EFA2  F078         	goto	u1781
  3108   00F140  EFA4  F078         	goto	u1780
  3109   00F144                     u1781:
  3110   00F144  EFCC  F078         	goto	l2176
  3111   00F148                     u1780:
  3112   00F148  0E01               	movlw	1
  3113   00F14A  6E37               	movwf	___awdiv@counter^0,c
  3114   00F14C  EFAC  F078         	goto	l2162
  3115   00F150                     l2160:
  3116   00F150  90D8               	bcf	status,0,c
  3117   00F152  3635               	rlcf	___awdiv@divisor^0,f,c
  3118   00F154  3636               	rlcf	(___awdiv@divisor+1)^0,f,c
  3119   00F156  2A37               	incf	___awdiv@counter^0,f,c
  3120   00F158                     l2162:
  3121   00F158  AE36               	btfss	(___awdiv@divisor+1)^0,7,c
  3122   00F15A  EFB1  F078         	goto	u1791
  3123   00F15E  EFB3  F078         	goto	u1790
  3124   00F162                     u1791:
  3125   00F162  EFA8  F078         	goto	l2160
  3126   00F166                     u1790:
  3127   00F166                     l2164:
  3128   00F166  90D8               	bcf	status,0,c
  3129   00F168  3639               	rlcf	___awdiv@quotient^0,f,c
  3130   00F16A  363A               	rlcf	(___awdiv@quotient+1)^0,f,c
  3131   00F16C  5035               	movf	___awdiv@divisor^0,w,c
  3132   00F16E  5C33               	subwf	___awdiv@dividend^0,w,c
  3133   00F170  5036               	movf	(___awdiv@divisor+1)^0,w,c
  3134   00F172  5834               	subwfb	(___awdiv@dividend+1)^0,w,c
  3135   00F174  A0D8               	btfss	status,0,c
  3136   00F176  EFBF  F078         	goto	u1801
  3137   00F17A  EFC1  F078         	goto	u1800
  3138   00F17E                     u1801:
  3139   00F17E  EFC6  F078         	goto	l2172
  3140   00F182                     u1800:
  3141   00F182  5035               	movf	___awdiv@divisor^0,w,c
  3142   00F184  5E33               	subwf	___awdiv@dividend^0,f,c
  3143   00F186  5036               	movf	(___awdiv@divisor+1)^0,w,c
  3144   00F188  5A34               	subwfb	(___awdiv@dividend+1)^0,f,c
  3145   00F18A  8039               	bsf	___awdiv@quotient^0,0,c
  3146   00F18C                     l2172:
  3147   00F18C  90D8               	bcf	status,0,c
  3148   00F18E  3236               	rrcf	(___awdiv@divisor+1)^0,f,c
  3149   00F190  3235               	rrcf	___awdiv@divisor^0,f,c
  3150   00F192  2E37               	decfsz	___awdiv@counter^0,f,c
  3151   00F194  EFB3  F078         	goto	l2164
  3152   00F198                     l2176:
  3153   00F198  5038               	movf	___awdiv@sign^0,w,c
  3154   00F19A  B4D8               	btfsc	status,2,c
  3155   00F19C  EFD2  F078         	goto	u1811
  3156   00F1A0  EFD4  F078         	goto	u1810
  3157   00F1A4                     u1811:
  3158   00F1A4  EFD8  F078         	goto	l2180
  3159   00F1A8                     u1810:
  3160   00F1A8  6C39               	negf	___awdiv@quotient^0,c
  3161   00F1AA  1E3A               	comf	(___awdiv@quotient+1)^0,f,c
  3162   00F1AC  B0D8               	btfsc	status,0,c
  3163   00F1AE  2A3A               	incf	(___awdiv@quotient+1)^0,f,c
  3164   00F1B0                     l2180:
  3165   00F1B0  C039  F033         	movff	___awdiv@quotient,?___awdiv
  3166   00F1B4  C03A  F034         	movff	___awdiv@quotient+1,?___awdiv+1
  3167   00F1B8  0012               	return		;funcret
  3168   00F1BA                     __end_of___awdiv:
  3169                           	callstack 0
  3170                           
  3171 ;; *************** function _seven_segment_initialize *****************
  3172 ;; Defined at:
  3173 ;;		line 19 in file "ECU_Layer/7_Segment/ecu_sev_segment.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;  seg_config      2   19[COMRAM] PTR const struct .
  3176 ;;		 -> segment_1(5), 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  ret             1    0        unsigned char 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  1    wreg      unsigned char 
  3181 ;; Registers used:
  3182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;Total ram usage:        2 bytes
  3193 ;; Hardware stack levels used: 1
  3194 ;; Hardware stack levels required when called: 2
  3195 ;; This function calls:
  3196 ;;		_gpio_pin_direction_init
  3197 ;; This function is called by:
  3198 ;;		_application_init
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text12
  3203   00EEF8                     __ptext12:
  3204                           	callstack 0
  3205   00EEF8                     _seven_segment_initialize:
  3206                           	callstack 27
  3207   00EEF8                     
  3208                           ;ECU_Layer/7_Segment/ecu_sev_segment.c: 22:     if(((void*)0) == seg_config)
  3209   00EEF8  5046               	movf	seven_segment_initialize@seg_config^0,w,c
  3210   00EEFA  1047               	iorwf	(seven_segment_initialize@seg_config+1)^0,w,c
  3211   00EEFC  A4D8               	btfss	status,2,c
  3212   00EEFE  EF83  F077         	goto	u1881
  3213   00EF02  EF85  F077         	goto	u1880
  3214   00EF06                     u1881:
  3215   00EF06  EF87  F077         	goto	l2226
  3216   00EF0A                     u1880:
  3217   00EF0A                     l2224:
  3218                           
  3219                           ;ECU_Layer/7_Segment/ecu_sev_segment.c: 25:     }
  3220   00EF0A  EFC5  F077         	goto	l11
  3221   00EF0E                     l2226:
  3222                           
  3223                           ;ECU_Layer/7_Segment/ecu_sev_segment.c: 27:     {;ECU_Layer/7_Segment/ecu_sev_segment.c:
      +                           29:         if((gpio_pin_direction_init(&(seg_config -> segment_pins[0]))) &&
  3224   00EF0E  C046  F03D         	movff	seven_segment_initialize@seg_config,gpio_pin_direction_init@_pin_config
  3225   00EF12  C047  F03E         	movff	seven_segment_initialize@seg_config+1,gpio_pin_direction_init@_pin_config+1
  3226   00EF16  ECE5  F079         	call	_gpio_pin_direction_init	;wreg free
  3227   00EF1A  0900               	iorlw	0
  3228   00EF1C  B4D8               	btfsc	status,2,c
  3229   00EF1E  EF93  F077         	goto	u1891
  3230   00EF22  EF95  F077         	goto	u1890
  3231   00EF26                     u1891:
  3232   00EF26  EF85  F077         	goto	l2224
  3233   00EF2A                     u1890:
  3234   00EF2A  0E01               	movlw	1
  3235   00EF2C  2446               	addwf	seven_segment_initialize@seg_config^0,w,c
  3236   00EF2E  6E3D               	movwf	gpio_pin_direction_init@_pin_config^0,c
  3237   00EF30  0E00               	movlw	0
  3238   00EF32  2047               	addwfc	(seven_segment_initialize@seg_config+1)^0,w,c
  3239   00EF34  6E3E               	movwf	(gpio_pin_direction_init@_pin_config+1)^0,c
  3240   00EF36  ECE5  F079         	call	_gpio_pin_direction_init	;wreg free
  3241   00EF3A  0900               	iorlw	0
  3242   00EF3C  B4D8               	btfsc	status,2,c
  3243   00EF3E  EFA3  F077         	goto	u1901
  3244   00EF42  EFA5  F077         	goto	u1900
  3245   00EF46                     u1901:
  3246   00EF46  EF85  F077         	goto	l2224
  3247   00EF4A                     u1900:
  3248   00EF4A  0E02               	movlw	2
  3249   00EF4C  2446               	addwf	seven_segment_initialize@seg_config^0,w,c
  3250   00EF4E  6E3D               	movwf	gpio_pin_direction_init@_pin_config^0,c
  3251   00EF50  0E00               	movlw	0
  3252   00EF52  2047               	addwfc	(seven_segment_initialize@seg_config+1)^0,w,c
  3253   00EF54  6E3E               	movwf	(gpio_pin_direction_init@_pin_config+1)^0,c
  3254   00EF56  ECE5  F079         	call	_gpio_pin_direction_init	;wreg free
  3255   00EF5A  0900               	iorlw	0
  3256   00EF5C  B4D8               	btfsc	status,2,c
  3257   00EF5E  EFB3  F077         	goto	u1911
  3258   00EF62  EFB5  F077         	goto	u1910
  3259   00EF66                     u1911:
  3260   00EF66  EF85  F077         	goto	l2224
  3261   00EF6A                     u1910:
  3262   00EF6A  0E03               	movlw	3
  3263   00EF6C  2446               	addwf	seven_segment_initialize@seg_config^0,w,c
  3264   00EF6E  6E3D               	movwf	gpio_pin_direction_init@_pin_config^0,c
  3265   00EF70  0E00               	movlw	0
  3266   00EF72  2047               	addwfc	(seven_segment_initialize@seg_config+1)^0,w,c
  3267   00EF74  6E3E               	movwf	(gpio_pin_direction_init@_pin_config+1)^0,c
  3268   00EF76  ECE5  F079         	call	_gpio_pin_direction_init	;wreg free
  3269   00EF7A  0900               	iorlw	0
  3270   00EF7C  B4D8               	btfsc	status,2,c
  3271   00EF7E  EFC3  F077         	goto	u1921
  3272   00EF82  EFC5  F077         	goto	u1920
  3273   00EF86                     u1921:
  3274   00EF86  EF85  F077         	goto	l2224
  3275   00EF8A                     u1920:
  3276   00EF8A                     l11:
  3277   00EF8A  0012               	return		;funcret
  3278   00EF8C                     __end_of_seven_segment_initialize:
  3279                           	callstack 0
  3280                           
  3281 ;; *************** function _seven_segment_control_initialize *****************
  3282 ;; Defined at:
  3283 ;;		line 91 in file "ECU_Layer/7_Segment/ecu_sev_segment.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  pin_config      2   19[COMRAM] PTR const struct .
  3286 ;;		 -> segment_1_control(1), segment_2_control(1), segment_3_control(1), segment_4_control(1), 
  3287 ;;		 -> segment_5_control(1), segment_6_control(1), 
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  ret             1    0        unsigned char 
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  1    wreg      unsigned char 
  3292 ;; Registers used:
  3293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3299 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3302 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3303 ;;Total ram usage:        2 bytes
  3304 ;; Hardware stack levels used: 1
  3305 ;; Hardware stack levels required when called: 2
  3306 ;; This function calls:
  3307 ;;		_gpio_pin_direction_init
  3308 ;; This function is called by:
  3309 ;;		_application_init
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text13
  3314   00EC60                     __ptext13:
  3315                           	callstack 0
  3316   00EC60                     _seven_segment_control_initialize:
  3317                           	callstack 27
  3318   00EC60                     
  3319                           ;ECU_Layer/7_Segment/ecu_sev_segment.c: 94:     if(((void*)0) == pin_config)
  3320   00EC60  5046               	movf	seven_segment_control_initialize@pin_config^0,w,c
  3321   00EC62  1047               	iorwf	(seven_segment_control_initialize@pin_config+1)^0,w,c
  3322   00EC64  A4D8               	btfss	status,2,c
  3323   00EC66  EF37  F076         	goto	u1931
  3324   00EC6A  EF39  F076         	goto	u1930
  3325   00EC6E                     u1931:
  3326   00EC6E  EF3B  F076         	goto	l2246
  3327   00EC72                     u1930:
  3328   00EC72                     
  3329                           ;ECU_Layer/7_Segment/ecu_sev_segment.c: 97:     }
  3330   00EC72  EF41  F076         	goto	l25
  3331   00EC76                     l2246:
  3332   00EC76  C046  F03D         	movff	seven_segment_control_initialize@pin_config,gpio_pin_direction_init@_pin_config
  3333   00EC7A  C047  F03E         	movff	seven_segment_control_initialize@pin_config+1,gpio_pin_direction_init@_pin_config
      +                          +1
  3334   00EC7E  ECE5  F079         	call	_gpio_pin_direction_init	;wreg free
  3335   00EC82                     l25:
  3336   00EC82  0012               	return		;funcret
  3337   00EC84                     __end_of_seven_segment_control_initialize:
  3338                           	callstack 0
  3339                           
  3340 ;; *************** function _buzzer_initialization *****************
  3341 ;; Defined at:
  3342 ;;		line 18 in file "ECU_Layer/Buzzer/ecu_buzzer.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  buzzer_confi    2   19[COMRAM] PTR const struct .
  3345 ;;		 -> buzzer(1), 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  ret             1    0        unsigned char 
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  1    wreg      unsigned char 
  3350 ;; Registers used:
  3351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;Total ram usage:        2 bytes
  3362 ;; Hardware stack levels used: 1
  3363 ;; Hardware stack levels required when called: 2
  3364 ;; This function calls:
  3365 ;;		_gpio_pin_direction_init
  3366 ;; This function is called by:
  3367 ;;		_application_init
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text14
  3372   00EC3C                     __ptext14:
  3373                           	callstack 0
  3374   00EC3C                     _buzzer_initialization:
  3375                           	callstack 27
  3376   00EC3C                     
  3377                           ;ECU_Layer/Buzzer/ecu_buzzer.c: 21:     if(((void*)0) == buzzer_config)
  3378   00EC3C  5046               	movf	buzzer_initialization@buzzer_config^0,w,c
  3379   00EC3E  1047               	iorwf	(buzzer_initialization@buzzer_config+1)^0,w,c
  3380   00EC40  A4D8               	btfss	status,2,c
  3381   00EC42  EF25  F076         	goto	u2141
  3382   00EC46  EF27  F076         	goto	u2140
  3383   00EC4A                     u2141:
  3384   00EC4A  EF29  F076         	goto	l2378
  3385   00EC4E                     u2140:
  3386   00EC4E                     
  3387                           ;ECU_Layer/Buzzer/ecu_buzzer.c: 24:     }
  3388   00EC4E  EF2F  F076         	goto	l425
  3389   00EC52                     l2378:
  3390   00EC52  C046  F03D         	movff	buzzer_initialization@buzzer_config,gpio_pin_direction_init@_pin_config
  3391   00EC56  C047  F03E         	movff	buzzer_initialization@buzzer_config+1,gpio_pin_direction_init@_pin_config+1
  3392   00EC5A  ECE5  F079         	call	_gpio_pin_direction_init	;wreg free
  3393   00EC5E                     l425:
  3394   00EC5E  0012               	return		;funcret
  3395   00EC60                     __end_of_buzzer_initialization:
  3396                           	callstack 0
  3397                           
  3398 ;; *************** function _button_initialization *****************
  3399 ;; Defined at:
  3400 ;;		line 17 in file "ECU_Layer/button/ecu_button.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;  btn             2   19[COMRAM] PTR const struct .
  3403 ;;		 -> set_button(3), down_button(3), up_button(3), 
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;  ret             1    0        unsigned char 
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  1    wreg      unsigned char 
  3408 ;; Registers used:
  3409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3419 ;;Total ram usage:        2 bytes
  3420 ;; Hardware stack levels used: 1
  3421 ;; Hardware stack levels required when called: 2
  3422 ;; This function calls:
  3423 ;;		_gpio_pin_direction_init
  3424 ;; This function is called by:
  3425 ;;		_application_init
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text15
  3430   00EC18                     __ptext15:
  3431                           	callstack 0
  3432   00EC18                     _button_initialization:
  3433                           	callstack 27
  3434   00EC18                     
  3435                           ;ECU_Layer/button/ecu_button.c: 21:     if(((void*)0) == btn)
  3436   00EC18  5046               	movf	button_initialization@btn^0,w,c
  3437   00EC1A  1047               	iorwf	(button_initialization@btn+1)^0,w,c
  3438   00EC1C  A4D8               	btfss	status,2,c
  3439   00EC1E  EF13  F076         	goto	u1941
  3440   00EC22  EF15  F076         	goto	u1940
  3441   00EC26                     u1941:
  3442   00EC26  EF17  F076         	goto	l2256
  3443   00EC2A                     u1940:
  3444   00EC2A                     
  3445                           ;ECU_Layer/button/ecu_button.c: 24:     }
  3446   00EC2A  EF1D  F076         	goto	l58
  3447   00EC2E                     l2256:
  3448   00EC2E  C046  F03D         	movff	button_initialization@btn,gpio_pin_direction_init@_pin_config
  3449   00EC32  C047  F03E         	movff	button_initialization@btn+1,gpio_pin_direction_init@_pin_config+1
  3450   00EC36  ECE5  F079         	call	_gpio_pin_direction_init	;wreg free
  3451   00EC3A                     l58:
  3452   00EC3A  0012               	return		;funcret
  3453   00EC3C                     __end_of_button_initialization:
  3454                           	callstack 0
  3455                           
  3456 ;; *************** function _gpio_pin_direction_init *****************
  3457 ;; Defined at:
  3458 ;;		line 24 in file "Mcal_Layer/GPIO/hal_gpio.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;  _pin_config     2   10[COMRAM] PTR const struct .
  3461 ;;		 -> segment_1_control(1), segment_2_control(1), segment_3_control(1), segment_4_control(1), 
  3462 ;;		 -> segment_5_control(1), segment_6_control(1), buzzer(1), segment_1.segment_pins(4), 
  3463 ;;		 -> segment_1(5), set_button(3), down_button(3), up_button(3), 
  3464 ;;		 -> relay_initialization@relay(1), led_initialization@pin_obj(1), 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  ret             1   18[COMRAM] unsigned char 
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      unsigned char 
  3469 ;; Registers used:
  3470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3476 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3477 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3478 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3480 ;;Total ram usage:        9 bytes
  3481 ;; Hardware stack levels used: 1
  3482 ;; Hardware stack levels required when called: 1
  3483 ;; This function calls:
  3484 ;;		_gpio_pin_write_logic
  3485 ;; This function is called by:
  3486 ;;		_seven_segment_initialize
  3487 ;;		_seven_segment_control_initialize
  3488 ;;		_button_initialization
  3489 ;;		_buzzer_initialization
  3490 ;;		_dc_motor_initialization
  3491 ;;		_led_initialization
  3492 ;;		_relay_initialization
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           	psect	text16
  3497   00F3CA                     __ptext16:
  3498                           	callstack 0
  3499   00F3CA                     _gpio_pin_direction_init:
  3500                           	callstack 27
  3501   00F3CA                     
  3502                           ;Mcal_Layer/GPIO/hal_gpio.c: 24: Std_ReturnType gpio_pin_direction_init(const pin_config
      +                          _t * _pin_config);Mcal_Layer/GPIO/hal_gpio.c: 25: {;Mcal_Layer/GPIO/hal_gpio.c: 26:     
      +                          Std_ReturnType ret = (Std_ReturnType)0x01;
  3503   00F3CA  0E01               	movlw	1
  3504   00F3CC  6E45               	movwf	gpio_pin_direction_init@ret^0,c
  3505   00F3CE                     
  3506                           ;Mcal_Layer/GPIO/hal_gpio.c: 27:     if(((void*)0) == _pin_config || _pin_config -> port
      +                           > 5 - 1 || _pin_config -> pin > 8 - 1)
  3507   00F3CE  503D               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  3508   00F3D0  103E               	iorwf	(gpio_pin_direction_init@_pin_config+1)^0,w,c
  3509   00F3D2  B4D8               	btfsc	status,2,c
  3510   00F3D4  EFEE  F079         	goto	u1451
  3511   00F3D8  EFF0  F079         	goto	u1450
  3512   00F3DC                     u1451:
  3513   00F3DC  EF10  F07A         	goto	l2010
  3514   00F3E0                     u1450:
  3515   00F3E0  C03D  FFD9         	movff	gpio_pin_direction_init@_pin_config,fsr2l
  3516   00F3E4  C03E  FFDA         	movff	gpio_pin_direction_init@_pin_config+1,fsr2h
  3517   00F3E8  50DF               	movf	223,w,c
  3518   00F3EA  0B07               	andlw	7
  3519   00F3EC  6E3F               	movwf	??_gpio_pin_direction_init^0,c
  3520   00F3EE  0E05               	movlw	5
  3521   00F3F0  603F               	cpfslt	??_gpio_pin_direction_init^0,c
  3522   00F3F2  EFFD  F079         	goto	u1461
  3523   00F3F6  EFFF  F079         	goto	u1460
  3524   00F3FA                     u1461:
  3525   00F3FA  EF10  F07A         	goto	l2010
  3526   00F3FE                     u1460:
  3527   00F3FE  C03D  FFD9         	movff	gpio_pin_direction_init@_pin_config,fsr2l
  3528   00F402  C03E  FFDA         	movff	gpio_pin_direction_init@_pin_config+1,fsr2h
  3529   00F406  30DF               	rrcf	223,w,c
  3530   00F408  32E8               	rrcf	wreg,f,c
  3531   00F40A  32E8               	rrcf	wreg,f,c
  3532   00F40C  0B07               	andlw	7
  3533   00F40E  6E3F               	movwf	??_gpio_pin_direction_init^0,c
  3534   00F410  0E07               	movlw	7
  3535   00F412  643F               	cpfsgt	??_gpio_pin_direction_init^0,c
  3536   00F414  EF0E  F07A         	goto	u1471
  3537   00F418  EF10  F07A         	goto	u1470
  3538   00F41C                     u1471:
  3539   00F41C  EF82  F07A         	goto	l2020
  3540   00F420                     u1470:
  3541   00F420                     l2010:
  3542                           
  3543                           ;Mcal_Layer/GPIO/hal_gpio.c: 28:     {;Mcal_Layer/GPIO/hal_gpio.c: 29:         ret = (St
      +                          d_ReturnType)0x00;
  3544   00F420  0E00               	movlw	0
  3545   00F422  6E45               	movwf	gpio_pin_direction_init@ret^0,c
  3546                           
  3547                           ;Mcal_Layer/GPIO/hal_gpio.c: 30:     }
  3548   00F424  EFA3  F07A         	goto	l2022
  3549   00F428                     l2012:
  3550                           
  3551                           ;Mcal_Layer/GPIO/hal_gpio.c: 36:                 (*tris_registers[_pin_config -> port] &
      +                          = ~((uint8)1 << _pin_config -> pin));
  3552   00F428  C03D  FFD9         	movff	gpio_pin_direction_init@_pin_config,fsr2l
  3553   00F42C  C03E  FFDA         	movff	gpio_pin_direction_init@_pin_config+1,fsr2h
  3554   00F430  30DF               	rrcf	223,w,c
  3555   00F432  32E8               	rrcf	wreg,f,c
  3556   00F434  32E8               	rrcf	wreg,f,c
  3557   00F436  0B07               	andlw	7
  3558   00F438  6E3F               	movwf	??_gpio_pin_direction_init^0,c
  3559   00F43A  0E01               	movlw	1
  3560   00F43C  6E40               	movwf	(??_gpio_pin_direction_init+1)^0,c
  3561   00F43E  2A3F               	incf	??_gpio_pin_direction_init^0,f,c
  3562   00F440  EF24  F07A         	goto	u1484
  3563   00F444                     u1485:
  3564   00F444  90D8               	bcf	status,0,c
  3565   00F446  3640               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  3566   00F448                     u1484:
  3567   00F448  2E3F               	decfsz	??_gpio_pin_direction_init^0,f,c
  3568   00F44A  EF22  F07A         	goto	u1485
  3569   00F44E  5040               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  3570   00F450  0AFF               	xorlw	255
  3571   00F452  6E41               	movwf	(??_gpio_pin_direction_init+2)^0,c
  3572   00F454  C03D  FFD9         	movff	gpio_pin_direction_init@_pin_config,fsr2l
  3573   00F458  C03E  FFDA         	movff	gpio_pin_direction_init@_pin_config+1,fsr2h
  3574   00F45C  50DF               	movf	223,w,c
  3575   00F45E  0B07               	andlw	7
  3576   00F460  6E42               	movwf	(??_gpio_pin_direction_init+3)^0,c
  3577   00F462  5042               	movf	(??_gpio_pin_direction_init+3)^0,w,c
  3578   00F464  0D02               	mullw	2
  3579   00F466  0E15               	movlw	low _tris_registers
  3580   00F468  24F3               	addwf	243,w,c
  3581   00F46A  6ED9               	movwf	fsr2l,c
  3582   00F46C  0E00               	movlw	high _tris_registers
  3583   00F46E  20F4               	addwfc	prodh,w,c
  3584   00F470  6EDA               	movwf	fsr2h,c
  3585   00F472  CFDE F043          	movff	postinc2,??_gpio_pin_direction_init+4
  3586   00F476  CFDD F044          	movff	postdec2,??_gpio_pin_direction_init+5
  3587   00F47A  C043  FFD9         	movff	??_gpio_pin_direction_init+4,fsr2l
  3588   00F47E  C044  FFDA         	movff	??_gpio_pin_direction_init+5,fsr2h
  3589   00F482  5041               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  3590   00F484  16DF               	andwf	indf2,f,c
  3591   00F486                     
  3592                           ;Mcal_Layer/GPIO/hal_gpio.c: 37:                 ret = gpio_pin_write_logic(_pin_config,
      +                           _pin_config -> logic);
  3593   00F486  C03D  F033         	movff	gpio_pin_direction_init@_pin_config,gpio_pin_write_logic@_pin_config
  3594   00F48A  C03E  F034         	movff	gpio_pin_direction_init@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  3595   00F48E  C03D  FFD9         	movff	gpio_pin_direction_init@_pin_config,fsr2l
  3596   00F492  C03E  FFDA         	movff	gpio_pin_direction_init@_pin_config+1,fsr2h
  3597   00F496  0E00               	movlw	0
  3598   00F498  BEDF               	btfsc	indf2,7,c
  3599   00F49A  0E01               	movlw	1
  3600   00F49C  6E35               	movwf	gpio_pin_write_logic@_logic^0,c
  3601   00F49E  EC40  F079         	call	_gpio_pin_write_logic	;wreg free
  3602   00F4A2  6E45               	movwf	gpio_pin_direction_init@ret^0,c
  3603                           
  3604                           ;Mcal_Layer/GPIO/hal_gpio.c: 38:                 break;
  3605   00F4A4  EFA3  F07A         	goto	l2022
  3606   00F4A8                     l2016:
  3607                           
  3608                           ;Mcal_Layer/GPIO/hal_gpio.c: 40:                 (*tris_registers[_pin_config -> port] |
      +                          = ((uint8)1 << _pin_config -> pin));
  3609   00F4A8  C03D  FFD9         	movff	gpio_pin_direction_init@_pin_config,fsr2l
  3610   00F4AC  C03E  FFDA         	movff	gpio_pin_direction_init@_pin_config+1,fsr2h
  3611   00F4B0  30DF               	rrcf	223,w,c
  3612   00F4B2  32E8               	rrcf	wreg,f,c
  3613   00F4B4  32E8               	rrcf	wreg,f,c
  3614   00F4B6  0B07               	andlw	7
  3615   00F4B8  6E3F               	movwf	??_gpio_pin_direction_init^0,c
  3616   00F4BA  0E01               	movlw	1
  3617   00F4BC  6E40               	movwf	(??_gpio_pin_direction_init+1)^0,c
  3618   00F4BE  2A3F               	incf	??_gpio_pin_direction_init^0,f,c
  3619   00F4C0  EF64  F07A         	goto	u1494
  3620   00F4C4                     u1495:
  3621   00F4C4  90D8               	bcf	status,0,c
  3622   00F4C6  3640               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  3623   00F4C8                     u1494:
  3624   00F4C8  2E3F               	decfsz	??_gpio_pin_direction_init^0,f,c
  3625   00F4CA  EF62  F07A         	goto	u1495
  3626   00F4CE  C03D  FFD9         	movff	gpio_pin_direction_init@_pin_config,fsr2l
  3627   00F4D2  C03E  FFDA         	movff	gpio_pin_direction_init@_pin_config+1,fsr2h
  3628   00F4D6  50DF               	movf	223,w,c
  3629   00F4D8  0B07               	andlw	7
  3630   00F4DA  6E41               	movwf	(??_gpio_pin_direction_init+2)^0,c
  3631   00F4DC  5041               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  3632   00F4DE  0D02               	mullw	2
  3633   00F4E0  0E15               	movlw	low _tris_registers
  3634   00F4E2  24F3               	addwf	243,w,c
  3635   00F4E4  6ED9               	movwf	fsr2l,c
  3636   00F4E6  0E00               	movlw	high _tris_registers
  3637   00F4E8  20F4               	addwfc	prodh,w,c
  3638   00F4EA  6EDA               	movwf	fsr2h,c
  3639   00F4EC  CFDE F042          	movff	postinc2,??_gpio_pin_direction_init+3
  3640   00F4F0  CFDD F043          	movff	postdec2,??_gpio_pin_direction_init+4
  3641   00F4F4  C042  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  3642   00F4F8  C043  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  3643   00F4FC  5040               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  3644   00F4FE  12DF               	iorwf	indf2,f,c
  3645                           
  3646                           ;Mcal_Layer/GPIO/hal_gpio.c: 41:                 break;
  3647   00F500  EFA3  F07A         	goto	l2022
  3648   00F504                     l2020:
  3649   00F504  C03D  FFD9         	movff	gpio_pin_direction_init@_pin_config,fsr2l
  3650   00F508  C03E  FFDA         	movff	gpio_pin_direction_init@_pin_config+1,fsr2h
  3651   00F50C  BCDF               	btfsc	indf2,6,c
  3652   00F50E  EF8B  F07A         	goto	u1501
  3653   00F512  EF8E  F07A         	goto	u1500
  3654   00F516                     u1501:
  3655   00F516  0E01               	movlw	1
  3656   00F518  EF8F  F07A         	goto	u1510
  3657   00F51C                     u1500:
  3658   00F51C  0E00               	movlw	0
  3659   00F51E                     u1510:
  3660   00F51E  6E3F               	movwf	??_gpio_pin_direction_init^0,c
  3661   00F520  6A40               	clrf	(??_gpio_pin_direction_init+1)^0,c
  3662                           
  3663                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3664                           ; Switch size 1, requested type "simple"
  3665                           ; Number of cases is 1, Range of values is 0 to 0
  3666                           ; switch strategies available:
  3667                           ; Name         Instructions Cycles
  3668                           ; simple_byte            4     3 (average)
  3669                           ;	Chosen strategy is simple_byte
  3670   00F522  5040               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  3671   00F524  0A00               	xorlw	0	; case 0
  3672   00F526  B4D8               	btfsc	status,2,c
  3673   00F528  EF98  F07A         	goto	l2706
  3674   00F52C  EF10  F07A         	goto	l2010
  3675   00F530                     l2706:
  3676                           
  3677                           ; Switch size 1, requested type "simple"
  3678                           ; Number of cases is 2, Range of values is 0 to 1
  3679                           ; switch strategies available:
  3680                           ; Name         Instructions Cycles
  3681                           ; simple_byte            7     4 (average)
  3682                           ;	Chosen strategy is simple_byte
  3683   00F530  503F               	movf	??_gpio_pin_direction_init^0,w,c
  3684   00F532  0A00               	xorlw	0	; case 0
  3685   00F534  B4D8               	btfsc	status,2,c
  3686   00F536  EF14  F07A         	goto	l2012
  3687   00F53A  0A01               	xorlw	1	; case 1
  3688   00F53C  B4D8               	btfsc	status,2,c
  3689   00F53E  EF54  F07A         	goto	l2016
  3690   00F542  EF10  F07A         	goto	l2010
  3691   00F546                     l2022:
  3692                           
  3693                           ;Mcal_Layer/GPIO/hal_gpio.c: 45:     return ret;
  3694   00F546  5045               	movf	gpio_pin_direction_init@ret^0,w,c
  3695   00F548  0012               	return		;funcret
  3696   00F54A                     __end_of_gpio_pin_direction_init:
  3697                           	callstack 0
  3698                           
  3699 ;; *************** function _gpio_pin_write_logic *****************
  3700 ;; Defined at:
  3701 ;;		line 80 in file "Mcal_Layer/GPIO/hal_gpio.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  3704 ;;		 -> segment_1_control(1), segment_2_control(1), segment_3_control(1), segment_4_control(1), 
  3705 ;;		 -> segment_5_control(1), segment_6_control(1), buzzer(1), segment_1.segment_pins(4), 
  3706 ;;		 -> segment_1(5), set_button(3), down_button(3), up_button(3), 
  3707 ;;		 -> relay_off@relay(1), relay_on@relay(1), relay_initialization@relay(1), led_off@pin_obj(1), 
  3708 ;;		 -> led_on@pin_obj(1), led_initialization@pin_obj(1), 
  3709 ;;  _logic          1    2[COMRAM] enum E2801
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;  ret             1    9[COMRAM] unsigned char 
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      unsigned char 
  3714 ;; Registers used:
  3715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3721 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3723 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3724 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3725 ;;Total ram usage:       10 bytes
  3726 ;; Hardware stack levels used: 1
  3727 ;; This function calls:
  3728 ;;		Nothing
  3729 ;; This function is called by:
  3730 ;;		_seven_segment_write_number
  3731 ;;		_seven_segment_control_turn_on
  3732 ;;		_seven_segment_control_turn_off
  3733 ;;		_gpio_pin_direction_init
  3734 ;;		_buzzer_on
  3735 ;;		_buzzer_off
  3736 ;;		_dc_motor_move_left
  3737 ;;		_dc_motor_move_right
  3738 ;;		_dc_motor_move_stop
  3739 ;;		_led_on
  3740 ;;		_led_off
  3741 ;;		_relay_on
  3742 ;;		_relay_off
  3743 ;;		_buzzer_beeb
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text17
  3748   00F280                     __ptext17:
  3749                           	callstack 0
  3750   00F280                     _gpio_pin_write_logic:
  3751                           	callstack 28
  3752   00F280                     
  3753                           ;Mcal_Layer/GPIO/hal_gpio.c: 80: Std_ReturnType gpio_pin_write_logic(const pin_config_t 
      +                          * _pin_config, logic_t _logic);Mcal_Layer/GPIO/hal_gpio.c: 81: {;Mcal_Layer/GPIO/hal_gpi
      +                          o.c: 82:     Std_ReturnType ret = (Std_ReturnType)0x01;
  3754   00F280  0E01               	movlw	1
  3755   00F282  6E3C               	movwf	gpio_pin_write_logic@ret^0,c
  3756   00F284                     
  3757                           ;Mcal_Layer/GPIO/hal_gpio.c: 83:     if(((void*)0) == _pin_config || _pin_config -> port
      +                           > 5 - 1 || _pin_config -> pin > 8 - 1)
  3758   00F284  5033               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3759   00F286  1034               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  3760   00F288  B4D8               	btfsc	status,2,c
  3761   00F28A  EF49  F079         	goto	u1361
  3762   00F28E  EF4B  F079         	goto	u1360
  3763   00F292                     u1361:
  3764   00F292  EF6B  F079         	goto	l1970
  3765   00F296                     u1360:
  3766   00F296  C033  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3767   00F29A  C034  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3768   00F29E  50DF               	movf	223,w,c
  3769   00F2A0  0B07               	andlw	7
  3770   00F2A2  6E36               	movwf	??_gpio_pin_write_logic^0,c
  3771   00F2A4  0E05               	movlw	5
  3772   00F2A6  6036               	cpfslt	??_gpio_pin_write_logic^0,c
  3773   00F2A8  EF58  F079         	goto	u1371
  3774   00F2AC  EF5A  F079         	goto	u1370
  3775   00F2B0                     u1371:
  3776   00F2B0  EF6B  F079         	goto	l1970
  3777   00F2B4                     u1370:
  3778   00F2B4  C033  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3779   00F2B8  C034  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3780   00F2BC  30DF               	rrcf	223,w,c
  3781   00F2BE  32E8               	rrcf	wreg,f,c
  3782   00F2C0  32E8               	rrcf	wreg,f,c
  3783   00F2C2  0B07               	andlw	7
  3784   00F2C4  6E36               	movwf	??_gpio_pin_write_logic^0,c
  3785   00F2C6  0E07               	movlw	7
  3786   00F2C8  6436               	cpfsgt	??_gpio_pin_write_logic^0,c
  3787   00F2CA  EF69  F079         	goto	u1381
  3788   00F2CE  EF6B  F079         	goto	u1380
  3789   00F2D2                     u1381:
  3790   00F2D2  EFCE  F079         	goto	l1978
  3791   00F2D6                     u1380:
  3792   00F2D6                     l1970:
  3793                           
  3794                           ;Mcal_Layer/GPIO/hal_gpio.c: 84:     {;Mcal_Layer/GPIO/hal_gpio.c: 85:         ret = (St
      +                          d_ReturnType)0x00;
  3795   00F2D6  0E00               	movlw	0
  3796   00F2D8  6E3C               	movwf	gpio_pin_write_logic@ret^0,c
  3797                           
  3798                           ;Mcal_Layer/GPIO/hal_gpio.c: 86:     }
  3799   00F2DA  EFE3  F079         	goto	l1980
  3800   00F2DE                     l1972:
  3801                           
  3802                           ;Mcal_Layer/GPIO/hal_gpio.c: 92:                 (*lat_registers[_pin_config -> port] &=
      +                           ~((uint8)1 << _pin_config -> pin));
  3803   00F2DE  C033  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3804   00F2E2  C034  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3805   00F2E6  30DF               	rrcf	223,w,c
  3806   00F2E8  32E8               	rrcf	wreg,f,c
  3807   00F2EA  32E8               	rrcf	wreg,f,c
  3808   00F2EC  0B07               	andlw	7
  3809   00F2EE  6E36               	movwf	??_gpio_pin_write_logic^0,c
  3810   00F2F0  0E01               	movlw	1
  3811   00F2F2  6E37               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3812   00F2F4  2A36               	incf	??_gpio_pin_write_logic^0,f,c
  3813   00F2F6  EF7F  F079         	goto	u1394
  3814   00F2FA                     u1395:
  3815   00F2FA  90D8               	bcf	status,0,c
  3816   00F2FC  3637               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3817   00F2FE                     u1394:
  3818   00F2FE  2E36               	decfsz	??_gpio_pin_write_logic^0,f,c
  3819   00F300  EF7D  F079         	goto	u1395
  3820   00F304  5037               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3821   00F306  0AFF               	xorlw	255
  3822   00F308  6E38               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3823   00F30A  C033  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3824   00F30E  C034  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3825   00F312  50DF               	movf	223,w,c
  3826   00F314  0B07               	andlw	7
  3827   00F316  6E39               	movwf	(??_gpio_pin_write_logic+3)^0,c
  3828   00F318  5039               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  3829   00F31A  0D02               	mullw	2
  3830   00F31C  0E0B               	movlw	low _lat_registers
  3831   00F31E  24F3               	addwf	243,w,c
  3832   00F320  6ED9               	movwf	fsr2l,c
  3833   00F322  0E00               	movlw	high _lat_registers
  3834   00F324  20F4               	addwfc	prodh,w,c
  3835   00F326  6EDA               	movwf	fsr2h,c
  3836   00F328  CFDE F03A          	movff	postinc2,??_gpio_pin_write_logic+4
  3837   00F32C  CFDD F03B          	movff	postdec2,??_gpio_pin_write_logic+5
  3838   00F330  C03A  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  3839   00F334  C03B  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  3840   00F338  5038               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3841   00F33A  16DF               	andwf	indf2,f,c
  3842                           
  3843                           ;Mcal_Layer/GPIO/hal_gpio.c: 93:                 break;
  3844   00F33C  EFE3  F079         	goto	l1980
  3845   00F340                     l1974:
  3846                           
  3847                           ;Mcal_Layer/GPIO/hal_gpio.c: 95:                 (*lat_registers[_pin_config -> port] |=
      +                           ((uint8)1 << _pin_config -> pin));
  3848   00F340  C033  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3849   00F344  C034  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3850   00F348  30DF               	rrcf	223,w,c
  3851   00F34A  32E8               	rrcf	wreg,f,c
  3852   00F34C  32E8               	rrcf	wreg,f,c
  3853   00F34E  0B07               	andlw	7
  3854   00F350  6E36               	movwf	??_gpio_pin_write_logic^0,c
  3855   00F352  0E01               	movlw	1
  3856   00F354  6E37               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3857   00F356  2A36               	incf	??_gpio_pin_write_logic^0,f,c
  3858   00F358  EFB0  F079         	goto	u1404
  3859   00F35C                     u1405:
  3860   00F35C  90D8               	bcf	status,0,c
  3861   00F35E  3637               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3862   00F360                     u1404:
  3863   00F360  2E36               	decfsz	??_gpio_pin_write_logic^0,f,c
  3864   00F362  EFAE  F079         	goto	u1405
  3865   00F366  C033  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3866   00F36A  C034  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3867   00F36E  50DF               	movf	223,w,c
  3868   00F370  0B07               	andlw	7
  3869   00F372  6E38               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3870   00F374  5038               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3871   00F376  0D02               	mullw	2
  3872   00F378  0E0B               	movlw	low _lat_registers
  3873   00F37A  24F3               	addwf	243,w,c
  3874   00F37C  6ED9               	movwf	fsr2l,c
  3875   00F37E  0E00               	movlw	high _lat_registers
  3876   00F380  20F4               	addwfc	prodh,w,c
  3877   00F382  6EDA               	movwf	fsr2h,c
  3878   00F384  CFDE F039          	movff	postinc2,??_gpio_pin_write_logic+3
  3879   00F388  CFDD F03A          	movff	postdec2,??_gpio_pin_write_logic+4
  3880   00F38C  C039  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  3881   00F390  C03A  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  3882   00F394  5037               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3883   00F396  12DF               	iorwf	indf2,f,c
  3884                           
  3885                           ;Mcal_Layer/GPIO/hal_gpio.c: 96:                 break;
  3886   00F398  EFE3  F079         	goto	l1980
  3887   00F39C                     l1978:
  3888   00F39C  5035               	movf	gpio_pin_write_logic@_logic^0,w,c
  3889   00F39E  6E36               	movwf	??_gpio_pin_write_logic^0,c
  3890   00F3A0  6A37               	clrf	(??_gpio_pin_write_logic+1)^0,c
  3891                           
  3892                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3893                           ; Switch size 1, requested type "simple"
  3894                           ; Number of cases is 1, Range of values is 0 to 0
  3895                           ; switch strategies available:
  3896                           ; Name         Instructions Cycles
  3897                           ; simple_byte            4     3 (average)
  3898                           ;	Chosen strategy is simple_byte
  3899   00F3A2  5037               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3900   00F3A4  0A00               	xorlw	0	; case 0
  3901   00F3A6  B4D8               	btfsc	status,2,c
  3902   00F3A8  EFD8  F079         	goto	l2708
  3903   00F3AC  EF6B  F079         	goto	l1970
  3904   00F3B0                     l2708:
  3905                           
  3906                           ; Switch size 1, requested type "simple"
  3907                           ; Number of cases is 2, Range of values is 0 to 1
  3908                           ; switch strategies available:
  3909                           ; Name         Instructions Cycles
  3910                           ; simple_byte            7     4 (average)
  3911                           ;	Chosen strategy is simple_byte
  3912   00F3B0  5036               	movf	??_gpio_pin_write_logic^0,w,c
  3913   00F3B2  0A00               	xorlw	0	; case 0
  3914   00F3B4  B4D8               	btfsc	status,2,c
  3915   00F3B6  EF6F  F079         	goto	l1972
  3916   00F3BA  0A01               	xorlw	1	; case 1
  3917   00F3BC  B4D8               	btfsc	status,2,c
  3918   00F3BE  EFA0  F079         	goto	l1974
  3919   00F3C2  EF6B  F079         	goto	l1970
  3920   00F3C6                     l1980:
  3921                           
  3922                           ;Mcal_Layer/GPIO/hal_gpio.c: 100:     return ret;
  3923   00F3C6  503C               	movf	gpio_pin_write_logic@ret^0,w,c
  3924   00F3C8  0012               	return		;funcret
  3925   00F3CA                     __end_of_gpio_pin_write_logic:
  3926                           	callstack 0
  3927                           
  3928 ;; *************** function ___wmul *****************
  3929 ;; Defined at:
  3930 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  multiplier      2    0[COMRAM] unsigned int 
  3933 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  product         2    4[COMRAM] unsigned int 
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  2    0[COMRAM] unsigned int 
  3938 ;; Registers used:
  3939 ;;		wreg, status,2, status,0, prodl, prodh
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3945 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3948 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3949 ;;Total ram usage:        6 bytes
  3950 ;; Hardware stack levels used: 1
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_main
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text18
  3959   00EC84                     __ptext18:
  3960                           	callstack 0
  3961   00EC84                     ___wmul:
  3962                           	callstack 30
  3963   00EC84  5033               	movf	___wmul@multiplier^0,w,c
  3964   00EC86  0235               	mulwf	___wmul@multiplicand^0,c
  3965   00EC88  CFF3 F037          	movff	prodl,___wmul@product
  3966   00EC8C  CFF4 F038          	movff	prodh,___wmul@product+1
  3967   00EC90  5033               	movf	___wmul@multiplier^0,w,c
  3968   00EC92  0236               	mulwf	(___wmul@multiplicand+1)^0,c
  3969   00EC94  50F3               	movf	243,w,c
  3970   00EC96  2638               	addwf	(___wmul@product+1)^0,f,c
  3971   00EC98  5034               	movf	(___wmul@multiplier+1)^0,w,c
  3972   00EC9A  0235               	mulwf	___wmul@multiplicand^0,c
  3973   00EC9C  50F3               	movf	243,w,c
  3974   00EC9E  2638               	addwf	(___wmul@product+1)^0,f,c
  3975   00ECA0  C037  F033         	movff	___wmul@product,?___wmul
  3976   00ECA4  C038  F034         	movff	___wmul@product+1,?___wmul+1
  3977   00ECA8  0012               	return		;funcret
  3978   00ECAA                     __end_of___wmul:
  3979                           	callstack 0
  3980   000000                     
  3981                           	psect	rparam
  3982   000000                     
  3983                           	psect	config
  3984                           
  3985                           ; Padding undefined space
  3986   300000                     	org	3145728
  3987   300000  FF                 	db	255
  3988                           
  3989                           ;Config register CONFIG1H @ 0x300001
  3990                           ;	Oscillator Selection bits
  3991                           ;	OSC = HS, HS oscillator
  3992                           ;	Fail-Safe Clock Monitor Enable bit
  3993                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3994                           ;	Internal/External Oscillator Switchover bit
  3995                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3996   300001                     	org	3145729
  3997   300001  02                 	db	2
  3998                           
  3999                           ;Config register CONFIG2L @ 0x300002
  4000                           ;	Power-up Timer Enable bit
  4001                           ;	PWRT = OFF, PWRT disabled
  4002                           ;	Brown-out Reset Enable bits
  4003                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4004                           ;	Brown Out Reset Voltage bits
  4005                           ;	BORV = 1, 
  4006   300002                     	org	3145730
  4007   300002  09                 	db	9
  4008                           
  4009                           ;Config register CONFIG2H @ 0x300003
  4010                           ;	Watchdog Timer Enable bit
  4011                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4012                           ;	Watchdog Timer Postscale Select bits
  4013                           ;	WDTPS = 32768, 1:32768
  4014   300003                     	org	3145731
  4015   300003  1E                 	db	30
  4016                           
  4017                           ; Padding undefined space
  4018   300004                     	org	3145732
  4019   300004  FF                 	db	255
  4020                           
  4021                           ;Config register CONFIG3H @ 0x300005
  4022                           ;	CCP2 MUX bit
  4023                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4024                           ;	PORTB A/D Enable bit
  4025                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4026                           ;	Low-Power Timer1 Oscillator Enable bit
  4027                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4028                           ;	MCLR Pin Enable bit
  4029                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4030   300005                     	org	3145733
  4031   300005  81                 	db	129
  4032                           
  4033                           ;Config register CONFIG4L @ 0x300006
  4034                           ;	Stack Full/Underflow Reset Enable bit
  4035                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4036                           ;	Single-Supply ICSP Enable bit
  4037                           ;	LVP = OFF, Single-Supply ICSP disabled
  4038                           ;	Extended Instruction Set Enable bit
  4039                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4040                           ;	Background Debugger Enable bit
  4041                           ;	DEBUG = 0x1, unprogrammed default
  4042   300006                     	org	3145734
  4043   300006  81                 	db	129
  4044                           
  4045                           ; Padding undefined space
  4046   300007                     	org	3145735
  4047   300007  FF                 	db	255
  4048                           
  4049                           ;Config register CONFIG5L @ 0x300008
  4050                           ;	Code Protection bit
  4051                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4052                           ;	Code Protection bit
  4053                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4054                           ;	Code Protection bit
  4055                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4056                           ;	Code Protection bit
  4057                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4058   300008                     	org	3145736
  4059   300008  0F                 	db	15
  4060                           
  4061                           ;Config register CONFIG5H @ 0x300009
  4062                           ;	Boot Block Code Protection bit
  4063                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4064                           ;	Data EEPROM Code Protection bit
  4065                           ;	CPD = OFF, Data EEPROM not code-protected
  4066   300009                     	org	3145737
  4067   300009  C0                 	db	192
  4068                           
  4069                           ;Config register CONFIG6L @ 0x30000A
  4070                           ;	Write Protection bit
  4071                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4072                           ;	Write Protection bit
  4073                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4074                           ;	Write Protection bit
  4075                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4076                           ;	Write Protection bit
  4077                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4078   30000A                     	org	3145738
  4079   30000A  0F                 	db	15
  4080                           
  4081                           ;Config register CONFIG6H @ 0x30000B
  4082                           ;	Configuration Register Write Protection bit
  4083                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4084                           ;	Boot Block Write Protection bit
  4085                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4086                           ;	Data EEPROM Write Protection bit
  4087                           ;	WRTD = OFF, Data EEPROM not write-protected
  4088   30000B                     	org	3145739
  4089   30000B  E0                 	db	224
  4090                           
  4091                           ;Config register CONFIG7L @ 0x30000C
  4092                           ;	Table Read Protection bit
  4093                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4094                           ;	Table Read Protection bit
  4095                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4096                           ;	Table Read Protection bit
  4097                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4098                           ;	Table Read Protection bit
  4099                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4100   30000C                     	org	3145740
  4101   30000C  0F                 	db	15
  4102                           
  4103                           ;Config register CONFIG7H @ 0x30000D
  4104                           ;	Boot Block Table Read Protection bit
  4105                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4106   30000D                     	org	3145741
  4107   30000D  40                 	db	64
  4108                           tosu	equ	0xFFF
  4109                           tosh	equ	0xFFE
  4110                           tosl	equ	0xFFD
  4111                           stkptr	equ	0xFFC
  4112                           pclatu	equ	0xFFB
  4113                           pclath	equ	0xFFA
  4114                           pcl	equ	0xFF9
  4115                           tblptru	equ	0xFF8
  4116                           tblptrh	equ	0xFF7
  4117                           tblptrl	equ	0xFF6
  4118                           tablat	equ	0xFF5
  4119                           prodh	equ	0xFF4
  4120                           prodl	equ	0xFF3
  4121                           indf0	equ	0xFEF
  4122                           postinc0	equ	0xFEE
  4123                           postdec0	equ	0xFED
  4124                           preinc0	equ	0xFEC
  4125                           plusw0	equ	0xFEB
  4126                           fsr0h	equ	0xFEA
  4127                           fsr0l	equ	0xFE9
  4128                           wreg	equ	0xFE8
  4129                           indf1	equ	0xFE7
  4130                           postinc1	equ	0xFE6
  4131                           postdec1	equ	0xFE5
  4132                           preinc1	equ	0xFE4
  4133                           plusw1	equ	0xFE3
  4134                           fsr1h	equ	0xFE2
  4135                           fsr1l	equ	0xFE1
  4136                           bsr	equ	0xFE0
  4137                           indf2	equ	0xFDF
  4138                           postinc2	equ	0xFDE
  4139                           postdec2	equ	0xFDD
  4140                           preinc2	equ	0xFDC
  4141                           plusw2	equ	0xFDB
  4142                           fsr2h	equ	0xFDA
  4143                           fsr2l	equ	0xFD9
  4144                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        50
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     31     103
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    buzzer_off@buzzer_config	PTR const struct . size(2) Largest target is 1
		 -> buzzer(COMRAM[1]), 

    buzzer_on@buzzer_config	PTR const struct . size(2) Largest target is 1
		 -> buzzer(COMRAM[1]), 

    buzzer_initialization@buzzer_config	PTR const struct . size(2) Largest target is 1
		 -> buzzer(COMRAM[1]), 

    gpio_pin_read_logic@_logic	PTR enum E2801 size(2) Largest target is 1
		 -> button_read_logic@Pin_Logic_Status(COMRAM[1]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(2) Largest target is 3
		 -> set_button(COMRAM[3]), down_button(COMRAM[3]), up_button(COMRAM[3]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 5
		 -> segment_1_control(COMRAM[1]), segment_2_control(COMRAM[1]), segment_3_control(COMRAM[1]), segment_4_control(COMRAM[1]), 
		 -> segment_5_control(COMRAM[1]), segment_6_control(COMRAM[1]), buzzer(COMRAM[1]), segment_1.segment_pins(COMRAM[4]), 
		 -> segment_1(COMRAM[5]), set_button(COMRAM[3]), down_button(COMRAM[3]), up_button(COMRAM[3]), 
		 -> relay_off@relay(COMRAM[1]), relay_on@relay(COMRAM[1]), relay_initialization@relay(COMRAM[1]), led_off@pin_obj(COMRAM[1]), 
		 -> led_on@pin_obj(COMRAM[1]), led_initialization@pin_obj(COMRAM[1]), 

    gpio_pin_direction_init@_pin_config	PTR const struct . size(2) Largest target is 5
		 -> segment_1_control(COMRAM[1]), segment_2_control(COMRAM[1]), segment_3_control(COMRAM[1]), segment_4_control(COMRAM[1]), 
		 -> segment_5_control(COMRAM[1]), segment_6_control(COMRAM[1]), buzzer(COMRAM[1]), segment_1.segment_pins(COMRAM[4]), 
		 -> segment_1(COMRAM[5]), set_button(COMRAM[3]), down_button(COMRAM[3]), up_button(COMRAM[3]), 
		 -> relay_initialization@relay(COMRAM[1]), led_initialization@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    button_read_logic@btn	PTR const struct . size(2) Largest target is 3
		 -> set_button(COMRAM[3]), down_button(COMRAM[3]), up_button(COMRAM[3]), 

    button_read_logic@state	PTR enum E2859 size(2) Largest target is 1
		 -> down_button_state(COMRAM[1]), up_button_state(COMRAM[1]), set_button_state(COMRAM[1]), 

    button_initialization@btn	PTR const struct . size(2) Largest target is 3
		 -> set_button(COMRAM[3]), down_button(COMRAM[3]), up_button(COMRAM[3]), 

    seven_segment_control_turn_off@pin_config	PTR const struct . size(2) Largest target is 1
		 -> segment_1_control(COMRAM[1]), segment_2_control(COMRAM[1]), segment_3_control(COMRAM[1]), segment_4_control(COMRAM[1]), 
		 -> segment_5_control(COMRAM[1]), segment_6_control(COMRAM[1]), 

    seven_segment_control_turn_off@seg_config	PTR const struct . size(2) Largest target is 5
		 -> segment_1(COMRAM[5]), 

    seven_segment_control_turn_on@pin_config	PTR const struct . size(2) Largest target is 1
		 -> segment_1_control(COMRAM[1]), segment_2_control(COMRAM[1]), segment_3_control(COMRAM[1]), segment_4_control(COMRAM[1]), 
		 -> segment_5_control(COMRAM[1]), segment_6_control(COMRAM[1]), 

    seven_segment_control_turn_on@seg_config	PTR const struct . size(2) Largest target is 5
		 -> segment_1(COMRAM[5]), 

    seven_segment_control_initialize@pin_config	PTR const struct . size(2) Largest target is 1
		 -> segment_1_control(COMRAM[1]), segment_2_control(COMRAM[1]), segment_3_control(COMRAM[1]), segment_4_control(COMRAM[1]), 
		 -> segment_5_control(COMRAM[1]), segment_6_control(COMRAM[1]), 

    seven_segment_write_number@seg_config	PTR const struct . size(2) Largest target is 5
		 -> segment_1(COMRAM[5]), 

    seven_segment_initialize@seg_config	PTR const struct . size(2) Largest target is 5
		 -> segment_1(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _buzzer_on->_gpio_pin_write_logic
    _buzzer_off->_gpio_pin_write_logic
    _application_init->_button_initialization
    _application_init->_buzzer_initialization
    _application_init->_seven_segment_control_initialize
    _application_init->_seven_segment_initialize
    _timer_init->_button_read_logic
    _timer_init->_seven_segment_control_turn_off
    _timer_init->_seven_segment_control_turn_on
    _seven_segment_write_number->_gpio_pin_write_logic
    _seven_segment_control_turn_on->_gpio_pin_write_logic
    _seven_segment_control_turn_off->_gpio_pin_write_logic
    _button_read_logic->_gpio_pin_read_logic
    _seven_segment_initialize->_gpio_pin_direction_init
    _seven_segment_control_initialize->_gpio_pin_direction_init
    _buzzer_initialization->_gpio_pin_direction_init
    _button_initialization->_gpio_pin_direction_init
    _gpio_pin_direction_init->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0  101570
                                             21 COMRAM    10    10      0
                            ___awdiv
                            ___awmod
                             ___wmul
                   _application_init
                  _button_read_logic
                         _buzzer_off
                          _buzzer_on
     _seven_segment_control_turn_off
      _seven_segment_control_turn_on
         _seven_segment_write_number
                         _timer_init
 ---------------------------------------------------------------------------------
 (1) _buzzer_on                                            3     1      2    4130
                                             10 COMRAM     2     0      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _buzzer_off                                           3     1      2    4206
                                             10 COMRAM     2     0      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _application_init                                     0     0      0   44945
              _button_initialization
              _buzzer_initialization
   _seven_segment_control_initialize
           _seven_segment_initialize
                         _timer_init
 ---------------------------------------------------------------------------------
 (1) _timer_init                                           0     0      0   23499
                            ___awdiv
                            ___awmod
                  _button_read_logic
     _seven_segment_control_turn_off
      _seven_segment_control_turn_on
         _seven_segment_write_number
 ---------------------------------------------------------------------------------
 (2) _seven_segment_write_number                           4     1      3    6054
                                             10 COMRAM     3     0      3
                            ___awdiv (ARG)
                            ___awmod (ARG)
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _seven_segment_control_turn_on                        6     2      4    5968
                                             10 COMRAM     5     1      4
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _seven_segment_control_turn_off                       6     2      4    5968
                                             10 COMRAM     5     1      4
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _button_read_logic                                    7     3      4    3089
                                              9 COMRAM     6     2      4
                _gpio_pin_read_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_read_logic                                 10     6      4     900
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1212
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _seven_segment_initialize                             3     1      2    5278
                                             19 COMRAM     2     0      2
            _gpio_pin_direction_init
 ---------------------------------------------------------------------------------
 (2) _seven_segment_control_initialize                     3     1      2    5592
                                             19 COMRAM     2     0      2
            _gpio_pin_direction_init
 ---------------------------------------------------------------------------------
 (2) _buzzer_initialization                                3     1      2    5212
                                             19 COMRAM     2     0      2
            _gpio_pin_direction_init
 ---------------------------------------------------------------------------------
 (2) _button_initialization                                3     1      2    5364
                                             19 COMRAM     2     0      2
            _gpio_pin_direction_init
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_init                              9     7      2    5083
                                             10 COMRAM     9     7      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                10     7      3    4001
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1267
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   ___wmul
   _application_init
     _button_initialization
       _gpio_pin_direction_init
         _gpio_pin_write_logic
     _buzzer_initialization
       _gpio_pin_direction_init
     _seven_segment_control_initialize
       _gpio_pin_direction_init
     _seven_segment_initialize
       _gpio_pin_direction_init
     _timer_init
       ___awdiv
       ___awmod
       _button_read_logic
         _gpio_pin_read_logic
       _seven_segment_control_turn_off
         _gpio_pin_write_logic
       _seven_segment_control_turn_on
         _gpio_pin_write_logic
       _seven_segment_write_number
         ___awdiv (ARG)
         ___awmod (ARG)
         _gpio_pin_write_logic (ARG)
   _button_read_logic
   _buzzer_off
     _gpio_pin_write_logic
   _buzzer_on
     _gpio_pin_write_logic
   _seven_segment_control_turn_off
   _seven_segment_control_turn_on
   _seven_segment_write_number
   _timer_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1F      67       1       81.1%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      67      39        0.0%
DATA                 0      0      67       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Aug 08 14:08:40 2023

                                        l11 EF8A                                          l20 F27E  
                                        l25 EC82                                          l36 EE6C  
                                        l47 EDE6                                          l72 F6DC  
                                        l81 F6DC                                          l58 EC3A  
                              ___awdiv@sign 0038                         ___wmul@multiplicand 0035  
  __end_of_seven_segment_control_initialize EC84          ??_seven_segment_control_initialize 0048  
         ?_seven_segment_control_initialize 0046            _seven_segment_control_initialize EC60  
                                       l222 F548                                         l400 F9AC  
                                       l241 F3C8                                         l404 FB34  
                                       l414 FB6C                                         l430 ECF8  
                                       l407 FB02                                         l248 F0F4  
                                       l425 EC5E                                         l409 FB30  
                                       l443 ECA8                                         l435 ECD0  
                                       l363 FFF8                                         l381 EEF6  
                                       l391 F828                                         l386 F82C  
                                       l395 F9B0                                         l389 F7FA  
                                       l398 F97E                                         l674 F1B8  
                                       l687 F03A                                         _ret 005B  
                                       _var 0056                                ___awmod@sign 0038  
                                       prod 0FF3                                         wreg 0FE8  
               ?_seven_segment_write_number 003D                                 led_on@F2884 0062  
                                      l2010 F420                                        l2002 F3CA  
                                      l2012 F428                                        l2020 F504  
                                      l2004 F3CE                                        l2100 F57C  
                                      l2014 F486                                        l2022 F546  
                                      l2006 F3E0                                        l2110 F5CE  
                                      l2102 F580                                        l2030 F1BA  
                                      l2016 F4A8                                        l2008 F3FE  
                                      l2200 EFDA                                        l2120 F624  
                                      l2112 F5E2                                        l2104 F594  
                                      l2040 F202                                        l2032 F1BA  
                                      l2210 F014                                        l2202 EFE2  
                                      l2130 F686                                        l2114 F5F2  
                                      l2106 F5B0                                        l2122 F638  
                                      l2042 F22A                                        l2034 F1CC  
                                      l2220 EEF8                                        l2140 F0F6  
                                      l2204 EFF0                                        l2212 F01A  
                                      l2132 F696                                        l2124 F654  
                                      l2116 F602                                        l2108 F5C0  
                                      l2060 EE10                                        l2052 EDE8  
                                      l2044 F254                                        l2036 F1DC  
                                      l2300 F89E                                        l2230 EF4A  
                                      l2222 EEF8                                        l2150 F122  
                                      l2142 F0FA                                        l2214 F02A  
                                      l2206 F006                                        l2134 F6A6  
                                      l2126 F664                                        l2118 F616  
                                      l2062 EE2C                                        l2054 EDE8  
                                      l2038 F1E0                                        l2310 F954  
                                      l2302 F8BA                                        l2240 EC60  
                                      l2232 EF6A                                        l2224 EF0A  
                                      l2160 F150                                        l2152 F12A  
                                      l2144 F108                                        l2216 F032  
                                      l2208 F00E                                        l2136 F6BA  
                                      l2128 F672                                        l2080 ED8A  
                                      l2072 ED62                                        l2064 EE40  
                                      l2056 EDFA                                        l2320 F992  
                                      l2312 F964                                        l2304 F8E0  
                                      l2400 ECC0                                        l2250 EC18  
                                      l2242 EC60                                        l2226 EF0E  
                                      l2170 F18A                                        l2162 F158  
                                      l2154 F12E                                        l2146 F110  
                                      l2138 F6C8                                        l2082 EDA6  
                                      l2074 ED62                                        l2066 EE5C  
                                      l2058 EE0C                                        l2330 F9D4  
                                      l2322 F994                                        l2314 F966  
                                      l2306 F8FC                                        l2404 EC84  
                                      l2252 EC18                                        l2244 EC72  
                                      l2228 EF2A                                        l2180 F1B0  
                                      l2172 F18C                                        l2164 F166  
                                      l2156 F136                                        l2148 F114  
                                      l2092 F54A                                        l2084 EDBA  
                                      l2076 ED74                                        l2340 FA64  
                                      l2332 F9E0                                        l2324 F9A8  
                                      l2316 F97A                                        l2308 F910  
                                      l2260 F6DE                                        l2406 ECA0  
                                      l2254 EC2A                                        l2246 EC76  
                                      l2174 F192                                        l2166 F16C  
                                      l2158 F148                                        l2190 EFA6  
                                      l2094 F54E                                        l2086 EDD6  
                                      l2078 ED86                                        l2350 FAEA  
                                      l2342 FA80                                        l2334 FA1A  
                                      l2326 F9C0                                        l2318 F982  
                                      l2270 F77C                                        l2262 F6E4  
                                      l2256 EC2E                                        l2168 F182  
                                      l2176 F198                                        l2192 EFAA  
                                      l2184 EF8C                                        l2096 F558  
                                      l2360 FB2C                                        l2352 FAFE  
                                      l2344 FA94                                        l2336 FA22  
                                      l2328 F9D0                                        l2280 F7F6  
                                      l2272 F792                                        l2264 F6F0  
                                      l2600 FD06                                        l2178 F1A8  
                                      l2194 EFB8                                        l2186 EF90  
                                      l2098 F56A                                        l2362 FB44  
                                      l2354 FB06                                        l2346 FAD8  
                                      l2338 FA3E                                        l2290 F83C  
                                      l2282 F7FE                                        l2274 F7D0  
                                      l2266 F72A                                        l2370 FB5E  
                                      l2610 FD4E                                        l2602 FD10  
                                      l2372 EC3C                                        l2196 EFC0  
                                      l2188 EF9E                                        l2364 FB54  
                                      l2356 FB16                                        l2348 FAE8  
                                      l2292 F84C                                        l2284 F80E  
                                      l2276 F7E0                                        l2268 F740  
                                      l2620 FDC8                                        l2612 FD56  
                                      l2374 EC3C                                        l2198 EFD2  
                                      l2366 FB58                                        l2358 FB18  
                                      l2294 F850                                        l2286 F810  
                                      l2278 F7E2                                        l2382 EE6E  
                                      l2390 ECE8                                        l2630 FE70  
                                      l2622 FE0A                                        l2614 FD72  
                                      l2376 EC4E                                        l2368 FB5C  
                                      l2296 F85C                                        l2288 F824  
                                      l2384 ECD2                                        l2640 FF10  
                                      l2632 FE84                                        l2624 FE12  
                                      l2616 FD98                                        l2608 FD14  
                                      l2706 F530                                        l2378 EC52  
                                      l2298 F896                                        l2394 ECAA  
                                      l2386 ECD2                                        l2650 FF5E  
                                      l2642 FF2C                                        l2634 FEC6  
                                      l2626 FE2E                                        l2618 FDB4  
                                      l2570 FB6E                                        l2708 F3B0  
                                      l2396 ECAA                                        l2388 ECE4  
                                      l2660 FFAC                                        l2652 FF60  
                                      l2644 FF40                                        l2636 FECE  
                                      l2628 FE54                                        l2580 FC32  
                                      l2572 FB72                                        l2398 ECBC  
                                      l2670 FFD8                                        l2662 FFB0  
                                      l2654 FF74                                        l2646 FF48  
                                      l2638 FEEA                                        l2590 FC6C  
                                      l2582 FC42                                        l2574 FBDA  
                                      l2672 FFE2                                        l2664 FFB2  
                                      l2656 FF84                                        l2648 FF4A  
                                      l2592 FC7C                                        l2584 FC44  
                                      l2576 FBF0                                        l1970 F2D6  
                                      l1962 F280                                        l2674 FFE8  
                                      l2666 FFC0                                        l2658 FF94  
                                      l2594 FC80                                        l2586 FC50  
                                      l2578 FBFE                                        l1972 F2DE  
                                      l1980 F3C6                                        l1964 F284  
                                      l2676 FFF0                                        l2668 FFC4  
                                      l2596 FCE8                                        l2588 FC60  
                                      l1974 F340                                        l1966 F296  
                                      l1990 F03C                                        l2598 FCF0  
                                      l1968 F2B4                                        l1992 F04E  
                                      l1978 F39C                                        l1994 F06C  
                                      l1996 F08E                                        l1988 F03C  
                                      l1998 F092                       _buzzer_initialization EC3C  
                                      u2000 F84C                                        u2001 F848  
                                      u2010 F964                                        u2011 F960  
                                      u2100 FB2C                                        u2020 F97A  
                                      u2101 FB28                                        u2021 F976  
                                      u2110 FB44                                        u2030 F992  
                                      u2111 FB40                                        u2031 F98E  
                                      u2120 FB54                                        u2040 F9A8  
                                      u2121 FB50                                        u2041 F9A4  
                                      u1410 F04E                                        u2130 FB6C  
                                      u2050 F9C0                                        u1411 F04A  
                                      u2131 FB68                                        u2051 F9BC  
                                      u1404 F360                                        u1500 F51C  
                                      u2140 EC4E                                        u1420 F06C  
                                      u2060 F9D0                                        u1405 F35C  
                                      u1501 F516                                        u2141 EC4A  
                                      u1421 F068                                        u2061 F9CC  
                                      _LATA 0F89                                        u1510 F51E  
                                      u1430 F08E                                        u2070 FAE8  
                                      u2150 ECE4                                        _LATB 0F8A  
                                      u1431 F08A                                        u2071 FAE4  
                                      u2151 ECE0                                        _LATC 0F8B  
                                      u1360 F296                                        u1600 EE2C  
                                      u1520 F1CC                                        u2080 FAFE  
                                      u2160 ECBC                                        _LATD 0F8C  
                                      u1361 F292                                        u1601 EE28  
                                      u1521 F1C8                                        u2081 FAFA  
                                      u2161 ECB8                                        _LATE 0F8D  
                                      u1370 F2B4                                        u1450 F3E0  
                                      u1610 EE5C                                        u1530 F1DC  
                                      u2090 FB16                                        u2410 FBF0  
                                      u1371 F2B0                                        u1451 F3DC  
                                      u1611 EE58                                        u1531 F1D8  
                                      u2091 FB12                                        u2411 FBEC  
                                      u1380 F2D6                                        u1460 F3FE  
                                      u1444 F0E0                                        u1700 F5F2  
                                      u1620 ED74                                        u1540 F202  
                                      u2500 FFC0                                        u2420 FBFE  
                                      u1381 F2D2                                        u1461 F3FA  
                                      u1445 F0DC                                        u1701 F5EE  
                                      u1621 ED70                                        u1541 F1FE  
                                      u2501 FFBC                                        u2421 FBFA  
                                      u1470 F420                                        u1710 F634  
                                      u1630 ED86                                        u1550 F22A  
                                      u2510 FFD8                                        u2430 FC42  
                                      u1471 F41C                                        u1711 F630  
                                      u1631 ED82                                        u1551 F226  
                                      u2511 FFD4                                        u2431 FC3E  
                                      u1800 F182                                        u1720 F654  
                                      u1640 EDA6                                        u1560 F254  
                                      u2440 FC60                                        u1801 F17E  
                                      u1721 F650                                        u1641 EDA2  
                                      u1561 F250                                        u2441 FC5C  
                                      u1394 F2FE                                        u1810 F1A8  
                                      u1730 F664                                        u1650 EDD6  
                                      u1570 F27E                                        u2450 FD06  
                                      u1395 F2FA                                        u1811 F1A4  
                                      u1731 F660                                        u1651 EDD2  
                                      u1571 F27A                                        u2451 FD02  
                                      u1484 F448                                        u1900 EF4A  
                                      u1820 EF9E                                        u1740 F696  
                                      u1660 F56A                                        u1580 EDFA  
                                      u2460 FF5E                                        u1485 F444  
                                      u1901 EF46                                        u1821 EF9A  
                                      u1741 F692                                        u1661 F566  
                                      u1581 EDF6                                        u2461 FF5A  
                                      u1494 F4C8                                        u1910 EF6A  
                                      u1830 EFB8                                        u1750 F6D8  
                                      u1670 F57C                                        u1590 EE0C  
                                      u2470 FF74                                        u1495 F4C4  
                                      u1911 EF66                                        u1831 EFB4  
                                      u1751 F6D4                                        u1671 F578  
                                      u1591 EE08                                        u2471 FF70  
                                      u2607 FE6A                                        u1920 EF8A  
                                      u1760 F108                                        u1840 EFD2  
                                      u1680 F5B0                                        u2480 FF84  
                                      u1921 EF86                                        u1761 F104  
                                      u1841 EFCE                                        u1681 F5AC  
                                      u2481 FF80                                        u2617 FE86  
                                      u2537 FC72                                        u1930 EC72  
                                      u1770 F122                                        u1850 EFF0  
                                      u1690 F5C0                                        u2490 FF94  
                                      u1931 EC6E                                        u1771 F11E  
                                      u1851 EFEC                                        u1691 F5BC  
                                      u2707 FA1C                                        u2491 FF90  
                                      u2627 FEC8                                        u2547 FD50  
                                      u1940 EC2A                                        u1780 F148  
                                      u1860 F006                                        u1941 EC26  
                                      u1781 F144                                        u1861 F002  
                                      u2717 FA38                                        u2637 FEE4  
                                      u2557 FD6C                                        u1790 F166  
                                      u1870 F02A                                        u1950 F7E0  
                                      u1791 F162                                        u1871 F026  
                                      u2727 FA7A                                        u1951 F7DC  
                                      u2647 FF26                                        u2567 FDAE  
                                      u1880 EF0A                                        u1960 F7F6  
                                      u1881 EF06                                        u2737 FA96  
                                      u1961 F7F2                                        u2657 FF42  
                                      u2577 FDCA                                        u1890 EF2A  
                                      u1970 F80E                                        u1891 EF26  
                                      u2747 F5C6                                        u2667 F898  
                                      u1971 F80A                                        u2587 FE0C  
                                      u1980 F824                                        u2757 F61C  
                                      u2677 F8B4                                        u1981 F820  
                                      u2597 FE28                                        u1990 F83C  
                                      u2767 F66A                                        u2687 F8F6  
                                      u1991 F838                                        u2777 F6C0  
                                      u2697 F912              gpio_pin_read_logic@_pin_config 0033  
                                      _main FB6E                                        fsr2h 0FDA  
                                      indf2 0FDF                                        fsr1l 0FE1  
                                      fsr2l 0FD9                    ?_gpio_pin_direction_init 003D  
                                      prodh 0FF4                                        prodl 0FF3  
                                      start 0000                                ___param_bank 0000  
                      _gpio_pin_write_logic F280                                       ?_main 0033  
                           __end_of___awdiv F1BA                             __end_of___awmod F03C  
                           ___awdiv@divisor 0035                                led_off@F2889 0061  
                           ___awdiv@counter 0037                                       _PORTA 0F80  
                                     _PORTB 0F81                                       _PORTC 0F82  
                                     _PORTD 0F83                                       _PORTE 0F84  
                         _down_button_state 0065                     ??_button_initialization 0048  
                                     _TRISA 0F92                                       _TRISB 0F93  
                                     _TRISC 0F94                                       _TRISD 0F95  
                                     _TRISE 0F96                                       _hours 005A  
                                     tablat 0FF5                                       status 0FD8  
                           __initialization ED2C                                __end_of_main 0000  
                     ?_gpio_pin_write_logic 0033                               _lat_registers 000B  
                                    ??_main 0048                               __activetblptr 0002  
                         _button_read_logic F54A                      ?_buzzer_initialization 0046  
                          ___awdiv@dividend 0033                     led_initialization@F2879 0063  
                        ?_button_read_logic 003C                         ??_button_read_logic 0040  
                    button_read_logic@state 003E                                      ___wmul EC84  
                                 ??___awdiv 0037                                   ??___awmod 0037  
                                    _buzzer 0067                                      clear_0 ED52  
                          ___awdiv@quotient 0039                             ___awmod@divisor 0035  
                                    isa$std 0001                             ___awmod@counter 0037  
                              __pdataCOMRAM 0001                   __end_of_button_read_logic F6DE  
                                    tblptrh 0FF7                                      tblptrl 0FF6  
                                    tblptru 0FF8                                  __accesstop 0080  
                   __end_of__initialization ED58                               ___rparam_used 0001  
                    ??_gpio_pin_write_logic 0036                              __pcstackCOMRAM 0033  
                          _application_init EE6E                        button_read_logic@btn 003C  
                            _total_secondes 0052     seven_segment_control_turn_on@seg_config 003D  
   seven_segment_control_turn_on@pin_config 003F          gpio_pin_direction_init@_pin_config 003D  
                                   ?___wmul 0033            ??_seven_segment_control_turn_off 0041  
           ?_seven_segment_control_turn_off 003D                             led_toggle@F2894 0060  
                  _seven_segment_initialize EEF8               __end_of_button_initialization EC3C  
           ??_seven_segment_control_turn_on 0041                              _tris_registers 0015  
                                   __Hparam 0000                                     __Lparam 0000  
seven_segment_control_initialize@pin_config 0046                         _gpio_pin_read_logic F03C  
                                   ___awdiv F0F6                                     ___awmod EF8C  
                                   __pcinit ED2C                                     __ramtop 1000  
                                   __ptext0 FB6E                                     __ptext1 ECD2  
                                   __ptext2 ECAA                                     __ptext3 EE6E  
                                   __ptext4 F6DE                                     __ptext5 F1BA  
                                   __ptext6 EDE8                                     __ptext7 ED62  
                                   __ptext8 F54A                                     __ptext9 F03C  
                             relay_on@F2883 005E                                     _counter 0057  
                   ??_buzzer_initialization 0048                            ___awmod@dividend 0033  
                                _buzzer_off ECAA                                     _minutes 0059  
                                   _seconds 0058                           __end_of_buzzer_on ECFA  
                      ?_gpio_pin_read_logic 0033                        end_of_initialization ED58  
                             __Lmediumconst 0000                                  _set_button 0024  
                                   postdec1 0FE5                                     postdec2 0FDD  
                                   postinc0 0FEE                                     postinc2 0FDE  
      seven_segment_write_number@seg_config 003D                                  _timer_init F6DE  
                  button_initialization@btn 0046                       ??_gpio_pin_read_logic 0037  
                  __end_of_application_init EEF8       __end_of_seven_segment_control_turn_on EE6E  
             _seven_segment_control_turn_on EDE8                     _gpio_pin_direction_init F3CA  
                            __end_of___wmul ECAA                               __pidataCOMRAM ECFA  
                       start_initialization ED2C                                 ?_buzzer_off 003D  
              ??_seven_segment_write_number 0040                                    ??___wmul 0037  
                ??_seven_segment_initialize 0048                                 ?_timer_init 0033  
  seven_segment_control_turn_off@seg_config 003D                                 __pbssCOMRAM 0052  
  seven_segment_control_turn_off@pin_config 003F      __end_of_seven_segment_control_turn_off EDE8  
            _seven_segment_control_turn_off ED62                   ??_gpio_pin_direction_init 003F  
            ?_seven_segment_control_turn_on 003D             gpio_pin_write_logic@_pin_config 0033  
                                  ?___awdiv 0033                                    ?___awmod 0033  
             __end_of_buzzer_initialization EC60                       _button_initialization EC18  
                                 _buzzer_on ECD2                              ___wmul@product 0037  
                                 _loop_flag 005C                                   _segment_1 001F  
        seven_segment_initialize@seg_config 0046                     buzzer_off@buzzer_config 003D  
                                 _up_button 002A                           ___wmul@multiplier 0033  
                         _segment_1_control 0032                           _segment_2_control 0031  
        __end_of_seven_segment_write_number F280                  _seven_segment_write_number F1BA  
                         _segment_3_control 0030             __end_of_gpio_pin_direction_init F54A  
                         _segment_4_control 002F                           _segment_5_control 002E  
                   gpio_pin_write_logic@ret 003C                           ?_application_init 0033  
                                 copy_data0 ED40                           _segment_6_control 002D  
                                ?_buzzer_on 003D                   relay_initialization@F2878 005F  
                        ??_application_init 0048                                    __Hrparam 0000  
                               _down_button 0027                                    __Lrparam 0000  
          __end_of_seven_segment_initialize EF8C          buzzer_initialization@buzzer_config 0046  
               __end_of_gpio_pin_read_logic F0F6                                ??_buzzer_off 003F  
                                  _main$570 0050                                    __ptext10 EF8C  
                                  __ptext11 F0F6                                    __ptext12 EEF8  
                                  __ptext13 EC60                                    __ptext14 EC3C  
                                  __ptext15 EC18                                    __ptext16 F3CA  
                                  __ptext17 F280                                    __ptext18 EC84  
                    ?_button_initialization 0046                      buzzer_on@buzzer_config 003D  
                            relay_off@F2888 005D                                    isa$xinst 0000  
                        __end_of_buzzer_off ECD2                   gpio_pin_read_logic@_logic 0035  
                              ??_timer_init 0042            seven_segment_write_number@number 003F  
         button_read_logic@Pin_Logic_Status 0041                __end_of_gpio_pin_write_logic F3CA  
                               ??_buzzer_on 003F                          __end_of_timer_init FB6E  
                          _set_button_state 0064                  gpio_pin_write_logic@_logic 0035  
                            _port_registers 0001                  gpio_pin_direction_init@ret 0045  
                 ?_seven_segment_initialize 0046                             _up_button_state 0066  
